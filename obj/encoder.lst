ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"encoder.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "src/encoder.c"
  18              		.global	reset_encoder_count
  19              		.section	.rodata
  20              		.align	2
  21              		.type	reset_encoder_count, %object
  22              		.size	reset_encoder_count, 4
  23              	reset_encoder_count:
  24 0000 FF7F0000 		.word	32767
  25              		.global	current_millis
  26              		.bss
  27              		.align	2
  28              		.type	current_millis, %object
  29              		.size	current_millis, 4
  30              	current_millis:
  31 0000 00000000 		.space	4
  32              		.global	previous_millis
  33              		.align	2
  34              		.type	previous_millis, %object
  35              		.size	previous_millis, 4
  36              	previous_millis:
  37 0004 00000000 		.space	4
  38              		.text
  39              		.align	1
  40              		.global	init_encoder
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.type	init_encoder, %function
  45              	init_encoder:
  46              	.LFB66:
   1:src/encoder.c **** /*Module encoder should return the speed of the robot in rotation per minute
   2:src/encoder.c **** The encoder module should be able to calculate the speed of the robot based on the number of encode
   3:src/encoder.c **** this module should be initialized with the init_encoder function and updated with the update_speed 
   4:src/encoder.c **** 
   5:src/encoder.c **** use it like this:
   6:src/encoder.c **** 
   7:src/encoder.c **** in main.c
   8:src/encoder.c **** encoder_t left, right;
   9:src/encoder.c **** init_encoder(&left, &right);
  10:src/encoder.c **** while(1) {
  11:src/encoder.c ****     update_speed(&left, &right);
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 2


  12:src/encoder.c ****     print_debug_info(&left, &right);
  13:src/encoder.c **** }
  14:src/encoder.c **** */
  15:src/encoder.c **** 
  16:src/encoder.c **** #include "encoder.h"
  17:src/encoder.c **** #include <stdint.h>
  18:src/encoder.c **** #include <stdio.h>
  19:src/encoder.c **** #include "stm32f1xx.h"
  20:src/encoder.c **** #include "stm32f103_setup.h"
  21:src/encoder.c **** 
  22:src/encoder.c **** 
  23:src/encoder.c **** #define ENCODER_COUNT 1300 // number of encoder steps per wheel revolution
  24:src/encoder.c **** #define USED_ENCODERS 2 // how many encoders are used
  25:src/encoder.c **** 
  26:src/encoder.c **** /*reset encoder count is halt of max uint16. this helps to prevent faulty vlaue on overflow*/
  27:src/encoder.c **** const int reset_encoder_count =65535/2;
  28:src/encoder.c **** 
  29:src/encoder.c **** int32_t current_millis = 0, previous_millis = 0;
  30:src/encoder.c **** 
  31:src/encoder.c **** static float calculate_speed( int count, int interval);
  32:src/encoder.c **** static void init_hardware_decoder_1(void);
  33:src/encoder.c **** static void init_hardware_decoder_2(void);
  34:src/encoder.c **** void init_encoder( encoder_t *left, encoder_t *right) {
  47              		.loc 1 34 55
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 8
  50              		@ frame_needed = 1, uses_anonymous_args = 0
  51 0000 80B5     		push	{r7, lr}
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 82B0     		sub	sp, sp, #8
  56              		.cfi_def_cfa_offset 16
  57 0004 00AF     		add	r7, sp, #0
  58              		.cfi_def_cfa_register 7
  59 0006 7860     		str	r0, [r7, #4]
  60 0008 3960     		str	r1, [r7]
  35:src/encoder.c ****     
  36:src/encoder.c ****     init_hardware_decoder_1();
  61              		.loc 1 36 5
  62 000a 00F0DDF8 		bl	init_hardware_decoder_1
  37:src/encoder.c ****     init_hardware_decoder_2();
  63              		.loc 1 37 5
  64 000e 00F015F9 		bl	init_hardware_decoder_2
  38:src/encoder.c ****     
  39:src/encoder.c ****     left->current_count = 0;
  65              		.loc 1 39 25
  66 0012 7B68     		ldr	r3, [r7, #4]
  67 0014 0022     		movs	r2, #0
  68 0016 1A60     		str	r2, [r3]
  40:src/encoder.c ****     left->speed = 0.0;
  69              		.loc 1 40 17
  70 0018 7B68     		ldr	r3, [r7, #4]
  71 001a 4FF00002 		mov	r2, #0
  72 001e 9A60     		str	r2, [r3, #8]	@ float
  41:src/encoder.c ****     left->position = 0;
  73              		.loc 1 41 20
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 3


  74 0020 7B68     		ldr	r3, [r7, #4]
  75 0022 0022     		movs	r2, #0
  76 0024 DA60     		str	r2, [r3, #12]
  42:src/encoder.c **** 
  43:src/encoder.c ****     right->current_count = 0;
  77              		.loc 1 43 26
  78 0026 3B68     		ldr	r3, [r7]
  79 0028 0022     		movs	r2, #0
  80 002a 1A60     		str	r2, [r3]
  44:src/encoder.c ****     right->speed = 0.0;
  81              		.loc 1 44 18
  82 002c 3B68     		ldr	r3, [r7]
  83 002e 4FF00002 		mov	r2, #0
  84 0032 9A60     		str	r2, [r3, #8]	@ float
  45:src/encoder.c ****     right->position = 0;
  85              		.loc 1 45 21
  86 0034 3B68     		ldr	r3, [r7]
  87 0036 0022     		movs	r2, #0
  88 0038 DA60     		str	r2, [r3, #12]
  46:src/encoder.c **** }
  89              		.loc 1 46 1
  90 003a 00BF     		nop
  91 003c 0837     		adds	r7, r7, #8
  92              		.cfi_def_cfa_offset 8
  93 003e BD46     		mov	sp, r7
  94              		.cfi_def_cfa_register 13
  95              		@ sp needed
  96 0040 80BD     		pop	{r7, pc}
  97              		.cfi_endproc
  98              	.LFE66:
  99              		.size	init_encoder, .-init_encoder
 100              		.global	__aeabi_i2f
 101              		.global	__aeabi_fdiv
 102              		.global	__aeabi_f2d
 103              		.global	__aeabi_i2d
 104              		.global	__aeabi_ddiv
 105              		.global	__aeabi_dmul
 106              		.global	__aeabi_d2f
 107              		.align	1
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 111              		.type	calculate_speed, %function
 112              	calculate_speed:
 113              	.LFB67:
  47:src/encoder.c **** 
  48:src/encoder.c **** static float calculate_speed( int count, int interval) {
 114              		.loc 1 48 56
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 16
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118 0042 B0B5     		push	{r4, r5, r7, lr}
 119              		.cfi_def_cfa_offset 16
 120              		.cfi_offset 4, -16
 121              		.cfi_offset 5, -12
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 4


 124 0044 84B0     		sub	sp, sp, #16
 125              		.cfi_def_cfa_offset 32
 126 0046 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
 128 0048 7860     		str	r0, [r7, #4]
 129 004a 3960     		str	r1, [r7]
  49:src/encoder.c ****     // Calculate speed in units per minute
  50:src/encoder.c ****     //
  51:src/encoder.c ****     float speed = (count/(float)ENCODER_COUNT)*(60000.0/interval);
 130              		.loc 1 51 25
 131 004c 7868     		ldr	r0, [r7, #4]
 132 004e FFF7FEFF 		bl	__aeabi_i2f
 133 0052 0346     		mov	r3, r0
 134 0054 1649     		ldr	r1, .L4+8
 135 0056 1846     		mov	r0, r3
 136 0058 FFF7FEFF 		bl	__aeabi_fdiv
 137 005c 0346     		mov	r3, r0
 138 005e 1846     		mov	r0, r3
 139 0060 FFF7FEFF 		bl	__aeabi_f2d
 140 0064 0446     		mov	r4, r0
 141 0066 0D46     		mov	r5, r1
 142              		.loc 1 51 56
 143 0068 3868     		ldr	r0, [r7]
 144 006a FFF7FEFF 		bl	__aeabi_i2d
 145 006e 0246     		mov	r2, r0
 146 0070 0B46     		mov	r3, r1
 147 0072 0DA1     		adr	r1, .L4
 148 0074 D1E90001 		ldrd	r0, [r1]
 149 0078 FFF7FEFF 		bl	__aeabi_ddiv
 150 007c 0246     		mov	r2, r0
 151 007e 0B46     		mov	r3, r1
 152              		.loc 1 51 47
 153 0080 2046     		mov	r0, r4
 154 0082 2946     		mov	r1, r5
 155 0084 FFF7FEFF 		bl	__aeabi_dmul
 156 0088 0246     		mov	r2, r0
 157 008a 0B46     		mov	r3, r1
 158              		.loc 1 51 11
 159 008c 1046     		mov	r0, r2
 160 008e 1946     		mov	r1, r3
 161 0090 FFF7FEFF 		bl	__aeabi_d2f
 162 0094 0346     		mov	r3, r0
 163 0096 FB60     		str	r3, [r7, #12]	@ float
  52:src/encoder.c ****     return speed;
 164              		.loc 1 52 12
 165 0098 FB68     		ldr	r3, [r7, #12]	@ float
  53:src/encoder.c **** }
 166              		.loc 1 53 1
 167 009a 1846     		mov	r0, r3
 168 009c 1037     		adds	r7, r7, #16
 169              		.cfi_def_cfa_offset 16
 170 009e BD46     		mov	sp, r7
 171              		.cfi_def_cfa_register 13
 172              		@ sp needed
 173 00a0 B0BD     		pop	{r4, r5, r7, pc}
 174              	.L5:
 175 00a2 00BFAFF3 		.align	3
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 5


 175      0080
 176              	.L4:
 177 00a8 00000000 		.word	0
 178 00ac 004CED40 		.word	1089293312
 179 00b0 0080A244 		.word	1151500288
 180              		.cfi_endproc
 181              	.LFE67:
 182              		.size	calculate_speed, .-calculate_speed
 183              		.align	1
 184              		.global	update_speed
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.type	update_speed, %function
 189              	update_speed:
 190              	.LFB68:
  54:src/encoder.c **** 
  55:src/encoder.c **** // ...
  56:src/encoder.c **** 
  57:src/encoder.c **** void update_speed(encoder_t *left, encoder_t *right) {
 191              		.loc 1 57 54
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 16
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 00b4 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 00b6 84B0     		sub	sp, sp, #16
 200              		.cfi_def_cfa_offset 24
 201 00b8 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 203 00ba 7860     		str	r0, [r7, #4]
 204 00bc 3960     		str	r1, [r7]
  58:src/encoder.c ****     /*
  59:src/encoder.c ****     Update general values for both encoders
  60:src/encoder.c ****     interval is the time passed since the last update. its measured in milliseconds
  61:src/encoder.c **** 
  62:src/encoder.c ****     */ 
  63:src/encoder.c **** 
  64:src/encoder.c ****     int interval, count_difference;
  65:src/encoder.c ****     current_millis = millis();
 205              		.loc 1 65 22
 206 00be FFF7FEFF 		bl	millis
 207 00c2 0346     		mov	r3, r0
 208              		.loc 1 65 22 is_stmt 0 discriminator 1
 209 00c4 1A46     		mov	r2, r3
 210              		.loc 1 65 20 is_stmt 1 discriminator 1
 211 00c6 254B     		ldr	r3, .L7
 212 00c8 1A60     		str	r2, [r3]
  66:src/encoder.c ****     interval = current_millis - previous_millis;
 213              		.loc 1 66 31
 214 00ca 244B     		ldr	r3, .L7
 215 00cc 1A68     		ldr	r2, [r3]
 216 00ce 244B     		ldr	r3, .L7+4
 217 00d0 1B68     		ldr	r3, [r3]
 218              		.loc 1 66 14
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 6


 219 00d2 D31A     		subs	r3, r2, r3
 220 00d4 FB60     		str	r3, [r7, #12]
  67:src/encoder.c ****     
  68:src/encoder.c ****     // Update speed for left encoder
  69:src/encoder.c ****     left->current_count = TIM2->CNT;
 221              		.loc 1 69 31
 222 00d6 4FF08043 		mov	r3, #1073741824
 223 00da 5B6A     		ldr	r3, [r3, #36]
 224 00dc 1A46     		mov	r2, r3
 225              		.loc 1 69 25
 226 00de 7B68     		ldr	r3, [r7, #4]
 227 00e0 1A60     		str	r2, [r3]
  70:src/encoder.c ****     count_difference = left->current_count - reset_encoder_count;
 228              		.loc 1 70 28
 229 00e2 7B68     		ldr	r3, [r7, #4]
 230 00e4 1B68     		ldr	r3, [r3]
 231              		.loc 1 70 44
 232 00e6 47F6FF72 		movw	r2, #32767
 233              		.loc 1 70 22
 234 00ea 9B1A     		subs	r3, r3, r2
 235 00ec BB60     		str	r3, [r7, #8]
  71:src/encoder.c ****     /*poston sums driven distance */
  72:src/encoder.c ****     left->position += (count_difference);
 236              		.loc 1 72 9
 237 00ee 7B68     		ldr	r3, [r7, #4]
 238 00f0 DA68     		ldr	r2, [r3, #12]
 239              		.loc 1 72 20
 240 00f2 BB68     		ldr	r3, [r7, #8]
 241 00f4 1A44     		add	r2, r2, r3
 242 00f6 7B68     		ldr	r3, [r7, #4]
 243 00f8 DA60     		str	r2, [r3, #12]
  73:src/encoder.c ****     left->speed = calculate_speed(count_difference,  interval);
 244              		.loc 1 73 19
 245 00fa F968     		ldr	r1, [r7, #12]
 246 00fc B868     		ldr	r0, [r7, #8]
 247 00fe FFF7A0FF 		bl	calculate_speed
 248 0102 0246     		mov	r2, r0
 249              		.loc 1 73 17 discriminator 1
 250 0104 7B68     		ldr	r3, [r7, #4]
 251 0106 9A60     		str	r2, [r3, #8]	@ float
  74:src/encoder.c ****     /*reset encoder count to prevent overflow*/
  75:src/encoder.c ****     TIM2->CNT = reset_encoder_count;
 252              		.loc 1 75 15
 253 0108 47F6FF72 		movw	r2, #32767
 254              		.loc 1 75 9
 255 010c 4FF08043 		mov	r3, #1073741824
 256              		.loc 1 75 15
 257 0110 5A62     		str	r2, [r3, #36]
  76:src/encoder.c ****     
  77:src/encoder.c ****     // Update speed for right encoder
  78:src/encoder.c ****     right->current_count = TIM3->CNT;
 258              		.loc 1 78 32
 259 0112 144B     		ldr	r3, .L7+8
 260 0114 5B6A     		ldr	r3, [r3, #36]
 261 0116 1A46     		mov	r2, r3
 262              		.loc 1 78 26
 263 0118 3B68     		ldr	r3, [r7]
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 7


 264 011a 1A60     		str	r2, [r3]
  79:src/encoder.c ****     count_difference = right->current_count - reset_encoder_count;
 265              		.loc 1 79 29
 266 011c 3B68     		ldr	r3, [r7]
 267 011e 1B68     		ldr	r3, [r3]
 268              		.loc 1 79 45
 269 0120 47F6FF72 		movw	r2, #32767
 270              		.loc 1 79 22
 271 0124 9B1A     		subs	r3, r3, r2
 272 0126 BB60     		str	r3, [r7, #8]
  80:src/encoder.c ****     right->position += (count_difference);
 273              		.loc 1 80 10
 274 0128 3B68     		ldr	r3, [r7]
 275 012a DA68     		ldr	r2, [r3, #12]
 276              		.loc 1 80 21
 277 012c BB68     		ldr	r3, [r7, #8]
 278 012e 1A44     		add	r2, r2, r3
 279 0130 3B68     		ldr	r3, [r7]
 280 0132 DA60     		str	r2, [r3, #12]
  81:src/encoder.c ****     right->speed = calculate_speed(count_difference,  interval);
 281              		.loc 1 81 20
 282 0134 F968     		ldr	r1, [r7, #12]
 283 0136 B868     		ldr	r0, [r7, #8]
 284 0138 FFF783FF 		bl	calculate_speed
 285 013c 0246     		mov	r2, r0
 286              		.loc 1 81 18 discriminator 1
 287 013e 3B68     		ldr	r3, [r7]
 288 0140 9A60     		str	r2, [r3, #8]	@ float
  82:src/encoder.c ****     TIM3->CNT = reset_encoder_count;
 289              		.loc 1 82 15
 290 0142 47F6FF72 		movw	r2, #32767
 291              		.loc 1 82 9
 292 0146 074B     		ldr	r3, .L7+8
 293              		.loc 1 82 15
 294 0148 5A62     		str	r2, [r3, #36]
  83:src/encoder.c **** 
  84:src/encoder.c ****     previous_millis = current_millis;
 295              		.loc 1 84 21
 296 014a 044B     		ldr	r3, .L7
 297 014c 1B68     		ldr	r3, [r3]
 298 014e 044A     		ldr	r2, .L7+4
 299 0150 1360     		str	r3, [r2]
  85:src/encoder.c **** }
 300              		.loc 1 85 1
 301 0152 00BF     		nop
 302 0154 1037     		adds	r7, r7, #16
 303              		.cfi_def_cfa_offset 8
 304 0156 BD46     		mov	sp, r7
 305              		.cfi_def_cfa_register 13
 306              		@ sp needed
 307 0158 80BD     		pop	{r7, pc}
 308              	.L8:
 309 015a 00BF     		.align	2
 310              	.L7:
 311 015c 00000000 		.word	current_millis
 312 0160 00000000 		.word	previous_millis
 313 0164 00040040 		.word	1073742848
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 8


 314              		.cfi_endproc
 315              	.LFE68:
 316              		.size	update_speed, .-update_speed
 317              		.section	.rodata
 318              		.align	2
 319              	.LC0:
 320 0004 4C656674 		.ascii	"Left: %ld, speed: %0.3f Pos: %ld \011 Right: %ld, s"
 320      3A20256C 
 320      642C2073 
 320      70656564 
 320      3A202530 
 321 0034 70656564 		.ascii	"peed: %0.3f Pos: %ld  \012\000"
 321      3A202530 
 321      2E336620 
 321      506F733A 
 321      20256C64 
 322              		.text
 323              		.align	1
 324              		.global	print_debug_info
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 328              		.type	print_debug_info, %function
 329              	print_debug_info:
 330              	.LFB69:
  86:src/encoder.c **** 
  87:src/encoder.c **** 
  88:src/encoder.c **** 
  89:src/encoder.c **** void print_debug_info(encoder_t *left, encoder_t *right) {
 331              		.loc 1 89 58
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 16
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0168 F0B5     		push	{r4, r5, r6, r7, lr}
 336              		.cfi_def_cfa_offset 20
 337              		.cfi_offset 4, -20
 338              		.cfi_offset 5, -16
 339              		.cfi_offset 6, -12
 340              		.cfi_offset 7, -8
 341              		.cfi_offset 14, -4
 342 016a 8BB0     		sub	sp, sp, #44
 343              		.cfi_def_cfa_offset 64
 344 016c 06AF     		add	r7, sp, #24
 345              		.cfi_def_cfa 7, 40
 346 016e F860     		str	r0, [r7, #12]
 347 0170 B960     		str	r1, [r7, #8]
  90:src/encoder.c ****     // Print debug information
  91:src/encoder.c ****     printf("Left: %ld, speed: %0.3f Pos: %ld \t Right: %ld, speed: %0.3f Pos: %ld  \n", left->curre
 348              		.loc 1 91 5
 349 0172 FB68     		ldr	r3, [r7, #12]
 350 0174 1B68     		ldr	r3, [r3]
 351 0176 7B60     		str	r3, [r7, #4]
 352              		.loc 1 91 114
 353 0178 FB68     		ldr	r3, [r7, #12]
 354 017a 9B68     		ldr	r3, [r3, #8]	@ float
 355              		.loc 1 91 5
 356 017c 1846     		mov	r0, r3
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 9


 357 017e FFF7FEFF 		bl	__aeabi_f2d
 358 0182 0446     		mov	r4, r0
 359 0184 0D46     		mov	r5, r1
 360 0186 FB68     		ldr	r3, [r7, #12]
 361 0188 DE68     		ldr	r6, [r3, #12]
 362 018a BB68     		ldr	r3, [r7, #8]
 363 018c 1A68     		ldr	r2, [r3]
 364 018e 3A60     		str	r2, [r7]
 365              		.loc 1 91 166
 366 0190 BB68     		ldr	r3, [r7, #8]
 367 0192 9B68     		ldr	r3, [r3, #8]	@ float
 368              		.loc 1 91 5
 369 0194 1846     		mov	r0, r3
 370 0196 FFF7FEFF 		bl	__aeabi_f2d
 371 019a 0246     		mov	r2, r0
 372 019c 0B46     		mov	r3, r1
 373 019e B968     		ldr	r1, [r7, #8]
 374 01a0 C968     		ldr	r1, [r1, #12]
 375 01a2 0491     		str	r1, [sp, #16]
 376 01a4 CDE90223 		strd	r2, [sp, #8]
 377 01a8 3A68     		ldr	r2, [r7]
 378 01aa 0192     		str	r2, [sp, #4]
 379 01ac 0096     		str	r6, [sp]
 380 01ae 2246     		mov	r2, r4
 381 01b0 2B46     		mov	r3, r5
 382 01b2 7968     		ldr	r1, [r7, #4]
 383 01b4 0348     		ldr	r0, .L10
 384 01b6 FFF7FEFF 		bl	printf
  92:src/encoder.c **** }
 385              		.loc 1 92 1
 386 01ba 00BF     		nop
 387 01bc 1437     		adds	r7, r7, #20
 388              		.cfi_def_cfa_offset 20
 389 01be BD46     		mov	sp, r7
 390              		.cfi_def_cfa_register 13
 391              		@ sp needed
 392 01c0 F0BD     		pop	{r4, r5, r6, r7, pc}
 393              	.L11:
 394 01c2 00BF     		.align	2
 395              	.L10:
 396 01c4 04000000 		.word	.LC0
 397              		.cfi_endproc
 398              	.LFE69:
 399              		.size	print_debug_info, .-print_debug_info
 400              		.align	1
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.type	init_hardware_decoder_1, %function
 405              	init_hardware_decoder_1:
 406              	.LFB70:
  93:src/encoder.c **** // ...
  94:src/encoder.c **** 
  95:src/encoder.c **** // void setup_timer() {
  96:src/encoder.c **** //     // Configure TIM1 channel 4 for 100ms interval
  97:src/encoder.c **** //     TIM1->CCR4 = 100; // Set compare value for 100ms
  98:src/encoder.c **** //     TIM1->CCMR2 |= TIM_CCMR2_OC4M_1 | TIM_CCMR2_OC4M_2; // Set channel 4 to PWM mode 1
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 10


  99:src/encoder.c **** //     TIM1->CCER |= TIM_CCER_CC4E; // Enable channel 4 output
 100:src/encoder.c **** //     TIM1->CR1 |= TIM_CR1_CEN; // Enable TIM1
 101:src/encoder.c **** 
 102:src/encoder.c **** //     // Enable TIM1 channel 4 interrupt
 103:src/encoder.c **** //     NVIC_EnableIRQ(TIM1_CC_IRQn);
 104:src/encoder.c **** //     TIM1->DIER |= TIM_DIER_CC4IE; // Enable capture/compare 4 interrupt
 105:src/encoder.c **** // }
 106:src/encoder.c **** 
 107:src/encoder.c ****     
 108:src/encoder.c **** 
 109:src/encoder.c **** 
 110:src/encoder.c **** // float get_speed(struct encoder* enc) {
 111:src/encoder.c **** //     return enc->speed;
 112:src/encoder.c **** // }
 113:src/encoder.c **** 
 114:src/encoder.c **** 
 115:src/encoder.c ****  static void init_hardware_decoder_1(void)
 116:src/encoder.c ****   {
 407              		.loc 1 116 3
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412 01c8 80B4     		push	{r7}
 413              		.cfi_def_cfa_offset 4
 414              		.cfi_offset 7, -4
 415 01ca 00AF     		add	r7, sp, #0
 416              		.cfi_def_cfa_register 7
 117:src/encoder.c **** 
 118:src/encoder.c ****     RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 417              		.loc 1 118 8
 418 01cc 184B     		ldr	r3, .L13
 419 01ce 9B69     		ldr	r3, [r3, #24]
 420 01d0 174A     		ldr	r2, .L13
 421              		.loc 1 118 18
 422 01d2 43F00403 		orr	r3, r3, #4
 423 01d6 9361     		str	r3, [r2, #24]
 119:src/encoder.c **** 
 120:src/encoder.c ****     // Configure Pins 0 and 1 of Port A as alternate function inputs
 121:src/encoder.c ****     GPIOA->CRL &= ~(GPIO_CRL_CNF6 | GPIO_CRL_CNF7);
 424              		.loc 1 121 10
 425 01d8 164B     		ldr	r3, .L13+4
 426 01da 1B68     		ldr	r3, [r3]
 427 01dc 154A     		ldr	r2, .L13+4
 428              		.loc 1 121 16
 429 01de 23F04C43 		bic	r3, r3, #-872415232
 430 01e2 1360     		str	r3, [r2]
 122:src/encoder.c ****     GPIOA->CRL |= (GPIO_CRL_CNF6_1 | GPIO_CRL_CNF7_1);
 431              		.loc 1 122 10
 432 01e4 134B     		ldr	r3, .L13+4
 433 01e6 1B68     		ldr	r3, [r3]
 434 01e8 124A     		ldr	r2, .L13+4
 435              		.loc 1 122 16
 436 01ea 43F00843 		orr	r3, r3, #-2013265920
 437 01ee 1360     		str	r3, [r2]
 123:src/encoder.c ****     TIM3->ARR = 0xFFFF;
 438              		.loc 1 123 9
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 11


 439 01f0 114B     		ldr	r3, .L13+8
 440              		.loc 1 123 15
 441 01f2 4FF6FF72 		movw	r2, #65535
 442 01f6 DA62     		str	r2, [r3, #44]
 124:src/encoder.c ****     // Configure encoder interface
 125:src/encoder.c ****     RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;                // Enable clock for TIM2
 443              		.loc 1 125 8
 444 01f8 0D4B     		ldr	r3, .L13
 445 01fa DB69     		ldr	r3, [r3, #28]
 446 01fc 0C4A     		ldr	r2, .L13
 447              		.loc 1 125 18
 448 01fe 43F00203 		orr	r3, r3, #2
 449 0202 D361     		str	r3, [r2, #28]
 126:src/encoder.c ****    // TIM3->CR1 = 0;                                     // Disable timer
 127:src/encoder.c ****     TIM3->CCMR1 = TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0; // Capture on TI1 and TI2
 450              		.loc 1 127 9
 451 0204 0C4B     		ldr	r3, .L13+8
 452              		.loc 1 127 17
 453 0206 40F20112 		movw	r2, #257
 454 020a 9A61     		str	r2, [r3, #24]
 128:src/encoder.c ****     TIM3->SMCR = TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0;      // Enable encoder mode
 455              		.loc 1 128 9
 456 020c 0A4B     		ldr	r3, .L13+8
 457              		.loc 1 128 16
 458 020e 0322     		movs	r2, #3
 459 0210 9A60     		str	r2, [r3, #8]
 129:src/encoder.c ****     TIM3->CNT = reset_encoder_count;                                 // Reset counter
 460              		.loc 1 129 15
 461 0212 47F6FF72 		movw	r2, #32767
 462              		.loc 1 129 9
 463 0216 084B     		ldr	r3, .L13+8
 464              		.loc 1 129 15
 465 0218 5A62     		str	r2, [r3, #36]
 130:src/encoder.c ****     TIM3->CR1 |= TIM_CR1_CEN;                          // Enable timer
 466              		.loc 1 130 9
 467 021a 074B     		ldr	r3, .L13+8
 468 021c 1B68     		ldr	r3, [r3]
 469 021e 064A     		ldr	r2, .L13+8
 470              		.loc 1 130 15
 471 0220 43F00103 		orr	r3, r3, #1
 472 0224 1360     		str	r3, [r2]
 131:src/encoder.c ****   }
 473              		.loc 1 131 3
 474 0226 00BF     		nop
 475 0228 BD46     		mov	sp, r7
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 022a 80BC     		pop	{r7}
 479              		.cfi_restore 7
 480              		.cfi_def_cfa_offset 0
 481 022c 7047     		bx	lr
 482              	.L14:
 483 022e 00BF     		.align	2
 484              	.L13:
 485 0230 00100240 		.word	1073876992
 486 0234 00080140 		.word	1073809408
 487 0238 00040040 		.word	1073742848
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 12


 488              		.cfi_endproc
 489              	.LFE70:
 490              		.size	init_hardware_decoder_1, .-init_hardware_decoder_1
 491              		.align	1
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.type	init_hardware_decoder_2, %function
 496              	init_hardware_decoder_2:
 497              	.LFB71:
 132:src/encoder.c **** 
 133:src/encoder.c ****  static void init_hardware_decoder_2(void)
 134:src/encoder.c ****   {
 498              		.loc 1 134 3
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503 023c 80B4     		push	{r7}
 504              		.cfi_def_cfa_offset 4
 505              		.cfi_offset 7, -4
 506 023e 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 135:src/encoder.c ****     // Enable clock for GPIO Port A
 136:src/encoder.c ****     RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 508              		.loc 1 136 8
 509 0240 1B4B     		ldr	r3, .L16
 510 0242 9B69     		ldr	r3, [r3, #24]
 511 0244 1A4A     		ldr	r2, .L16
 512              		.loc 1 136 18
 513 0246 43F00403 		orr	r3, r3, #4
 514 024a 9361     		str	r3, [r2, #24]
 137:src/encoder.c **** 
 138:src/encoder.c ****     // Configure Pins 0 and 1 of Port A as alternate function inputs
 139:src/encoder.c ****     GPIOA->CRL &= ~(GPIO_CRL_CNF0 | GPIO_CRL_CNF1);
 515              		.loc 1 139 10
 516 024c 194B     		ldr	r3, .L16+4
 517 024e 1B68     		ldr	r3, [r3]
 518 0250 184A     		ldr	r2, .L16+4
 519              		.loc 1 139 16
 520 0252 23F0CC03 		bic	r3, r3, #204
 521 0256 1360     		str	r3, [r2]
 140:src/encoder.c ****     GPIOA->CRL |= (GPIO_CRL_CNF0_1 | GPIO_CRL_CNF1_1);
 522              		.loc 1 140 10
 523 0258 164B     		ldr	r3, .L16+4
 524 025a 1B68     		ldr	r3, [r3]
 525 025c 154A     		ldr	r2, .L16+4
 526              		.loc 1 140 16
 527 025e 43F08803 		orr	r3, r3, #136
 528 0262 1360     		str	r3, [r2]
 141:src/encoder.c ****     TIM2->ARR =0xFFFF;
 529              		.loc 1 141 9
 530 0264 4FF08043 		mov	r3, #1073741824
 531              		.loc 1 141 15
 532 0268 4FF6FF72 		movw	r2, #65535
 533 026c DA62     		str	r2, [r3, #44]
 142:src/encoder.c ****     // Configure encoder interface
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 13


 143:src/encoder.c ****     RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;                // Enable clock for TIM2
 534              		.loc 1 143 8
 535 026e 104B     		ldr	r3, .L16
 536 0270 DB69     		ldr	r3, [r3, #28]
 537 0272 0F4A     		ldr	r2, .L16
 538              		.loc 1 143 18
 539 0274 43F00103 		orr	r3, r3, #1
 540 0278 D361     		str	r3, [r2, #28]
 144:src/encoder.c ****    // TIM2->CR1 = 0;                                     // Disable timer
 145:src/encoder.c ****     TIM2->CCMR1 = TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0; // Capture on TI1 and TI2
 541              		.loc 1 145 9
 542 027a 4FF08043 		mov	r3, #1073741824
 543              		.loc 1 145 17
 544 027e 40F20112 		movw	r2, #257
 545 0282 9A61     		str	r2, [r3, #24]
 146:src/encoder.c ****     TIM2->SMCR = TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0;      // Enable encoder mode
 546              		.loc 1 146 9
 547 0284 4FF08043 		mov	r3, #1073741824
 548              		.loc 1 146 16
 549 0288 0322     		movs	r2, #3
 550 028a 9A60     		str	r2, [r3, #8]
 147:src/encoder.c ****     TIM2->CNT = reset_encoder_count;                                 // Reset counter
 551              		.loc 1 147 15
 552 028c 47F6FF72 		movw	r2, #32767
 553              		.loc 1 147 9
 554 0290 4FF08043 		mov	r3, #1073741824
 555              		.loc 1 147 15
 556 0294 5A62     		str	r2, [r3, #36]
 148:src/encoder.c ****     TIM2->CR1 |= TIM_CR1_CEN;                          // Enable timer
 557              		.loc 1 148 9
 558 0296 4FF08043 		mov	r3, #1073741824
 559 029a 1B68     		ldr	r3, [r3]
 560 029c 4FF08042 		mov	r2, #1073741824
 561              		.loc 1 148 15
 562 02a0 43F00103 		orr	r3, r3, #1
 563 02a4 1360     		str	r3, [r2]
 149:src/encoder.c ****   }
 564              		.loc 1 149 3
 565 02a6 00BF     		nop
 566 02a8 BD46     		mov	sp, r7
 567              		.cfi_def_cfa_register 13
 568              		@ sp needed
 569 02aa 80BC     		pop	{r7}
 570              		.cfi_restore 7
 571              		.cfi_def_cfa_offset 0
 572 02ac 7047     		bx	lr
 573              	.L17:
 574 02ae 00BF     		.align	2
 575              	.L16:
 576 02b0 00100240 		.word	1073876992
 577 02b4 00080140 		.word	1073809408
 578              		.cfi_endproc
 579              	.LFE71:
 580              		.size	init_hardware_decoder_2, .-init_hardware_decoder_2
 581              	.Letext0:
 582              		.file 2 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 583              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 14


 584              		.file 4 "include/encoder.h"
 585              		.file 5 "./CMSIS/Device/STM32F1xx/include/stm32f103xb.h"
 586              		.file 6 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 587              		.file 7 "include/stm32f103_setup.h"
 588              		.section	.debug_info,"",%progbits
 589              	.Ldebug_info0:
 590 0000 76040000 		.4byte	0x476
 591 0004 0500     		.2byte	0x5
 592 0006 01       		.byte	0x1
 593 0007 04       		.byte	0x4
 594 0008 00000000 		.4byte	.Ldebug_abbrev0
 595 000c 0F       		.uleb128 0xf
 596 000d 48020000 		.4byte	.LASF55
 597 0011 0C       		.byte	0xc
 598 0012 5A000000 		.4byte	.LASF56
 599 0016 A4010000 		.4byte	.LASF57
 600 001a 00000000 		.4byte	.Ltext0
 601 001e B8020000 		.4byte	.Letext0-.Ltext0
 602 0022 00000000 		.4byte	.Ldebug_line0
 603 0026 03       		.uleb128 0x3
 604 0027 01       		.byte	0x1
 605 0028 06       		.byte	0x6
 606 0029 FF000000 		.4byte	.LASF0
 607 002d 03       		.uleb128 0x3
 608 002e 01       		.byte	0x1
 609 002f 08       		.byte	0x8
 610 0030 89010000 		.4byte	.LASF1
 611 0034 03       		.uleb128 0x3
 612 0035 02       		.byte	0x2
 613 0036 05       		.byte	0x5
 614 0037 3E000000 		.4byte	.LASF2
 615 003b 03       		.uleb128 0x3
 616 003c 02       		.byte	0x2
 617 003d 07       		.byte	0x7
 618 003e 1B020000 		.4byte	.LASF3
 619 0042 05       		.uleb128 0x5
 620 0043 E3020000 		.4byte	.LASF5
 621 0047 02       		.byte	0x2
 622 0048 4D       		.byte	0x4d
 623 0049 18       		.byte	0x18
 624 004a 4E000000 		.4byte	0x4e
 625 004e 03       		.uleb128 0x3
 626 004f 04       		.byte	0x4
 627 0050 05       		.byte	0x5
 628 0051 2E020000 		.4byte	.LASF4
 629 0055 05       		.uleb128 0x5
 630 0056 89000000 		.4byte	.LASF6
 631 005a 02       		.byte	0x2
 632 005b 4F       		.byte	0x4f
 633 005c 19       		.byte	0x19
 634 005d 61000000 		.4byte	0x61
 635 0061 03       		.uleb128 0x3
 636 0062 04       		.byte	0x4
 637 0063 07       		.byte	0x7
 638 0064 B2020000 		.4byte	.LASF7
 639 0068 03       		.uleb128 0x3
 640 0069 08       		.byte	0x8
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 15


 641 006a 05       		.byte	0x5
 642 006b 1F010000 		.4byte	.LASF8
 643 006f 03       		.uleb128 0x3
 644 0070 08       		.byte	0x8
 645 0071 07       		.byte	0x7
 646 0072 E3010000 		.4byte	.LASF9
 647 0076 10       		.uleb128 0x10
 648 0077 04       		.byte	0x4
 649 0078 05       		.byte	0x5
 650 0079 696E7400 		.ascii	"int\000"
 651 007d 0B       		.uleb128 0xb
 652 007e 76000000 		.4byte	0x76
 653 0082 03       		.uleb128 0x3
 654 0083 04       		.byte	0x4
 655 0084 07       		.byte	0x7
 656 0085 03020000 		.4byte	.LASF10
 657 0089 05       		.uleb128 0x5
 658 008a DB010000 		.4byte	.LASF11
 659 008e 03       		.byte	0x3
 660 008f 2C       		.byte	0x2c
 661 0090 13       		.byte	0x13
 662 0091 42000000 		.4byte	0x42
 663 0095 05       		.uleb128 0x5
 664 0096 FA010000 		.4byte	.LASF12
 665 009a 03       		.byte	0x3
 666 009b 30       		.byte	0x30
 667 009c 14       		.byte	0x14
 668 009d 55000000 		.4byte	0x55
 669 00a1 11       		.uleb128 0x11
 670 00a2 95000000 		.4byte	0x95
 671 00a6 05       		.uleb128 0x5
 672 00a7 48010000 		.4byte	.LASF13
 673 00ab 04       		.byte	0x4
 674 00ac 05       		.byte	0x5
 675 00ad 18       		.byte	0x18
 676 00ae B2000000 		.4byte	0xb2
 677 00b2 12       		.uleb128 0x12
 678 00b3 ED020000 		.4byte	.LASF58
 679 00b7 10       		.byte	0x10
 680 00b8 04       		.byte	0x4
 681 00b9 13       		.byte	0x13
 682 00ba 08       		.byte	0x8
 683 00bb F0000000 		.4byte	0xf0
 684 00bf 06       		.uleb128 0x6
 685 00c0 11010000 		.4byte	.LASF14
 686 00c4 14       		.byte	0x14
 687 00c5 0D       		.byte	0xd
 688 00c6 89000000 		.4byte	0x89
 689 00ca 00       		.byte	0
 690 00cb 06       		.uleb128 0x6
 691 00cc A4000000 		.4byte	.LASF15
 692 00d0 15       		.byte	0x15
 693 00d1 0D       		.byte	0xd
 694 00d2 89000000 		.4byte	0x89
 695 00d6 04       		.byte	0x4
 696 00d7 06       		.uleb128 0x6
 697 00d8 10020000 		.4byte	.LASF16
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 16


 698 00dc 16       		.byte	0x16
 699 00dd 0B       		.byte	0xb
 700 00de F0000000 		.4byte	0xf0
 701 00e2 08       		.byte	0x8
 702 00e3 06       		.uleb128 0x6
 703 00e4 F5020000 		.4byte	.LASF17
 704 00e8 17       		.byte	0x17
 705 00e9 0D       		.byte	0xd
 706 00ea 89000000 		.4byte	0x89
 707 00ee 0C       		.byte	0xc
 708 00ef 00       		.byte	0
 709 00f0 03       		.uleb128 0x3
 710 00f1 04       		.byte	0x4
 711 00f2 04       		.byte	0x4
 712 00f3 0B010000 		.4byte	.LASF18
 713 00f7 03       		.uleb128 0x3
 714 00f8 01       		.byte	0x1
 715 00f9 08       		.byte	0x8
 716 00fa 2D010000 		.4byte	.LASF19
 717 00fe 0B       		.uleb128 0xb
 718 00ff F7000000 		.4byte	0xf7
 719 0103 0C       		.uleb128 0xc
 720 0104 FE000000 		.4byte	0xfe
 721 0108 07       		.uleb128 0x7
 722 0109 1C       		.byte	0x1c
 723 010a 7801     		.2byte	0x178
 724 010c 65010000 		.4byte	0x165
 725 0110 02       		.uleb128 0x2
 726 0111 43524C00 		.ascii	"CRL\000"
 727 0115 7A01     		.2byte	0x17a
 728 0117 A1000000 		.4byte	0xa1
 729 011b 00       		.byte	0
 730 011c 02       		.uleb128 0x2
 731 011d 43524800 		.ascii	"CRH\000"
 732 0121 7B01     		.2byte	0x17b
 733 0123 A1000000 		.4byte	0xa1
 734 0127 04       		.byte	0x4
 735 0128 02       		.uleb128 0x2
 736 0129 49445200 		.ascii	"IDR\000"
 737 012d 7C01     		.2byte	0x17c
 738 012f A1000000 		.4byte	0xa1
 739 0133 08       		.byte	0x8
 740 0134 02       		.uleb128 0x2
 741 0135 4F445200 		.ascii	"ODR\000"
 742 0139 7D01     		.2byte	0x17d
 743 013b A1000000 		.4byte	0xa1
 744 013f 0C       		.byte	0xc
 745 0140 01       		.uleb128 0x1
 746 0141 52010000 		.4byte	.LASF20
 747 0145 7E01     		.2byte	0x17e
 748 0147 A1000000 		.4byte	0xa1
 749 014b 10       		.byte	0x10
 750 014c 02       		.uleb128 0x2
 751 014d 42525200 		.ascii	"BRR\000"
 752 0151 7F01     		.2byte	0x17f
 753 0153 A1000000 		.4byte	0xa1
 754 0157 14       		.byte	0x14
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 17


 755 0158 01       		.uleb128 0x1
 756 0159 FE020000 		.4byte	.LASF21
 757 015d 8001     		.2byte	0x180
 758 015f A1000000 		.4byte	0xa1
 759 0163 18       		.byte	0x18
 760 0164 00       		.byte	0
 761 0165 08       		.uleb128 0x8
 762 0166 00000000 		.4byte	.LASF22
 763 016a 8101     		.2byte	0x181
 764 016c 03       		.byte	0x3
 765 016d 08010000 		.4byte	0x108
 766 0171 07       		.uleb128 0x7
 767 0172 28       		.byte	0x28
 768 0173 BA01     		.2byte	0x1ba
 769 0175 F1010000 		.4byte	0x1f1
 770 0179 02       		.uleb128 0x2
 771 017a 435200   		.ascii	"CR\000"
 772 017d BC01     		.2byte	0x1bc
 773 017f A1000000 		.4byte	0xa1
 774 0183 00       		.byte	0
 775 0184 01       		.uleb128 0x1
 776 0185 B3000000 		.4byte	.LASF23
 777 0189 BD01     		.2byte	0x1bd
 778 018b A1000000 		.4byte	0xa1
 779 018f 04       		.byte	0x4
 780 0190 02       		.uleb128 0x2
 781 0191 43495200 		.ascii	"CIR\000"
 782 0195 BE01     		.2byte	0x1be
 783 0197 A1000000 		.4byte	0xa1
 784 019b 08       		.byte	0x8
 785 019c 01       		.uleb128 0x1
 786 019d 5E010000 		.4byte	.LASF24
 787 01a1 BF01     		.2byte	0x1bf
 788 01a3 A1000000 		.4byte	0xa1
 789 01a7 0C       		.byte	0xc
 790 01a8 01       		.uleb128 0x1
 791 01a9 24000000 		.4byte	.LASF25
 792 01ad C001     		.2byte	0x1c0
 793 01af A1000000 		.4byte	0xa1
 794 01b3 10       		.byte	0x10
 795 01b4 01       		.uleb128 0x1
 796 01b5 57010000 		.4byte	.LASF26
 797 01b9 C101     		.2byte	0x1c1
 798 01bb A1000000 		.4byte	0xa1
 799 01bf 14       		.byte	0x14
 800 01c0 01       		.uleb128 0x1
 801 01c1 9C010000 		.4byte	.LASF27
 802 01c5 C201     		.2byte	0x1c2
 803 01c7 A1000000 		.4byte	0xa1
 804 01cb 18       		.byte	0x18
 805 01cc 01       		.uleb128 0x1
 806 01cd B8000000 		.4byte	.LASF28
 807 01d1 C301     		.2byte	0x1c3
 808 01d3 A1000000 		.4byte	0xa1
 809 01d7 1C       		.byte	0x1c
 810 01d8 01       		.uleb128 0x1
 811 01d9 55000000 		.4byte	.LASF29
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 18


 812 01dd C401     		.2byte	0x1c4
 813 01df A1000000 		.4byte	0xa1
 814 01e3 20       		.byte	0x20
 815 01e4 02       		.uleb128 0x2
 816 01e5 43535200 		.ascii	"CSR\000"
 817 01e9 C501     		.2byte	0x1c5
 818 01eb A1000000 		.4byte	0xa1
 819 01ef 24       		.byte	0x24
 820 01f0 00       		.byte	0
 821 01f1 08       		.uleb128 0x8
 822 01f2 12000000 		.4byte	.LASF30
 823 01f6 C801     		.2byte	0x1c8
 824 01f8 03       		.byte	0x3
 825 01f9 71010000 		.4byte	0x171
 826 01fd 07       		.uleb128 0x7
 827 01fe 54       		.byte	0x54
 828 01ff 0B02     		.2byte	0x20b
 829 0201 00030000 		.4byte	0x300
 830 0205 02       		.uleb128 0x2
 831 0206 43523100 		.ascii	"CR1\000"
 832 020a 0D02     		.2byte	0x20d
 833 020c A1000000 		.4byte	0xa1
 834 0210 00       		.byte	0
 835 0211 02       		.uleb128 0x2
 836 0212 43523200 		.ascii	"CR2\000"
 837 0216 0E02     		.2byte	0x20e
 838 0218 A1000000 		.4byte	0xa1
 839 021c 04       		.byte	0x4
 840 021d 01       		.uleb128 0x1
 841 021e 73010000 		.4byte	.LASF31
 842 0222 0F02     		.2byte	0x20f
 843 0224 A1000000 		.4byte	0xa1
 844 0228 08       		.byte	0x8
 845 0229 01       		.uleb128 0x1
 846 022a 16020000 		.4byte	.LASF32
 847 022e 1002     		.2byte	0x210
 848 0230 A1000000 		.4byte	0xa1
 849 0234 0C       		.byte	0xc
 850 0235 02       		.uleb128 0x2
 851 0236 535200   		.ascii	"SR\000"
 852 0239 1102     		.2byte	0x211
 853 023b A1000000 		.4byte	0xa1
 854 023f 10       		.byte	0x10
 855 0240 02       		.uleb128 0x2
 856 0241 45475200 		.ascii	"EGR\000"
 857 0245 1202     		.2byte	0x212
 858 0247 A1000000 		.4byte	0xa1
 859 024b 14       		.byte	0x14
 860 024c 01       		.uleb128 0x1
 861 024d 32000000 		.4byte	.LASF33
 862 0251 1302     		.2byte	0x213
 863 0253 A1000000 		.4byte	0xa1
 864 0257 18       		.byte	0x18
 865 0258 01       		.uleb128 0x1
 866 0259 38000000 		.4byte	.LASF34
 867 025d 1402     		.2byte	0x214
 868 025f A1000000 		.4byte	0xa1
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 19


 869 0263 1C       		.byte	0x1c
 870 0264 01       		.uleb128 0x1
 871 0265 0D000000 		.4byte	.LASF35
 872 0269 1502     		.2byte	0x215
 873 026b A1000000 		.4byte	0xa1
 874 026f 20       		.byte	0x20
 875 0270 02       		.uleb128 0x2
 876 0271 434E5400 		.ascii	"CNT\000"
 877 0275 1602     		.2byte	0x216
 878 0277 A1000000 		.4byte	0xa1
 879 027b 24       		.byte	0x24
 880 027c 02       		.uleb128 0x2
 881 027d 50534300 		.ascii	"PSC\000"
 882 0281 1702     		.2byte	0x217
 883 0283 A1000000 		.4byte	0xa1
 884 0287 28       		.byte	0x28
 885 0288 02       		.uleb128 0x2
 886 0289 41525200 		.ascii	"ARR\000"
 887 028d 1802     		.2byte	0x218
 888 028f A1000000 		.4byte	0xa1
 889 0293 2C       		.byte	0x2c
 890 0294 02       		.uleb128 0x2
 891 0295 52435200 		.ascii	"RCR\000"
 892 0299 1902     		.2byte	0x219
 893 029b A1000000 		.4byte	0xa1
 894 029f 30       		.byte	0x30
 895 02a0 01       		.uleb128 0x1
 896 02a1 32010000 		.4byte	.LASF36
 897 02a5 1A02     		.2byte	0x21a
 898 02a7 A1000000 		.4byte	0xa1
 899 02ab 34       		.byte	0x34
 900 02ac 01       		.uleb128 0x1
 901 02ad 37010000 		.4byte	.LASF37
 902 02b1 1B02     		.2byte	0x21b
 903 02b3 A1000000 		.4byte	0xa1
 904 02b7 38       		.byte	0x38
 905 02b8 01       		.uleb128 0x1
 906 02b9 97010000 		.4byte	.LASF38
 907 02bd 1C02     		.2byte	0x21c
 908 02bf A1000000 		.4byte	0xa1
 909 02c3 3C       		.byte	0x3c
 910 02c4 01       		.uleb128 0x1
 911 02c5 43010000 		.4byte	.LASF39
 912 02c9 1D02     		.2byte	0x21d
 913 02cb A1000000 		.4byte	0xa1
 914 02cf 40       		.byte	0x40
 915 02d0 01       		.uleb128 0x1
 916 02d1 3E020000 		.4byte	.LASF40
 917 02d5 1E02     		.2byte	0x21e
 918 02d7 A1000000 		.4byte	0xa1
 919 02db 44       		.byte	0x44
 920 02dc 02       		.uleb128 0x2
 921 02dd 44435200 		.ascii	"DCR\000"
 922 02e1 1F02     		.2byte	0x21f
 923 02e3 A1000000 		.4byte	0xa1
 924 02e7 48       		.byte	0x48
 925 02e8 01       		.uleb128 0x1
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 20


 926 02e9 2D000000 		.4byte	.LASF41
 927 02ed 2002     		.2byte	0x220
 928 02ef A1000000 		.4byte	0xa1
 929 02f3 4C       		.byte	0x4c
 930 02f4 02       		.uleb128 0x2
 931 02f5 4F5200   		.ascii	"OR\000"
 932 02f8 2102     		.2byte	0x221
 933 02fa A1000000 		.4byte	0xa1
 934 02fe 50       		.byte	0x50
 935 02ff 00       		.byte	0
 936 0300 08       		.uleb128 0x8
 937 0301 67010000 		.4byte	.LASF42
 938 0305 2202     		.2byte	0x222
 939 0307 02       		.byte	0x2
 940 0308 FD010000 		.4byte	0x1fd
 941 030c 09       		.uleb128 0x9
 942 030d 75000000 		.4byte	.LASF43
 943 0311 1B       		.byte	0x1b
 944 0312 0B       		.byte	0xb
 945 0313 7D000000 		.4byte	0x7d
 946 0317 05       		.uleb128 0x5
 947 0318 03       		.byte	0x3
 948 0319 00000000 		.4byte	reset_encoder_count
 949 031d 09       		.uleb128 0x9
 950 031e C0000000 		.4byte	.LASF44
 951 0322 1D       		.byte	0x1d
 952 0323 09       		.byte	0x9
 953 0324 89000000 		.4byte	0x89
 954 0328 05       		.uleb128 0x5
 955 0329 03       		.byte	0x3
 956 032a 00000000 		.4byte	current_millis
 957 032e 09       		.uleb128 0x9
 958 032f CD020000 		.4byte	.LASF45
 959 0333 1D       		.byte	0x1d
 960 0334 1D       		.byte	0x1d
 961 0335 89000000 		.4byte	0x89
 962 0339 05       		.uleb128 0x5
 963 033a 03       		.byte	0x3
 964 033b 00000000 		.4byte	previous_millis
 965 033f 13       		.uleb128 0x13
 966 0340 37020000 		.4byte	.LASF59
 967 0344 06       		.byte	0x6
 968 0345 CE       		.byte	0xce
 969 0346 05       		.byte	0x5
 970 0347 76000000 		.4byte	0x76
 971 034b 56030000 		.4byte	0x356
 972 034f 14       		.uleb128 0x14
 973 0350 03010000 		.4byte	0x103
 974 0354 15       		.uleb128 0x15
 975 0355 00       		.byte	0
 976 0356 16       		.uleb128 0x16
 977 0357 3C010000 		.4byte	.LASF60
 978 035b 07       		.byte	0x7
 979 035c 13       		.byte	0x13
 980 035d 0A       		.byte	0xa
 981 035e 95000000 		.4byte	0x95
 982 0362 0D       		.uleb128 0xd
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 21


 983 0363 CF000000 		.4byte	.LASF46
 984 0367 85       		.byte	0x85
 985 0368 3C020000 		.4byte	.LFB71
 986 036c 7C000000 		.4byte	.LFE71-.LFB71
 987 0370 01       		.uleb128 0x1
 988 0371 9C       		.byte	0x9c
 989 0372 0D       		.uleb128 0xd
 990 0373 E7000000 		.4byte	.LASF47
 991 0377 73       		.byte	0x73
 992 0378 C8010000 		.4byte	.LFB70
 993 037c 74000000 		.4byte	.LFE70-.LFB70
 994 0380 01       		.uleb128 0x1
 995 0381 9C       		.byte	0x9c
 996 0382 0E       		.uleb128 0xe
 997 0383 78010000 		.4byte	.LASF50
 998 0387 59       		.byte	0x59
 999 0388 68010000 		.4byte	.LFB69
 1000 038c 60000000 		.4byte	.LFE69-.LFB69
 1001 0390 01       		.uleb128 0x1
 1002 0391 9C       		.byte	0x9c
 1003 0392 B3030000 		.4byte	0x3b3
 1004 0396 04       		.uleb128 0x4
 1005 0397 43020000 		.4byte	.LASF48
 1006 039b 59       		.byte	0x59
 1007 039c 22       		.byte	0x22
 1008 039d B3030000 		.4byte	0x3b3
 1009 03a1 02       		.uleb128 0x2
 1010 03a2 91       		.byte	0x91
 1011 03a3 64       		.sleb128 -28
 1012 03a4 04       		.uleb128 0x4
 1013 03a5 1E000000 		.4byte	.LASF49
 1014 03a9 59       		.byte	0x59
 1015 03aa 33       		.byte	0x33
 1016 03ab B3030000 		.4byte	0x3b3
 1017 03af 02       		.uleb128 0x2
 1018 03b0 91       		.byte	0x91
 1019 03b1 60       		.sleb128 -32
 1020 03b2 00       		.byte	0
 1021 03b3 0C       		.uleb128 0xc
 1022 03b4 A6000000 		.4byte	0xa6
 1023 03b8 0E       		.uleb128 0xe
 1024 03b9 68000000 		.4byte	.LASF51
 1025 03bd 39       		.byte	0x39
 1026 03be B4000000 		.4byte	.LFB68
 1027 03c2 B4000000 		.4byte	.LFE68-.LFB68
 1028 03c6 01       		.uleb128 0x1
 1029 03c7 9C       		.byte	0x9c
 1030 03c8 05040000 		.4byte	0x405
 1031 03cc 04       		.uleb128 0x4
 1032 03cd 43020000 		.4byte	.LASF48
 1033 03d1 39       		.byte	0x39
 1034 03d2 1E       		.byte	0x1e
 1035 03d3 B3030000 		.4byte	0x3b3
 1036 03d7 02       		.uleb128 0x2
 1037 03d8 91       		.byte	0x91
 1038 03d9 6C       		.sleb128 -20
 1039 03da 04       		.uleb128 0x4
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 22


 1040 03db 1E000000 		.4byte	.LASF49
 1041 03df 39       		.byte	0x39
 1042 03e0 2F       		.byte	0x2f
 1043 03e1 B3030000 		.4byte	0x3b3
 1044 03e5 02       		.uleb128 0x2
 1045 03e6 91       		.byte	0x91
 1046 03e7 68       		.sleb128 -24
 1047 03e8 0A       		.uleb128 0xa
 1048 03e9 C4020000 		.4byte	.LASF52
 1049 03ed 40       		.byte	0x40
 1050 03ee 09       		.byte	0x9
 1051 03ef 76000000 		.4byte	0x76
 1052 03f3 02       		.uleb128 0x2
 1053 03f4 91       		.byte	0x91
 1054 03f5 74       		.sleb128 -12
 1055 03f6 0A       		.uleb128 0xa
 1056 03f7 03030000 		.4byte	.LASF53
 1057 03fb 40       		.byte	0x40
 1058 03fc 13       		.byte	0x13
 1059 03fd 76000000 		.4byte	0x76
 1060 0401 02       		.uleb128 0x2
 1061 0402 91       		.byte	0x91
 1062 0403 70       		.sleb128 -16
 1063 0404 00       		.byte	0
 1064 0405 17       		.uleb128 0x17
 1065 0406 94000000 		.4byte	.LASF61
 1066 040a 01       		.byte	0x1
 1067 040b 30       		.byte	0x30
 1068 040c 0E       		.byte	0xe
 1069 040d F0000000 		.4byte	0xf0
 1070 0411 42000000 		.4byte	.LFB67
 1071 0415 72000000 		.4byte	.LFE67-.LFB67
 1072 0419 01       		.uleb128 0x1
 1073 041a 9C       		.byte	0x9c
 1074 041b 4A040000 		.4byte	0x44a
 1075 041f 04       		.uleb128 0x4
 1076 0420 DD020000 		.4byte	.LASF54
 1077 0424 30       		.byte	0x30
 1078 0425 23       		.byte	0x23
 1079 0426 76000000 		.4byte	0x76
 1080 042a 02       		.uleb128 0x2
 1081 042b 91       		.byte	0x91
 1082 042c 64       		.sleb128 -28
 1083 042d 04       		.uleb128 0x4
 1084 042e C4020000 		.4byte	.LASF52
 1085 0432 30       		.byte	0x30
 1086 0433 2E       		.byte	0x2e
 1087 0434 76000000 		.4byte	0x76
 1088 0438 02       		.uleb128 0x2
 1089 0439 91       		.byte	0x91
 1090 043a 60       		.sleb128 -32
 1091 043b 0A       		.uleb128 0xa
 1092 043c 10020000 		.4byte	.LASF16
 1093 0440 33       		.byte	0x33
 1094 0441 0B       		.byte	0xb
 1095 0442 F0000000 		.4byte	0xf0
 1096 0446 02       		.uleb128 0x2
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 23


 1097 0447 91       		.byte	0x91
 1098 0448 6C       		.sleb128 -20
 1099 0449 00       		.byte	0
 1100 044a 18       		.uleb128 0x18
 1101 044b 48000000 		.4byte	.LASF62
 1102 044f 01       		.byte	0x1
 1103 0450 22       		.byte	0x22
 1104 0451 06       		.byte	0x6
 1105 0452 00000000 		.4byte	.LFB66
 1106 0456 42000000 		.4byte	.LFE66-.LFB66
 1107 045a 01       		.uleb128 0x1
 1108 045b 9C       		.byte	0x9c
 1109 045c 04       		.uleb128 0x4
 1110 045d 43020000 		.4byte	.LASF48
 1111 0461 22       		.byte	0x22
 1112 0462 1F       		.byte	0x1f
 1113 0463 B3030000 		.4byte	0x3b3
 1114 0467 02       		.uleb128 0x2
 1115 0468 91       		.byte	0x91
 1116 0469 74       		.sleb128 -12
 1117 046a 04       		.uleb128 0x4
 1118 046b 1E000000 		.4byte	.LASF49
 1119 046f 22       		.byte	0x22
 1120 0470 30       		.byte	0x30
 1121 0471 B3030000 		.4byte	0x3b3
 1122 0475 02       		.uleb128 0x2
 1123 0476 91       		.byte	0x91
 1124 0477 70       		.sleb128 -16
 1125 0478 00       		.byte	0
 1126 0479 00       		.byte	0
 1127              		.section	.debug_abbrev,"",%progbits
 1128              	.Ldebug_abbrev0:
 1129 0000 01       		.uleb128 0x1
 1130 0001 0D       		.uleb128 0xd
 1131 0002 00       		.byte	0
 1132 0003 03       		.uleb128 0x3
 1133 0004 0E       		.uleb128 0xe
 1134 0005 3A       		.uleb128 0x3a
 1135 0006 21       		.uleb128 0x21
 1136 0007 05       		.sleb128 5
 1137 0008 3B       		.uleb128 0x3b
 1138 0009 05       		.uleb128 0x5
 1139 000a 39       		.uleb128 0x39
 1140 000b 21       		.uleb128 0x21
 1141 000c 11       		.sleb128 17
 1142 000d 49       		.uleb128 0x49
 1143 000e 13       		.uleb128 0x13
 1144 000f 38       		.uleb128 0x38
 1145 0010 0B       		.uleb128 0xb
 1146 0011 00       		.byte	0
 1147 0012 00       		.byte	0
 1148 0013 02       		.uleb128 0x2
 1149 0014 0D       		.uleb128 0xd
 1150 0015 00       		.byte	0
 1151 0016 03       		.uleb128 0x3
 1152 0017 08       		.uleb128 0x8
 1153 0018 3A       		.uleb128 0x3a
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 24


 1154 0019 21       		.uleb128 0x21
 1155 001a 05       		.sleb128 5
 1156 001b 3B       		.uleb128 0x3b
 1157 001c 05       		.uleb128 0x5
 1158 001d 39       		.uleb128 0x39
 1159 001e 21       		.uleb128 0x21
 1160 001f 11       		.sleb128 17
 1161 0020 49       		.uleb128 0x49
 1162 0021 13       		.uleb128 0x13
 1163 0022 38       		.uleb128 0x38
 1164 0023 0B       		.uleb128 0xb
 1165 0024 00       		.byte	0
 1166 0025 00       		.byte	0
 1167 0026 03       		.uleb128 0x3
 1168 0027 24       		.uleb128 0x24
 1169 0028 00       		.byte	0
 1170 0029 0B       		.uleb128 0xb
 1171 002a 0B       		.uleb128 0xb
 1172 002b 3E       		.uleb128 0x3e
 1173 002c 0B       		.uleb128 0xb
 1174 002d 03       		.uleb128 0x3
 1175 002e 0E       		.uleb128 0xe
 1176 002f 00       		.byte	0
 1177 0030 00       		.byte	0
 1178 0031 04       		.uleb128 0x4
 1179 0032 05       		.uleb128 0x5
 1180 0033 00       		.byte	0
 1181 0034 03       		.uleb128 0x3
 1182 0035 0E       		.uleb128 0xe
 1183 0036 3A       		.uleb128 0x3a
 1184 0037 21       		.uleb128 0x21
 1185 0038 01       		.sleb128 1
 1186 0039 3B       		.uleb128 0x3b
 1187 003a 0B       		.uleb128 0xb
 1188 003b 39       		.uleb128 0x39
 1189 003c 0B       		.uleb128 0xb
 1190 003d 49       		.uleb128 0x49
 1191 003e 13       		.uleb128 0x13
 1192 003f 02       		.uleb128 0x2
 1193 0040 18       		.uleb128 0x18
 1194 0041 00       		.byte	0
 1195 0042 00       		.byte	0
 1196 0043 05       		.uleb128 0x5
 1197 0044 16       		.uleb128 0x16
 1198 0045 00       		.byte	0
 1199 0046 03       		.uleb128 0x3
 1200 0047 0E       		.uleb128 0xe
 1201 0048 3A       		.uleb128 0x3a
 1202 0049 0B       		.uleb128 0xb
 1203 004a 3B       		.uleb128 0x3b
 1204 004b 0B       		.uleb128 0xb
 1205 004c 39       		.uleb128 0x39
 1206 004d 0B       		.uleb128 0xb
 1207 004e 49       		.uleb128 0x49
 1208 004f 13       		.uleb128 0x13
 1209 0050 00       		.byte	0
 1210 0051 00       		.byte	0
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 25


 1211 0052 06       		.uleb128 0x6
 1212 0053 0D       		.uleb128 0xd
 1213 0054 00       		.byte	0
 1214 0055 03       		.uleb128 0x3
 1215 0056 0E       		.uleb128 0xe
 1216 0057 3A       		.uleb128 0x3a
 1217 0058 21       		.uleb128 0x21
 1218 0059 04       		.sleb128 4
 1219 005a 3B       		.uleb128 0x3b
 1220 005b 0B       		.uleb128 0xb
 1221 005c 39       		.uleb128 0x39
 1222 005d 0B       		.uleb128 0xb
 1223 005e 49       		.uleb128 0x49
 1224 005f 13       		.uleb128 0x13
 1225 0060 38       		.uleb128 0x38
 1226 0061 0B       		.uleb128 0xb
 1227 0062 00       		.byte	0
 1228 0063 00       		.byte	0
 1229 0064 07       		.uleb128 0x7
 1230 0065 13       		.uleb128 0x13
 1231 0066 01       		.byte	0x1
 1232 0067 0B       		.uleb128 0xb
 1233 0068 0B       		.uleb128 0xb
 1234 0069 3A       		.uleb128 0x3a
 1235 006a 21       		.uleb128 0x21
 1236 006b 05       		.sleb128 5
 1237 006c 3B       		.uleb128 0x3b
 1238 006d 05       		.uleb128 0x5
 1239 006e 39       		.uleb128 0x39
 1240 006f 21       		.uleb128 0x21
 1241 0070 09       		.sleb128 9
 1242 0071 01       		.uleb128 0x1
 1243 0072 13       		.uleb128 0x13
 1244 0073 00       		.byte	0
 1245 0074 00       		.byte	0
 1246 0075 08       		.uleb128 0x8
 1247 0076 16       		.uleb128 0x16
 1248 0077 00       		.byte	0
 1249 0078 03       		.uleb128 0x3
 1250 0079 0E       		.uleb128 0xe
 1251 007a 3A       		.uleb128 0x3a
 1252 007b 21       		.uleb128 0x21
 1253 007c 05       		.sleb128 5
 1254 007d 3B       		.uleb128 0x3b
 1255 007e 05       		.uleb128 0x5
 1256 007f 39       		.uleb128 0x39
 1257 0080 0B       		.uleb128 0xb
 1258 0081 49       		.uleb128 0x49
 1259 0082 13       		.uleb128 0x13
 1260 0083 00       		.byte	0
 1261 0084 00       		.byte	0
 1262 0085 09       		.uleb128 0x9
 1263 0086 34       		.uleb128 0x34
 1264 0087 00       		.byte	0
 1265 0088 03       		.uleb128 0x3
 1266 0089 0E       		.uleb128 0xe
 1267 008a 3A       		.uleb128 0x3a
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 26


 1268 008b 21       		.uleb128 0x21
 1269 008c 01       		.sleb128 1
 1270 008d 3B       		.uleb128 0x3b
 1271 008e 0B       		.uleb128 0xb
 1272 008f 39       		.uleb128 0x39
 1273 0090 0B       		.uleb128 0xb
 1274 0091 49       		.uleb128 0x49
 1275 0092 13       		.uleb128 0x13
 1276 0093 3F       		.uleb128 0x3f
 1277 0094 19       		.uleb128 0x19
 1278 0095 02       		.uleb128 0x2
 1279 0096 18       		.uleb128 0x18
 1280 0097 00       		.byte	0
 1281 0098 00       		.byte	0
 1282 0099 0A       		.uleb128 0xa
 1283 009a 34       		.uleb128 0x34
 1284 009b 00       		.byte	0
 1285 009c 03       		.uleb128 0x3
 1286 009d 0E       		.uleb128 0xe
 1287 009e 3A       		.uleb128 0x3a
 1288 009f 21       		.uleb128 0x21
 1289 00a0 01       		.sleb128 1
 1290 00a1 3B       		.uleb128 0x3b
 1291 00a2 0B       		.uleb128 0xb
 1292 00a3 39       		.uleb128 0x39
 1293 00a4 0B       		.uleb128 0xb
 1294 00a5 49       		.uleb128 0x49
 1295 00a6 13       		.uleb128 0x13
 1296 00a7 02       		.uleb128 0x2
 1297 00a8 18       		.uleb128 0x18
 1298 00a9 00       		.byte	0
 1299 00aa 00       		.byte	0
 1300 00ab 0B       		.uleb128 0xb
 1301 00ac 26       		.uleb128 0x26
 1302 00ad 00       		.byte	0
 1303 00ae 49       		.uleb128 0x49
 1304 00af 13       		.uleb128 0x13
 1305 00b0 00       		.byte	0
 1306 00b1 00       		.byte	0
 1307 00b2 0C       		.uleb128 0xc
 1308 00b3 0F       		.uleb128 0xf
 1309 00b4 00       		.byte	0
 1310 00b5 0B       		.uleb128 0xb
 1311 00b6 21       		.uleb128 0x21
 1312 00b7 04       		.sleb128 4
 1313 00b8 49       		.uleb128 0x49
 1314 00b9 13       		.uleb128 0x13
 1315 00ba 00       		.byte	0
 1316 00bb 00       		.byte	0
 1317 00bc 0D       		.uleb128 0xd
 1318 00bd 2E       		.uleb128 0x2e
 1319 00be 00       		.byte	0
 1320 00bf 03       		.uleb128 0x3
 1321 00c0 0E       		.uleb128 0xe
 1322 00c1 3A       		.uleb128 0x3a
 1323 00c2 21       		.uleb128 0x21
 1324 00c3 01       		.sleb128 1
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 27


 1325 00c4 3B       		.uleb128 0x3b
 1326 00c5 0B       		.uleb128 0xb
 1327 00c6 39       		.uleb128 0x39
 1328 00c7 21       		.uleb128 0x21
 1329 00c8 0E       		.sleb128 14
 1330 00c9 27       		.uleb128 0x27
 1331 00ca 19       		.uleb128 0x19
 1332 00cb 11       		.uleb128 0x11
 1333 00cc 01       		.uleb128 0x1
 1334 00cd 12       		.uleb128 0x12
 1335 00ce 06       		.uleb128 0x6
 1336 00cf 40       		.uleb128 0x40
 1337 00d0 18       		.uleb128 0x18
 1338 00d1 7A       		.uleb128 0x7a
 1339 00d2 19       		.uleb128 0x19
 1340 00d3 00       		.byte	0
 1341 00d4 00       		.byte	0
 1342 00d5 0E       		.uleb128 0xe
 1343 00d6 2E       		.uleb128 0x2e
 1344 00d7 01       		.byte	0x1
 1345 00d8 3F       		.uleb128 0x3f
 1346 00d9 19       		.uleb128 0x19
 1347 00da 03       		.uleb128 0x3
 1348 00db 0E       		.uleb128 0xe
 1349 00dc 3A       		.uleb128 0x3a
 1350 00dd 21       		.uleb128 0x21
 1351 00de 01       		.sleb128 1
 1352 00df 3B       		.uleb128 0x3b
 1353 00e0 0B       		.uleb128 0xb
 1354 00e1 39       		.uleb128 0x39
 1355 00e2 21       		.uleb128 0x21
 1356 00e3 06       		.sleb128 6
 1357 00e4 27       		.uleb128 0x27
 1358 00e5 19       		.uleb128 0x19
 1359 00e6 11       		.uleb128 0x11
 1360 00e7 01       		.uleb128 0x1
 1361 00e8 12       		.uleb128 0x12
 1362 00e9 06       		.uleb128 0x6
 1363 00ea 40       		.uleb128 0x40
 1364 00eb 18       		.uleb128 0x18
 1365 00ec 7C       		.uleb128 0x7c
 1366 00ed 19       		.uleb128 0x19
 1367 00ee 01       		.uleb128 0x1
 1368 00ef 13       		.uleb128 0x13
 1369 00f0 00       		.byte	0
 1370 00f1 00       		.byte	0
 1371 00f2 0F       		.uleb128 0xf
 1372 00f3 11       		.uleb128 0x11
 1373 00f4 01       		.byte	0x1
 1374 00f5 25       		.uleb128 0x25
 1375 00f6 0E       		.uleb128 0xe
 1376 00f7 13       		.uleb128 0x13
 1377 00f8 0B       		.uleb128 0xb
 1378 00f9 03       		.uleb128 0x3
 1379 00fa 0E       		.uleb128 0xe
 1380 00fb 1B       		.uleb128 0x1b
 1381 00fc 0E       		.uleb128 0xe
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 28


 1382 00fd 11       		.uleb128 0x11
 1383 00fe 01       		.uleb128 0x1
 1384 00ff 12       		.uleb128 0x12
 1385 0100 06       		.uleb128 0x6
 1386 0101 10       		.uleb128 0x10
 1387 0102 17       		.uleb128 0x17
 1388 0103 00       		.byte	0
 1389 0104 00       		.byte	0
 1390 0105 10       		.uleb128 0x10
 1391 0106 24       		.uleb128 0x24
 1392 0107 00       		.byte	0
 1393 0108 0B       		.uleb128 0xb
 1394 0109 0B       		.uleb128 0xb
 1395 010a 3E       		.uleb128 0x3e
 1396 010b 0B       		.uleb128 0xb
 1397 010c 03       		.uleb128 0x3
 1398 010d 08       		.uleb128 0x8
 1399 010e 00       		.byte	0
 1400 010f 00       		.byte	0
 1401 0110 11       		.uleb128 0x11
 1402 0111 35       		.uleb128 0x35
 1403 0112 00       		.byte	0
 1404 0113 49       		.uleb128 0x49
 1405 0114 13       		.uleb128 0x13
 1406 0115 00       		.byte	0
 1407 0116 00       		.byte	0
 1408 0117 12       		.uleb128 0x12
 1409 0118 13       		.uleb128 0x13
 1410 0119 01       		.byte	0x1
 1411 011a 03       		.uleb128 0x3
 1412 011b 0E       		.uleb128 0xe
 1413 011c 0B       		.uleb128 0xb
 1414 011d 0B       		.uleb128 0xb
 1415 011e 3A       		.uleb128 0x3a
 1416 011f 0B       		.uleb128 0xb
 1417 0120 3B       		.uleb128 0x3b
 1418 0121 0B       		.uleb128 0xb
 1419 0122 39       		.uleb128 0x39
 1420 0123 0B       		.uleb128 0xb
 1421 0124 01       		.uleb128 0x1
 1422 0125 13       		.uleb128 0x13
 1423 0126 00       		.byte	0
 1424 0127 00       		.byte	0
 1425 0128 13       		.uleb128 0x13
 1426 0129 2E       		.uleb128 0x2e
 1427 012a 01       		.byte	0x1
 1428 012b 3F       		.uleb128 0x3f
 1429 012c 19       		.uleb128 0x19
 1430 012d 03       		.uleb128 0x3
 1431 012e 0E       		.uleb128 0xe
 1432 012f 3A       		.uleb128 0x3a
 1433 0130 0B       		.uleb128 0xb
 1434 0131 3B       		.uleb128 0x3b
 1435 0132 0B       		.uleb128 0xb
 1436 0133 39       		.uleb128 0x39
 1437 0134 0B       		.uleb128 0xb
 1438 0135 27       		.uleb128 0x27
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 29


 1439 0136 19       		.uleb128 0x19
 1440 0137 49       		.uleb128 0x49
 1441 0138 13       		.uleb128 0x13
 1442 0139 3C       		.uleb128 0x3c
 1443 013a 19       		.uleb128 0x19
 1444 013b 01       		.uleb128 0x1
 1445 013c 13       		.uleb128 0x13
 1446 013d 00       		.byte	0
 1447 013e 00       		.byte	0
 1448 013f 14       		.uleb128 0x14
 1449 0140 05       		.uleb128 0x5
 1450 0141 00       		.byte	0
 1451 0142 49       		.uleb128 0x49
 1452 0143 13       		.uleb128 0x13
 1453 0144 00       		.byte	0
 1454 0145 00       		.byte	0
 1455 0146 15       		.uleb128 0x15
 1456 0147 18       		.uleb128 0x18
 1457 0148 00       		.byte	0
 1458 0149 00       		.byte	0
 1459 014a 00       		.byte	0
 1460 014b 16       		.uleb128 0x16
 1461 014c 2E       		.uleb128 0x2e
 1462 014d 00       		.byte	0
 1463 014e 3F       		.uleb128 0x3f
 1464 014f 19       		.uleb128 0x19
 1465 0150 03       		.uleb128 0x3
 1466 0151 0E       		.uleb128 0xe
 1467 0152 3A       		.uleb128 0x3a
 1468 0153 0B       		.uleb128 0xb
 1469 0154 3B       		.uleb128 0x3b
 1470 0155 0B       		.uleb128 0xb
 1471 0156 39       		.uleb128 0x39
 1472 0157 0B       		.uleb128 0xb
 1473 0158 27       		.uleb128 0x27
 1474 0159 19       		.uleb128 0x19
 1475 015a 49       		.uleb128 0x49
 1476 015b 13       		.uleb128 0x13
 1477 015c 3C       		.uleb128 0x3c
 1478 015d 19       		.uleb128 0x19
 1479 015e 00       		.byte	0
 1480 015f 00       		.byte	0
 1481 0160 17       		.uleb128 0x17
 1482 0161 2E       		.uleb128 0x2e
 1483 0162 01       		.byte	0x1
 1484 0163 03       		.uleb128 0x3
 1485 0164 0E       		.uleb128 0xe
 1486 0165 3A       		.uleb128 0x3a
 1487 0166 0B       		.uleb128 0xb
 1488 0167 3B       		.uleb128 0x3b
 1489 0168 0B       		.uleb128 0xb
 1490 0169 39       		.uleb128 0x39
 1491 016a 0B       		.uleb128 0xb
 1492 016b 27       		.uleb128 0x27
 1493 016c 19       		.uleb128 0x19
 1494 016d 49       		.uleb128 0x49
 1495 016e 13       		.uleb128 0x13
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 30


 1496 016f 11       		.uleb128 0x11
 1497 0170 01       		.uleb128 0x1
 1498 0171 12       		.uleb128 0x12
 1499 0172 06       		.uleb128 0x6
 1500 0173 40       		.uleb128 0x40
 1501 0174 18       		.uleb128 0x18
 1502 0175 7C       		.uleb128 0x7c
 1503 0176 19       		.uleb128 0x19
 1504 0177 01       		.uleb128 0x1
 1505 0178 13       		.uleb128 0x13
 1506 0179 00       		.byte	0
 1507 017a 00       		.byte	0
 1508 017b 18       		.uleb128 0x18
 1509 017c 2E       		.uleb128 0x2e
 1510 017d 01       		.byte	0x1
 1511 017e 3F       		.uleb128 0x3f
 1512 017f 19       		.uleb128 0x19
 1513 0180 03       		.uleb128 0x3
 1514 0181 0E       		.uleb128 0xe
 1515 0182 3A       		.uleb128 0x3a
 1516 0183 0B       		.uleb128 0xb
 1517 0184 3B       		.uleb128 0x3b
 1518 0185 0B       		.uleb128 0xb
 1519 0186 39       		.uleb128 0x39
 1520 0187 0B       		.uleb128 0xb
 1521 0188 27       		.uleb128 0x27
 1522 0189 19       		.uleb128 0x19
 1523 018a 11       		.uleb128 0x11
 1524 018b 01       		.uleb128 0x1
 1525 018c 12       		.uleb128 0x12
 1526 018d 06       		.uleb128 0x6
 1527 018e 40       		.uleb128 0x40
 1528 018f 18       		.uleb128 0x18
 1529 0190 7C       		.uleb128 0x7c
 1530 0191 19       		.uleb128 0x19
 1531 0192 00       		.byte	0
 1532 0193 00       		.byte	0
 1533 0194 00       		.byte	0
 1534              		.section	.debug_aranges,"",%progbits
 1535 0000 1C000000 		.4byte	0x1c
 1536 0004 0200     		.2byte	0x2
 1537 0006 00000000 		.4byte	.Ldebug_info0
 1538 000a 04       		.byte	0x4
 1539 000b 00       		.byte	0
 1540 000c 0000     		.2byte	0
 1541 000e 0000     		.2byte	0
 1542 0010 00000000 		.4byte	.Ltext0
 1543 0014 B8020000 		.4byte	.Letext0-.Ltext0
 1544 0018 00000000 		.4byte	0
 1545 001c 00000000 		.4byte	0
 1546              		.section	.debug_line,"",%progbits
 1547              	.Ldebug_line0:
 1548 0000 E6020000 		.section	.debug_str,"MS",%progbits,1
 1548      03009C01 
 1548      00000201 
 1548      FB0E0D00 
 1548      01010101 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 31


 1549              	.LASF22:
 1550 0000 4750494F 		.ascii	"GPIO_TypeDef\000"
 1550      5F547970 
 1550      65446566 
 1550      00
 1551              	.LASF35:
 1552 000d 43434552 		.ascii	"CCER\000"
 1552      00
 1553              	.LASF30:
 1554 0012 5243435F 		.ascii	"RCC_TypeDef\000"
 1554      54797065 
 1554      44656600 
 1555              	.LASF49:
 1556 001e 72696768 		.ascii	"right\000"
 1556      7400
 1557              	.LASF25:
 1558 0024 41504231 		.ascii	"APB1RSTR\000"
 1558      52535452 
 1558      00
 1559              	.LASF41:
 1560 002d 444D4152 		.ascii	"DMAR\000"
 1560      00
 1561              	.LASF33:
 1562 0032 43434D52 		.ascii	"CCMR1\000"
 1562      3100
 1563              	.LASF34:
 1564 0038 43434D52 		.ascii	"CCMR2\000"
 1564      3200
 1565              	.LASF2:
 1566 003e 73686F72 		.ascii	"short int\000"
 1566      7420696E 
 1566      7400
 1567              	.LASF62:
 1568 0048 696E6974 		.ascii	"init_encoder\000"
 1568      5F656E63 
 1568      6F646572 
 1568      00
 1569              	.LASF29:
 1570 0055 42444352 		.ascii	"BDCR\000"
 1570      00
 1571              	.LASF56:
 1572 005a 7372632F 		.ascii	"src/encoder.c\000"
 1572      656E636F 
 1572      6465722E 
 1572      6300
 1573              	.LASF51:
 1574 0068 75706461 		.ascii	"update_speed\000"
 1574      74655F73 
 1574      70656564 
 1574      00
 1575              	.LASF43:
 1576 0075 72657365 		.ascii	"reset_encoder_count\000"
 1576      745F656E 
 1576      636F6465 
 1576      725F636F 
 1576      756E7400 
 1577              	.LASF6:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 32


 1578 0089 5F5F7569 		.ascii	"__uint32_t\000"
 1578      6E743332 
 1578      5F7400
 1579              	.LASF61:
 1580 0094 63616C63 		.ascii	"calculate_speed\000"
 1580      756C6174 
 1580      655F7370 
 1580      65656400 
 1581              	.LASF15:
 1582 00a4 70726576 		.ascii	"previous_count\000"
 1582      696F7573 
 1582      5F636F75 
 1582      6E7400
 1583              	.LASF23:
 1584 00b3 43464752 		.ascii	"CFGR\000"
 1584      00
 1585              	.LASF28:
 1586 00b8 41504231 		.ascii	"APB1ENR\000"
 1586      454E5200 
 1587              	.LASF44:
 1588 00c0 63757272 		.ascii	"current_millis\000"
 1588      656E745F 
 1588      6D696C6C 
 1588      697300
 1589              	.LASF46:
 1590 00cf 696E6974 		.ascii	"init_hardware_decoder_2\000"
 1590      5F686172 
 1590      64776172 
 1590      655F6465 
 1590      636F6465 
 1591              	.LASF47:
 1592 00e7 696E6974 		.ascii	"init_hardware_decoder_1\000"
 1592      5F686172 
 1592      64776172 
 1592      655F6465 
 1592      636F6465 
 1593              	.LASF0:
 1594 00ff 7369676E 		.ascii	"signed char\000"
 1594      65642063 
 1594      68617200 
 1595              	.LASF18:
 1596 010b 666C6F61 		.ascii	"float\000"
 1596      7400
 1597              	.LASF14:
 1598 0111 63757272 		.ascii	"current_count\000"
 1598      656E745F 
 1598      636F756E 
 1598      7400
 1599              	.LASF8:
 1600 011f 6C6F6E67 		.ascii	"long long int\000"
 1600      206C6F6E 
 1600      6720696E 
 1600      7400
 1601              	.LASF19:
 1602 012d 63686172 		.ascii	"char\000"
 1602      00
 1603              	.LASF36:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 33


 1604 0132 43435231 		.ascii	"CCR1\000"
 1604      00
 1605              	.LASF37:
 1606 0137 43435232 		.ascii	"CCR2\000"
 1606      00
 1607              	.LASF60:
 1608 013c 6D696C6C 		.ascii	"millis\000"
 1608      697300
 1609              	.LASF39:
 1610 0143 43435234 		.ascii	"CCR4\000"
 1610      00
 1611              	.LASF13:
 1612 0148 656E636F 		.ascii	"encoder_t\000"
 1612      6465725F 
 1612      7400
 1613              	.LASF20:
 1614 0152 42535252 		.ascii	"BSRR\000"
 1614      00
 1615              	.LASF26:
 1616 0157 41484245 		.ascii	"AHBENR\000"
 1616      4E5200
 1617              	.LASF24:
 1618 015e 41504232 		.ascii	"APB2RSTR\000"
 1618      52535452 
 1618      00
 1619              	.LASF42:
 1620 0167 54494D5F 		.ascii	"TIM_TypeDef\000"
 1620      54797065 
 1620      44656600 
 1621              	.LASF31:
 1622 0173 534D4352 		.ascii	"SMCR\000"
 1622      00
 1623              	.LASF50:
 1624 0178 7072696E 		.ascii	"print_debug_info\000"
 1624      745F6465 
 1624      6275675F 
 1624      696E666F 
 1624      00
 1625              	.LASF1:
 1626 0189 756E7369 		.ascii	"unsigned char\000"
 1626      676E6564 
 1626      20636861 
 1626      7200
 1627              	.LASF38:
 1628 0197 43435233 		.ascii	"CCR3\000"
 1628      00
 1629              	.LASF27:
 1630 019c 41504232 		.ascii	"APB2ENR\000"
 1630      454E5200 
 1631              	.LASF57:
 1632 01a4 2F557365 		.ascii	"/Users/cw/Projekte_local/maker/stm32/STM32F103_ENCO"
 1632      72732F63 
 1632      772F5072 
 1632      6F6A656B 
 1632      74655F6C 
 1633 01d7 44455200 		.ascii	"DER\000"
 1634              	.LASF11:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 34


 1635 01db 696E7433 		.ascii	"int32_t\000"
 1635      325F7400 
 1636              	.LASF9:
 1637 01e3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1637      206C6F6E 
 1637      6720756E 
 1637      7369676E 
 1637      65642069 
 1638              	.LASF12:
 1639 01fa 75696E74 		.ascii	"uint32_t\000"
 1639      33325F74 
 1639      00
 1640              	.LASF10:
 1641 0203 756E7369 		.ascii	"unsigned int\000"
 1641      676E6564 
 1641      20696E74 
 1641      00
 1642              	.LASF16:
 1643 0210 73706565 		.ascii	"speed\000"
 1643      6400
 1644              	.LASF32:
 1645 0216 44494552 		.ascii	"DIER\000"
 1645      00
 1646              	.LASF3:
 1647 021b 73686F72 		.ascii	"short unsigned int\000"
 1647      7420756E 
 1647      7369676E 
 1647      65642069 
 1647      6E7400
 1648              	.LASF4:
 1649 022e 6C6F6E67 		.ascii	"long int\000"
 1649      20696E74 
 1649      00
 1650              	.LASF59:
 1651 0237 7072696E 		.ascii	"printf\000"
 1651      746600
 1652              	.LASF40:
 1653 023e 42445452 		.ascii	"BDTR\000"
 1653      00
 1654              	.LASF48:
 1655 0243 6C656674 		.ascii	"left\000"
 1655      00
 1656              	.LASF55:
 1657 0248 474E5520 		.ascii	"GNU C99 13.2.1 20231009 -mthumb -mcpu=cortex-m3 -mf"
 1657      43393920 
 1657      31332E32 
 1657      2E312032 
 1657      30323331 
 1658 027b 6C6F6174 		.ascii	"loat-abi=soft -march=armv7-m -g -std=gnu99 -fno-com"
 1658      2D616269 
 1658      3D736F66 
 1658      74202D6D 
 1658      61726368 
 1659 02ae 6D6F6E00 		.ascii	"mon\000"
 1660              	.LASF7:
 1661 02b2 6C6F6E67 		.ascii	"long unsigned int\000"
 1661      20756E73 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 35


 1661      69676E65 
 1661      6420696E 
 1661      7400
 1662              	.LASF52:
 1663 02c4 696E7465 		.ascii	"interval\000"
 1663      7276616C 
 1663      00
 1664              	.LASF45:
 1665 02cd 70726576 		.ascii	"previous_millis\000"
 1665      696F7573 
 1665      5F6D696C 
 1665      6C697300 
 1666              	.LASF54:
 1667 02dd 636F756E 		.ascii	"count\000"
 1667      7400
 1668              	.LASF5:
 1669 02e3 5F5F696E 		.ascii	"__int32_t\000"
 1669      7433325F 
 1669      7400
 1670              	.LASF58:
 1671 02ed 656E636F 		.ascii	"encoder\000"
 1671      64657200 
 1672              	.LASF17:
 1673 02f5 706F7369 		.ascii	"position\000"
 1673      74696F6E 
 1673      00
 1674              	.LASF21:
 1675 02fe 4C434B52 		.ascii	"LCKR\000"
 1675      00
 1676              	.LASF53:
 1677 0303 636F756E 		.ascii	"count_difference\000"
 1677      745F6469 
 1677      66666572 
 1677      656E6365 
 1677      00
 1678              		.ident	"GCC: (Arm GNU Toolchain 13.2.rel1 (Build arm-13.7)) 13.2.1 20231009"
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 encoder.c
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:23     .rodata:00000000 reset_encoder_count
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:20     .rodata:00000000 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:30     .bss:00000000 current_millis
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:27     .bss:00000000 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:36     .bss:00000004 previous_millis
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:39     .text:00000000 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:45     .text:00000000 init_encoder
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:405    .text:000001c8 init_hardware_decoder_1
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:496    .text:0000023c init_hardware_decoder_2
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:112    .text:00000042 calculate_speed
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:177    .text:000000a8 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:183    .text:000000b4 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:189    .text:000000b4 update_speed
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:311    .text:0000015c $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:323    .text:00000168 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:329    .text:00000168 print_debug_info
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:396    .text:000001c4 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:400    .text:000001c8 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:485    .text:00000230 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:491    .text:0000023c $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc7S0SzF.s:576    .text:000002b0 $d

UNDEFINED SYMBOLS
__aeabi_i2f
__aeabi_fdiv
__aeabi_f2d
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2f
millis
printf
