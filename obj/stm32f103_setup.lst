ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f103_setup.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "src/stm32f103_setup.c"
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_SetPriority, %function
  23              	NVIC_SetPriority:
  24              	.LFB54:
  25              		.file 2 "./CMSIS/include/core_cm3.h"
   1:./CMSIS/include/core_cm3.h **** /**************************************************************************//**
   2:./CMSIS/include/core_cm3.h ****  * @file     core_cm3.h
   3:./CMSIS/include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./CMSIS/include/core_cm3.h ****  * @version  V4.30
   5:./CMSIS/include/core_cm3.h ****  * @date     20. October 2015
   6:./CMSIS/include/core_cm3.h ****  ******************************************************************************/
   7:./CMSIS/include/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./CMSIS/include/core_cm3.h **** 
   9:./CMSIS/include/core_cm3.h ****    All rights reserved.
  10:./CMSIS/include/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:./CMSIS/include/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:./CMSIS/include/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:./CMSIS/include/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:./CMSIS/include/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./CMSIS/include/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:./CMSIS/include/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:./CMSIS/include/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./CMSIS/include/core_cm3.h ****      to endorse or promote products derived from this software without
  19:./CMSIS/include/core_cm3.h ****      specific prior written permission.
  20:./CMSIS/include/core_cm3.h ****    *
  21:./CMSIS/include/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./CMSIS/include/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./CMSIS/include/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./CMSIS/include/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./CMSIS/include/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./CMSIS/include/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./CMSIS/include/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./CMSIS/include/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./CMSIS/include/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./CMSIS/include/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:./CMSIS/include/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./CMSIS/include/core_cm3.h ****    ---------------------------------------------------------------------------*/
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 2


  33:./CMSIS/include/core_cm3.h **** 
  34:./CMSIS/include/core_cm3.h **** 
  35:./CMSIS/include/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:./CMSIS/include/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:./CMSIS/include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:./CMSIS/include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:./CMSIS/include/core_cm3.h **** #endif
  40:./CMSIS/include/core_cm3.h **** 
  41:./CMSIS/include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:./CMSIS/include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:./CMSIS/include/core_cm3.h **** 
  44:./CMSIS/include/core_cm3.h **** #include <stdint.h>
  45:./CMSIS/include/core_cm3.h **** 
  46:./CMSIS/include/core_cm3.h **** #ifdef __cplusplus
  47:./CMSIS/include/core_cm3.h ****  extern "C" {
  48:./CMSIS/include/core_cm3.h **** #endif
  49:./CMSIS/include/core_cm3.h **** 
  50:./CMSIS/include/core_cm3.h **** /**
  51:./CMSIS/include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:./CMSIS/include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:./CMSIS/include/core_cm3.h **** 
  54:./CMSIS/include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:./CMSIS/include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  56:./CMSIS/include/core_cm3.h **** 
  57:./CMSIS/include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:./CMSIS/include/core_cm3.h ****      Unions are used for effective representation of core registers.
  59:./CMSIS/include/core_cm3.h **** 
  60:./CMSIS/include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:./CMSIS/include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  62:./CMSIS/include/core_cm3.h ****  */
  63:./CMSIS/include/core_cm3.h **** 
  64:./CMSIS/include/core_cm3.h **** 
  65:./CMSIS/include/core_cm3.h **** /*******************************************************************************
  66:./CMSIS/include/core_cm3.h ****  *                 CMSIS definitions
  67:./CMSIS/include/core_cm3.h ****  ******************************************************************************/
  68:./CMSIS/include/core_cm3.h **** /**
  69:./CMSIS/include/core_cm3.h ****   \ingroup Cortex_M3
  70:./CMSIS/include/core_cm3.h ****   @{
  71:./CMSIS/include/core_cm3.h ****  */
  72:./CMSIS/include/core_cm3.h **** 
  73:./CMSIS/include/core_cm3.h **** /*  CMSIS CM3 definitions */
  74:./CMSIS/include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:./CMSIS/include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:./CMSIS/include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  77:./CMSIS/include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:./CMSIS/include/core_cm3.h **** 
  79:./CMSIS/include/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  80:./CMSIS/include/core_cm3.h **** 
  81:./CMSIS/include/core_cm3.h **** 
  82:./CMSIS/include/core_cm3.h **** #if   defined ( __CC_ARM )
  83:./CMSIS/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:./CMSIS/include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  86:./CMSIS/include/core_cm3.h **** 
  87:./CMSIS/include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:./CMSIS/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:./CMSIS/include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 3


  90:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  91:./CMSIS/include/core_cm3.h **** 
  92:./CMSIS/include/core_cm3.h **** #elif defined ( __GNUC__ )
  93:./CMSIS/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:./CMSIS/include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static inline
  96:./CMSIS/include/core_cm3.h **** 
  97:./CMSIS/include/core_cm3.h **** #elif defined ( __ICCARM__ )
  98:./CMSIS/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:./CMSIS/include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 101:./CMSIS/include/core_cm3.h **** 
 102:./CMSIS/include/core_cm3.h **** #elif defined ( __TMS470__ )
 103:./CMSIS/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 105:./CMSIS/include/core_cm3.h **** 
 106:./CMSIS/include/core_cm3.h **** #elif defined ( __TASKING__ )
 107:./CMSIS/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:./CMSIS/include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 110:./CMSIS/include/core_cm3.h **** 
 111:./CMSIS/include/core_cm3.h **** #elif defined ( __CSMC__ )
 112:./CMSIS/include/core_cm3.h ****   #define __packed
 113:./CMSIS/include/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:./CMSIS/include/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 116:./CMSIS/include/core_cm3.h **** 
 117:./CMSIS/include/core_cm3.h **** #else
 118:./CMSIS/include/core_cm3.h ****   #error Unknown compiler
 119:./CMSIS/include/core_cm3.h **** #endif
 120:./CMSIS/include/core_cm3.h **** 
 121:./CMSIS/include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:./CMSIS/include/core_cm3.h ****     This core does not support an FPU at all
 123:./CMSIS/include/core_cm3.h **** */
 124:./CMSIS/include/core_cm3.h **** #define __FPU_USED       0U
 125:./CMSIS/include/core_cm3.h **** 
 126:./CMSIS/include/core_cm3.h **** #if defined ( __CC_ARM )
 127:./CMSIS/include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 128:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:./CMSIS/include/core_cm3.h ****   #endif
 130:./CMSIS/include/core_cm3.h **** 
 131:./CMSIS/include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:./CMSIS/include/core_cm3.h ****   #if defined __ARM_PCS_VFP
 133:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:./CMSIS/include/core_cm3.h ****   #endif
 135:./CMSIS/include/core_cm3.h **** 
 136:./CMSIS/include/core_cm3.h **** #elif defined ( __GNUC__ )
 137:./CMSIS/include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:./CMSIS/include/core_cm3.h ****   #endif
 140:./CMSIS/include/core_cm3.h **** 
 141:./CMSIS/include/core_cm3.h **** #elif defined ( __ICCARM__ )
 142:./CMSIS/include/core_cm3.h ****   #if defined __ARMVFP__
 143:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:./CMSIS/include/core_cm3.h ****   #endif
 145:./CMSIS/include/core_cm3.h **** 
 146:./CMSIS/include/core_cm3.h **** #elif defined ( __TMS470__ )
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 4


 147:./CMSIS/include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 148:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:./CMSIS/include/core_cm3.h ****   #endif
 150:./CMSIS/include/core_cm3.h **** 
 151:./CMSIS/include/core_cm3.h **** #elif defined ( __TASKING__ )
 152:./CMSIS/include/core_cm3.h ****   #if defined __FPU_VFP__
 153:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:./CMSIS/include/core_cm3.h ****   #endif
 155:./CMSIS/include/core_cm3.h **** 
 156:./CMSIS/include/core_cm3.h **** #elif defined ( __CSMC__ )
 157:./CMSIS/include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 158:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:./CMSIS/include/core_cm3.h ****   #endif
 160:./CMSIS/include/core_cm3.h **** 
 161:./CMSIS/include/core_cm3.h **** #endif
 162:./CMSIS/include/core_cm3.h **** 
 163:./CMSIS/include/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:./CMSIS/include/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:./CMSIS/include/core_cm3.h **** 
 166:./CMSIS/include/core_cm3.h **** #ifdef __cplusplus
 167:./CMSIS/include/core_cm3.h **** }
 168:./CMSIS/include/core_cm3.h **** #endif
 169:./CMSIS/include/core_cm3.h **** 
 170:./CMSIS/include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 171:./CMSIS/include/core_cm3.h **** 
 172:./CMSIS/include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 173:./CMSIS/include/core_cm3.h **** 
 174:./CMSIS/include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 175:./CMSIS/include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 176:./CMSIS/include/core_cm3.h **** 
 177:./CMSIS/include/core_cm3.h **** #ifdef __cplusplus
 178:./CMSIS/include/core_cm3.h ****  extern "C" {
 179:./CMSIS/include/core_cm3.h **** #endif
 180:./CMSIS/include/core_cm3.h **** 
 181:./CMSIS/include/core_cm3.h **** /* check device defines and use defaults */
 182:./CMSIS/include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 183:./CMSIS/include/core_cm3.h ****   #ifndef __CM3_REV
 184:./CMSIS/include/core_cm3.h ****     #define __CM3_REV               0x0200U
 185:./CMSIS/include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 186:./CMSIS/include/core_cm3.h ****   #endif
 187:./CMSIS/include/core_cm3.h **** 
 188:./CMSIS/include/core_cm3.h ****   #ifndef __MPU_PRESENT
 189:./CMSIS/include/core_cm3.h ****     #define __MPU_PRESENT             0U
 190:./CMSIS/include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:./CMSIS/include/core_cm3.h ****   #endif
 192:./CMSIS/include/core_cm3.h **** 
 193:./CMSIS/include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 194:./CMSIS/include/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 195:./CMSIS/include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 196:./CMSIS/include/core_cm3.h ****   #endif
 197:./CMSIS/include/core_cm3.h **** 
 198:./CMSIS/include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 199:./CMSIS/include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 200:./CMSIS/include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 201:./CMSIS/include/core_cm3.h ****   #endif
 202:./CMSIS/include/core_cm3.h **** #endif
 203:./CMSIS/include/core_cm3.h **** 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 5


 204:./CMSIS/include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 205:./CMSIS/include/core_cm3.h **** /**
 206:./CMSIS/include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 207:./CMSIS/include/core_cm3.h **** 
 208:./CMSIS/include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 209:./CMSIS/include/core_cm3.h ****     \li to specify the access to peripheral variables.
 210:./CMSIS/include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 211:./CMSIS/include/core_cm3.h **** */
 212:./CMSIS/include/core_cm3.h **** #ifdef __cplusplus
 213:./CMSIS/include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 214:./CMSIS/include/core_cm3.h **** #else
 215:./CMSIS/include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 216:./CMSIS/include/core_cm3.h **** #endif
 217:./CMSIS/include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 218:./CMSIS/include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 219:./CMSIS/include/core_cm3.h **** 
 220:./CMSIS/include/core_cm3.h **** /* following defines should be used for structure members */
 221:./CMSIS/include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 222:./CMSIS/include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 223:./CMSIS/include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 224:./CMSIS/include/core_cm3.h **** 
 225:./CMSIS/include/core_cm3.h **** /*@} end of group Cortex_M3 */
 226:./CMSIS/include/core_cm3.h **** 
 227:./CMSIS/include/core_cm3.h **** 
 228:./CMSIS/include/core_cm3.h **** 
 229:./CMSIS/include/core_cm3.h **** /*******************************************************************************
 230:./CMSIS/include/core_cm3.h ****  *                 Register Abstraction
 231:./CMSIS/include/core_cm3.h ****   Core Register contain:
 232:./CMSIS/include/core_cm3.h ****   - Core Register
 233:./CMSIS/include/core_cm3.h ****   - Core NVIC Register
 234:./CMSIS/include/core_cm3.h ****   - Core SCB Register
 235:./CMSIS/include/core_cm3.h ****   - Core SysTick Register
 236:./CMSIS/include/core_cm3.h ****   - Core Debug Register
 237:./CMSIS/include/core_cm3.h ****   - Core MPU Register
 238:./CMSIS/include/core_cm3.h ****  ******************************************************************************/
 239:./CMSIS/include/core_cm3.h **** /**
 240:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 241:./CMSIS/include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 242:./CMSIS/include/core_cm3.h **** */
 243:./CMSIS/include/core_cm3.h **** 
 244:./CMSIS/include/core_cm3.h **** /**
 245:./CMSIS/include/core_cm3.h ****   \ingroup    CMSIS_core_register
 246:./CMSIS/include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 247:./CMSIS/include/core_cm3.h ****   \brief      Core Register type definitions.
 248:./CMSIS/include/core_cm3.h ****   @{
 249:./CMSIS/include/core_cm3.h ****  */
 250:./CMSIS/include/core_cm3.h **** 
 251:./CMSIS/include/core_cm3.h **** /**
 252:./CMSIS/include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 253:./CMSIS/include/core_cm3.h ****  */
 254:./CMSIS/include/core_cm3.h **** typedef union
 255:./CMSIS/include/core_cm3.h **** {
 256:./CMSIS/include/core_cm3.h ****   struct
 257:./CMSIS/include/core_cm3.h ****   {
 258:./CMSIS/include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 259:./CMSIS/include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 260:./CMSIS/include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 6


 261:./CMSIS/include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 262:./CMSIS/include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 263:./CMSIS/include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 264:./CMSIS/include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 265:./CMSIS/include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 266:./CMSIS/include/core_cm3.h **** } APSR_Type;
 267:./CMSIS/include/core_cm3.h **** 
 268:./CMSIS/include/core_cm3.h **** /* APSR Register Definitions */
 269:./CMSIS/include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 270:./CMSIS/include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 271:./CMSIS/include/core_cm3.h **** 
 272:./CMSIS/include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 273:./CMSIS/include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 274:./CMSIS/include/core_cm3.h **** 
 275:./CMSIS/include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 276:./CMSIS/include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 277:./CMSIS/include/core_cm3.h **** 
 278:./CMSIS/include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 279:./CMSIS/include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 280:./CMSIS/include/core_cm3.h **** 
 281:./CMSIS/include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 282:./CMSIS/include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 283:./CMSIS/include/core_cm3.h **** 
 284:./CMSIS/include/core_cm3.h **** 
 285:./CMSIS/include/core_cm3.h **** /**
 286:./CMSIS/include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:./CMSIS/include/core_cm3.h ****  */
 288:./CMSIS/include/core_cm3.h **** typedef union
 289:./CMSIS/include/core_cm3.h **** {
 290:./CMSIS/include/core_cm3.h ****   struct
 291:./CMSIS/include/core_cm3.h ****   {
 292:./CMSIS/include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:./CMSIS/include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:./CMSIS/include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 295:./CMSIS/include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:./CMSIS/include/core_cm3.h **** } IPSR_Type;
 297:./CMSIS/include/core_cm3.h **** 
 298:./CMSIS/include/core_cm3.h **** /* IPSR Register Definitions */
 299:./CMSIS/include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:./CMSIS/include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:./CMSIS/include/core_cm3.h **** 
 302:./CMSIS/include/core_cm3.h **** 
 303:./CMSIS/include/core_cm3.h **** /**
 304:./CMSIS/include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:./CMSIS/include/core_cm3.h ****  */
 306:./CMSIS/include/core_cm3.h **** typedef union
 307:./CMSIS/include/core_cm3.h **** {
 308:./CMSIS/include/core_cm3.h ****   struct
 309:./CMSIS/include/core_cm3.h ****   {
 310:./CMSIS/include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:./CMSIS/include/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:./CMSIS/include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:./CMSIS/include/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 314:./CMSIS/include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 315:./CMSIS/include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 316:./CMSIS/include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 317:./CMSIS/include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 7


 318:./CMSIS/include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 319:./CMSIS/include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 320:./CMSIS/include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:./CMSIS/include/core_cm3.h **** } xPSR_Type;
 322:./CMSIS/include/core_cm3.h **** 
 323:./CMSIS/include/core_cm3.h **** /* xPSR Register Definitions */
 324:./CMSIS/include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 325:./CMSIS/include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 326:./CMSIS/include/core_cm3.h **** 
 327:./CMSIS/include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 328:./CMSIS/include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 329:./CMSIS/include/core_cm3.h **** 
 330:./CMSIS/include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 331:./CMSIS/include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 332:./CMSIS/include/core_cm3.h **** 
 333:./CMSIS/include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 334:./CMSIS/include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 335:./CMSIS/include/core_cm3.h **** 
 336:./CMSIS/include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 337:./CMSIS/include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 338:./CMSIS/include/core_cm3.h **** 
 339:./CMSIS/include/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 340:./CMSIS/include/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 341:./CMSIS/include/core_cm3.h **** 
 342:./CMSIS/include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 343:./CMSIS/include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 344:./CMSIS/include/core_cm3.h **** 
 345:./CMSIS/include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 346:./CMSIS/include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 347:./CMSIS/include/core_cm3.h **** 
 348:./CMSIS/include/core_cm3.h **** 
 349:./CMSIS/include/core_cm3.h **** /**
 350:./CMSIS/include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 351:./CMSIS/include/core_cm3.h ****  */
 352:./CMSIS/include/core_cm3.h **** typedef union
 353:./CMSIS/include/core_cm3.h **** {
 354:./CMSIS/include/core_cm3.h ****   struct
 355:./CMSIS/include/core_cm3.h ****   {
 356:./CMSIS/include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 357:./CMSIS/include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 358:./CMSIS/include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 359:./CMSIS/include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 360:./CMSIS/include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:./CMSIS/include/core_cm3.h **** } CONTROL_Type;
 362:./CMSIS/include/core_cm3.h **** 
 363:./CMSIS/include/core_cm3.h **** /* CONTROL Register Definitions */
 364:./CMSIS/include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 365:./CMSIS/include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 366:./CMSIS/include/core_cm3.h **** 
 367:./CMSIS/include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 368:./CMSIS/include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 369:./CMSIS/include/core_cm3.h **** 
 370:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 371:./CMSIS/include/core_cm3.h **** 
 372:./CMSIS/include/core_cm3.h **** 
 373:./CMSIS/include/core_cm3.h **** /**
 374:./CMSIS/include/core_cm3.h ****   \ingroup    CMSIS_core_register
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 8


 375:./CMSIS/include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 376:./CMSIS/include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 377:./CMSIS/include/core_cm3.h ****   @{
 378:./CMSIS/include/core_cm3.h ****  */
 379:./CMSIS/include/core_cm3.h **** 
 380:./CMSIS/include/core_cm3.h **** /**
 381:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 382:./CMSIS/include/core_cm3.h ****  */
 383:./CMSIS/include/core_cm3.h **** typedef struct
 384:./CMSIS/include/core_cm3.h **** {
 385:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 386:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED0[24U];
 387:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 388:./CMSIS/include/core_cm3.h ****         uint32_t RSERVED1[24U];
 389:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 390:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED2[24U];
 391:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 392:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED3[24U];
 393:./CMSIS/include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 394:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED4[56U];
 395:./CMSIS/include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 396:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED5[644U];
 397:./CMSIS/include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 398:./CMSIS/include/core_cm3.h **** }  NVIC_Type;
 399:./CMSIS/include/core_cm3.h **** 
 400:./CMSIS/include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 401:./CMSIS/include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 402:./CMSIS/include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 403:./CMSIS/include/core_cm3.h **** 
 404:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 405:./CMSIS/include/core_cm3.h **** 
 406:./CMSIS/include/core_cm3.h **** 
 407:./CMSIS/include/core_cm3.h **** /**
 408:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
 409:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 410:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 411:./CMSIS/include/core_cm3.h ****   @{
 412:./CMSIS/include/core_cm3.h ****  */
 413:./CMSIS/include/core_cm3.h **** 
 414:./CMSIS/include/core_cm3.h **** /**
 415:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 416:./CMSIS/include/core_cm3.h ****  */
 417:./CMSIS/include/core_cm3.h **** typedef struct
 418:./CMSIS/include/core_cm3.h **** {
 419:./CMSIS/include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 420:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 421:./CMSIS/include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 422:./CMSIS/include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 423:./CMSIS/include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 424:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 425:./CMSIS/include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 426:./CMSIS/include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 427:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 428:./CMSIS/include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 429:./CMSIS/include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 430:./CMSIS/include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 431:./CMSIS/include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 9


 432:./CMSIS/include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 433:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 434:./CMSIS/include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 435:./CMSIS/include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 436:./CMSIS/include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 437:./CMSIS/include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 438:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED0[5U];
 439:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 440:./CMSIS/include/core_cm3.h **** } SCB_Type;
 441:./CMSIS/include/core_cm3.h **** 
 442:./CMSIS/include/core_cm3.h **** /* SCB CPUID Register Definitions */
 443:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 444:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 445:./CMSIS/include/core_cm3.h **** 
 446:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 447:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 448:./CMSIS/include/core_cm3.h **** 
 449:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 450:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 451:./CMSIS/include/core_cm3.h **** 
 452:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 453:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 454:./CMSIS/include/core_cm3.h **** 
 455:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 456:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 457:./CMSIS/include/core_cm3.h **** 
 458:./CMSIS/include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 459:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 460:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 461:./CMSIS/include/core_cm3.h **** 
 462:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 463:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 464:./CMSIS/include/core_cm3.h **** 
 465:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 466:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 467:./CMSIS/include/core_cm3.h **** 
 468:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 469:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 470:./CMSIS/include/core_cm3.h **** 
 471:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 472:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 473:./CMSIS/include/core_cm3.h **** 
 474:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 475:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 476:./CMSIS/include/core_cm3.h **** 
 477:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 478:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 479:./CMSIS/include/core_cm3.h **** 
 480:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 481:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 482:./CMSIS/include/core_cm3.h **** 
 483:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 484:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 485:./CMSIS/include/core_cm3.h **** 
 486:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 487:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 488:./CMSIS/include/core_cm3.h **** 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 10


 489:./CMSIS/include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 490:./CMSIS/include/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 491:./CMSIS/include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 492:./CMSIS/include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 493:./CMSIS/include/core_cm3.h **** 
 494:./CMSIS/include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 495:./CMSIS/include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 496:./CMSIS/include/core_cm3.h **** #else
 497:./CMSIS/include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 498:./CMSIS/include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 499:./CMSIS/include/core_cm3.h **** #endif
 500:./CMSIS/include/core_cm3.h **** 
 501:./CMSIS/include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 502:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 503:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 504:./CMSIS/include/core_cm3.h **** 
 505:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 506:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 507:./CMSIS/include/core_cm3.h **** 
 508:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 509:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 510:./CMSIS/include/core_cm3.h **** 
 511:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 512:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 513:./CMSIS/include/core_cm3.h **** 
 514:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 515:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 516:./CMSIS/include/core_cm3.h **** 
 517:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 518:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 519:./CMSIS/include/core_cm3.h **** 
 520:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 521:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 522:./CMSIS/include/core_cm3.h **** 
 523:./CMSIS/include/core_cm3.h **** /* SCB System Control Register Definitions */
 524:./CMSIS/include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 525:./CMSIS/include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 526:./CMSIS/include/core_cm3.h **** 
 527:./CMSIS/include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 528:./CMSIS/include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 529:./CMSIS/include/core_cm3.h **** 
 530:./CMSIS/include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 531:./CMSIS/include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 532:./CMSIS/include/core_cm3.h **** 
 533:./CMSIS/include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 534:./CMSIS/include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 535:./CMSIS/include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 536:./CMSIS/include/core_cm3.h **** 
 537:./CMSIS/include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 538:./CMSIS/include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 539:./CMSIS/include/core_cm3.h **** 
 540:./CMSIS/include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 541:./CMSIS/include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 542:./CMSIS/include/core_cm3.h **** 
 543:./CMSIS/include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 544:./CMSIS/include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 545:./CMSIS/include/core_cm3.h **** 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 11


 546:./CMSIS/include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 547:./CMSIS/include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 548:./CMSIS/include/core_cm3.h **** 
 549:./CMSIS/include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 550:./CMSIS/include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 551:./CMSIS/include/core_cm3.h **** 
 552:./CMSIS/include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 553:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 554:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 555:./CMSIS/include/core_cm3.h **** 
 556:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 557:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 558:./CMSIS/include/core_cm3.h **** 
 559:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 560:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 561:./CMSIS/include/core_cm3.h **** 
 562:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 563:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 564:./CMSIS/include/core_cm3.h **** 
 565:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 566:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 567:./CMSIS/include/core_cm3.h **** 
 568:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 569:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 570:./CMSIS/include/core_cm3.h **** 
 571:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 572:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 573:./CMSIS/include/core_cm3.h **** 
 574:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 575:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 576:./CMSIS/include/core_cm3.h **** 
 577:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 578:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 579:./CMSIS/include/core_cm3.h **** 
 580:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 581:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 582:./CMSIS/include/core_cm3.h **** 
 583:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 584:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 585:./CMSIS/include/core_cm3.h **** 
 586:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 587:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 588:./CMSIS/include/core_cm3.h **** 
 589:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 590:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 591:./CMSIS/include/core_cm3.h **** 
 592:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 593:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 594:./CMSIS/include/core_cm3.h **** 
 595:./CMSIS/include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 596:./CMSIS/include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 597:./CMSIS/include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 598:./CMSIS/include/core_cm3.h **** 
 599:./CMSIS/include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 600:./CMSIS/include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 601:./CMSIS/include/core_cm3.h **** 
 602:./CMSIS/include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 12


 603:./CMSIS/include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 604:./CMSIS/include/core_cm3.h **** 
 605:./CMSIS/include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 606:./CMSIS/include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 607:./CMSIS/include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 608:./CMSIS/include/core_cm3.h **** 
 609:./CMSIS/include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 610:./CMSIS/include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 611:./CMSIS/include/core_cm3.h **** 
 612:./CMSIS/include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 613:./CMSIS/include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 614:./CMSIS/include/core_cm3.h **** 
 615:./CMSIS/include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 616:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 617:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 618:./CMSIS/include/core_cm3.h **** 
 619:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 620:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 621:./CMSIS/include/core_cm3.h **** 
 622:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 623:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 624:./CMSIS/include/core_cm3.h **** 
 625:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 626:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 627:./CMSIS/include/core_cm3.h **** 
 628:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 629:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 630:./CMSIS/include/core_cm3.h **** 
 631:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 632:./CMSIS/include/core_cm3.h **** 
 633:./CMSIS/include/core_cm3.h **** 
 634:./CMSIS/include/core_cm3.h **** /**
 635:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
 636:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 637:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 638:./CMSIS/include/core_cm3.h ****   @{
 639:./CMSIS/include/core_cm3.h ****  */
 640:./CMSIS/include/core_cm3.h **** 
 641:./CMSIS/include/core_cm3.h **** /**
 642:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 643:./CMSIS/include/core_cm3.h ****  */
 644:./CMSIS/include/core_cm3.h **** typedef struct
 645:./CMSIS/include/core_cm3.h **** {
 646:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED0[1U];
 647:./CMSIS/include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 648:./CMSIS/include/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 649:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 650:./CMSIS/include/core_cm3.h **** #else
 651:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED1[1U];
 652:./CMSIS/include/core_cm3.h **** #endif
 653:./CMSIS/include/core_cm3.h **** } SCnSCB_Type;
 654:./CMSIS/include/core_cm3.h **** 
 655:./CMSIS/include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 656:./CMSIS/include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 657:./CMSIS/include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 658:./CMSIS/include/core_cm3.h **** 
 659:./CMSIS/include/core_cm3.h **** /* Auxiliary Control Register Definitions */
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 13


 660:./CMSIS/include/core_cm3.h **** 
 661:./CMSIS/include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 662:./CMSIS/include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 663:./CMSIS/include/core_cm3.h **** 
 664:./CMSIS/include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 665:./CMSIS/include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 666:./CMSIS/include/core_cm3.h **** 
 667:./CMSIS/include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 668:./CMSIS/include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 669:./CMSIS/include/core_cm3.h **** 
 670:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 671:./CMSIS/include/core_cm3.h **** 
 672:./CMSIS/include/core_cm3.h **** 
 673:./CMSIS/include/core_cm3.h **** /**
 674:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
 675:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 676:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 677:./CMSIS/include/core_cm3.h ****   @{
 678:./CMSIS/include/core_cm3.h ****  */
 679:./CMSIS/include/core_cm3.h **** 
 680:./CMSIS/include/core_cm3.h **** /**
 681:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 682:./CMSIS/include/core_cm3.h ****  */
 683:./CMSIS/include/core_cm3.h **** typedef struct
 684:./CMSIS/include/core_cm3.h **** {
 685:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 686:./CMSIS/include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 687:./CMSIS/include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 688:./CMSIS/include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 689:./CMSIS/include/core_cm3.h **** } SysTick_Type;
 690:./CMSIS/include/core_cm3.h **** 
 691:./CMSIS/include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 692:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 693:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 694:./CMSIS/include/core_cm3.h **** 
 695:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 696:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 697:./CMSIS/include/core_cm3.h **** 
 698:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 699:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 700:./CMSIS/include/core_cm3.h **** 
 701:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 702:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 703:./CMSIS/include/core_cm3.h **** 
 704:./CMSIS/include/core_cm3.h **** /* SysTick Reload Register Definitions */
 705:./CMSIS/include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 706:./CMSIS/include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 707:./CMSIS/include/core_cm3.h **** 
 708:./CMSIS/include/core_cm3.h **** /* SysTick Current Register Definitions */
 709:./CMSIS/include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 710:./CMSIS/include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 711:./CMSIS/include/core_cm3.h **** 
 712:./CMSIS/include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 713:./CMSIS/include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 714:./CMSIS/include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 715:./CMSIS/include/core_cm3.h **** 
 716:./CMSIS/include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 14


 717:./CMSIS/include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 718:./CMSIS/include/core_cm3.h **** 
 719:./CMSIS/include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 720:./CMSIS/include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 721:./CMSIS/include/core_cm3.h **** 
 722:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 723:./CMSIS/include/core_cm3.h **** 
 724:./CMSIS/include/core_cm3.h **** 
 725:./CMSIS/include/core_cm3.h **** /**
 726:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
 727:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 728:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 729:./CMSIS/include/core_cm3.h ****   @{
 730:./CMSIS/include/core_cm3.h ****  */
 731:./CMSIS/include/core_cm3.h **** 
 732:./CMSIS/include/core_cm3.h **** /**
 733:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 734:./CMSIS/include/core_cm3.h ****  */
 735:./CMSIS/include/core_cm3.h **** typedef struct
 736:./CMSIS/include/core_cm3.h **** {
 737:./CMSIS/include/core_cm3.h ****   __OM  union
 738:./CMSIS/include/core_cm3.h ****   {
 739:./CMSIS/include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 740:./CMSIS/include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 741:./CMSIS/include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 742:./CMSIS/include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 743:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED0[864U];
 744:./CMSIS/include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 745:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED1[15U];
 746:./CMSIS/include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 747:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED2[15U];
 748:./CMSIS/include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 749:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED3[29U];
 750:./CMSIS/include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 751:./CMSIS/include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 752:./CMSIS/include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 753:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED4[43U];
 754:./CMSIS/include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 755:./CMSIS/include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 756:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED5[6U];
 757:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 758:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 759:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 760:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 761:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 762:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 763:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 764:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 765:./CMSIS/include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 766:./CMSIS/include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 767:./CMSIS/include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 768:./CMSIS/include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 769:./CMSIS/include/core_cm3.h **** } ITM_Type;
 770:./CMSIS/include/core_cm3.h **** 
 771:./CMSIS/include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 772:./CMSIS/include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 773:./CMSIS/include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 15


 774:./CMSIS/include/core_cm3.h **** 
 775:./CMSIS/include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 776:./CMSIS/include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 777:./CMSIS/include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 778:./CMSIS/include/core_cm3.h **** 
 779:./CMSIS/include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 780:./CMSIS/include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 781:./CMSIS/include/core_cm3.h **** 
 782:./CMSIS/include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 783:./CMSIS/include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 784:./CMSIS/include/core_cm3.h **** 
 785:./CMSIS/include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 786:./CMSIS/include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 787:./CMSIS/include/core_cm3.h **** 
 788:./CMSIS/include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 789:./CMSIS/include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 790:./CMSIS/include/core_cm3.h **** 
 791:./CMSIS/include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 792:./CMSIS/include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 793:./CMSIS/include/core_cm3.h **** 
 794:./CMSIS/include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 795:./CMSIS/include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 796:./CMSIS/include/core_cm3.h **** 
 797:./CMSIS/include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 798:./CMSIS/include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 799:./CMSIS/include/core_cm3.h **** 
 800:./CMSIS/include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 801:./CMSIS/include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 802:./CMSIS/include/core_cm3.h **** 
 803:./CMSIS/include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 804:./CMSIS/include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 805:./CMSIS/include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 806:./CMSIS/include/core_cm3.h **** 
 807:./CMSIS/include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 808:./CMSIS/include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 809:./CMSIS/include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 810:./CMSIS/include/core_cm3.h **** 
 811:./CMSIS/include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 812:./CMSIS/include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 813:./CMSIS/include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 814:./CMSIS/include/core_cm3.h **** 
 815:./CMSIS/include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 816:./CMSIS/include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 817:./CMSIS/include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 818:./CMSIS/include/core_cm3.h **** 
 819:./CMSIS/include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 820:./CMSIS/include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 821:./CMSIS/include/core_cm3.h **** 
 822:./CMSIS/include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 823:./CMSIS/include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 824:./CMSIS/include/core_cm3.h **** 
 825:./CMSIS/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 826:./CMSIS/include/core_cm3.h **** 
 827:./CMSIS/include/core_cm3.h **** 
 828:./CMSIS/include/core_cm3.h **** /**
 829:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
 830:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 16


 831:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 832:./CMSIS/include/core_cm3.h ****   @{
 833:./CMSIS/include/core_cm3.h ****  */
 834:./CMSIS/include/core_cm3.h **** 
 835:./CMSIS/include/core_cm3.h **** /**
 836:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 837:./CMSIS/include/core_cm3.h ****  */
 838:./CMSIS/include/core_cm3.h **** typedef struct
 839:./CMSIS/include/core_cm3.h **** {
 840:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 841:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 842:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 843:./CMSIS/include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 844:./CMSIS/include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 845:./CMSIS/include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 846:./CMSIS/include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 847:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 848:./CMSIS/include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 849:./CMSIS/include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 850:./CMSIS/include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 851:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED0[1U];
 852:./CMSIS/include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 853:./CMSIS/include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 854:./CMSIS/include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 855:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED1[1U];
 856:./CMSIS/include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 857:./CMSIS/include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 858:./CMSIS/include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 859:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED2[1U];
 860:./CMSIS/include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 861:./CMSIS/include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 862:./CMSIS/include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 863:./CMSIS/include/core_cm3.h **** } DWT_Type;
 864:./CMSIS/include/core_cm3.h **** 
 865:./CMSIS/include/core_cm3.h **** /* DWT Control Register Definitions */
 866:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 867:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 868:./CMSIS/include/core_cm3.h **** 
 869:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 870:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 871:./CMSIS/include/core_cm3.h **** 
 872:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 873:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 874:./CMSIS/include/core_cm3.h **** 
 875:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 876:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 877:./CMSIS/include/core_cm3.h **** 
 878:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 879:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 880:./CMSIS/include/core_cm3.h **** 
 881:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 882:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 883:./CMSIS/include/core_cm3.h **** 
 884:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 885:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 886:./CMSIS/include/core_cm3.h **** 
 887:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 17


 888:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 889:./CMSIS/include/core_cm3.h **** 
 890:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 891:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 892:./CMSIS/include/core_cm3.h **** 
 893:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 894:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 895:./CMSIS/include/core_cm3.h **** 
 896:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 897:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 898:./CMSIS/include/core_cm3.h **** 
 899:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 900:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 901:./CMSIS/include/core_cm3.h **** 
 902:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 903:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 904:./CMSIS/include/core_cm3.h **** 
 905:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 906:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 907:./CMSIS/include/core_cm3.h **** 
 908:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 909:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 910:./CMSIS/include/core_cm3.h **** 
 911:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 912:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 913:./CMSIS/include/core_cm3.h **** 
 914:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 915:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 916:./CMSIS/include/core_cm3.h **** 
 917:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 918:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 919:./CMSIS/include/core_cm3.h **** 
 920:./CMSIS/include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 921:./CMSIS/include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 922:./CMSIS/include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 923:./CMSIS/include/core_cm3.h **** 
 924:./CMSIS/include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 925:./CMSIS/include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 926:./CMSIS/include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 927:./CMSIS/include/core_cm3.h **** 
 928:./CMSIS/include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 929:./CMSIS/include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 930:./CMSIS/include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 931:./CMSIS/include/core_cm3.h **** 
 932:./CMSIS/include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 933:./CMSIS/include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 934:./CMSIS/include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 935:./CMSIS/include/core_cm3.h **** 
 936:./CMSIS/include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 937:./CMSIS/include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 938:./CMSIS/include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 939:./CMSIS/include/core_cm3.h **** 
 940:./CMSIS/include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 941:./CMSIS/include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 942:./CMSIS/include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 943:./CMSIS/include/core_cm3.h **** 
 944:./CMSIS/include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 18


 945:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 946:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 947:./CMSIS/include/core_cm3.h **** 
 948:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 949:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 950:./CMSIS/include/core_cm3.h **** 
 951:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 952:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 953:./CMSIS/include/core_cm3.h **** 
 954:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 955:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 956:./CMSIS/include/core_cm3.h **** 
 957:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 958:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 959:./CMSIS/include/core_cm3.h **** 
 960:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 961:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 962:./CMSIS/include/core_cm3.h **** 
 963:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 964:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 965:./CMSIS/include/core_cm3.h **** 
 966:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 967:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 968:./CMSIS/include/core_cm3.h **** 
 969:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 970:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 971:./CMSIS/include/core_cm3.h **** 
 972:./CMSIS/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 973:./CMSIS/include/core_cm3.h **** 
 974:./CMSIS/include/core_cm3.h **** 
 975:./CMSIS/include/core_cm3.h **** /**
 976:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
 977:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 978:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 979:./CMSIS/include/core_cm3.h ****   @{
 980:./CMSIS/include/core_cm3.h ****  */
 981:./CMSIS/include/core_cm3.h **** 
 982:./CMSIS/include/core_cm3.h **** /**
 983:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 984:./CMSIS/include/core_cm3.h ****  */
 985:./CMSIS/include/core_cm3.h **** typedef struct
 986:./CMSIS/include/core_cm3.h **** {
 987:./CMSIS/include/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 988:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 989:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED0[2U];
 990:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 991:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED1[55U];
 992:./CMSIS/include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 993:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED2[131U];
 994:./CMSIS/include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 995:./CMSIS/include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 996:./CMSIS/include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 997:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED3[759U];
 998:./CMSIS/include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 999:./CMSIS/include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1000:./CMSIS/include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1001:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED4[1U];
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 19


1002:./CMSIS/include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1003:./CMSIS/include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1004:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1005:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED5[39U];
1006:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1007:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1008:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED7[8U];
1009:./CMSIS/include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1010:./CMSIS/include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1011:./CMSIS/include/core_cm3.h **** } TPI_Type;
1012:./CMSIS/include/core_cm3.h **** 
1013:./CMSIS/include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1014:./CMSIS/include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1015:./CMSIS/include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1016:./CMSIS/include/core_cm3.h **** 
1017:./CMSIS/include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1018:./CMSIS/include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1019:./CMSIS/include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1020:./CMSIS/include/core_cm3.h **** 
1021:./CMSIS/include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1022:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1023:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1024:./CMSIS/include/core_cm3.h **** 
1025:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1026:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1027:./CMSIS/include/core_cm3.h **** 
1028:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1029:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1030:./CMSIS/include/core_cm3.h **** 
1031:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1032:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1033:./CMSIS/include/core_cm3.h **** 
1034:./CMSIS/include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1035:./CMSIS/include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1036:./CMSIS/include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1037:./CMSIS/include/core_cm3.h **** 
1038:./CMSIS/include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1039:./CMSIS/include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1040:./CMSIS/include/core_cm3.h **** 
1041:./CMSIS/include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1042:./CMSIS/include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1043:./CMSIS/include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1044:./CMSIS/include/core_cm3.h **** 
1045:./CMSIS/include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1046:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1047:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1048:./CMSIS/include/core_cm3.h **** 
1049:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1050:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1051:./CMSIS/include/core_cm3.h **** 
1052:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1053:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1054:./CMSIS/include/core_cm3.h **** 
1055:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1056:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1057:./CMSIS/include/core_cm3.h **** 
1058:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 20


1059:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1060:./CMSIS/include/core_cm3.h **** 
1061:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1062:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1063:./CMSIS/include/core_cm3.h **** 
1064:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1065:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1066:./CMSIS/include/core_cm3.h **** 
1067:./CMSIS/include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1068:./CMSIS/include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1069:./CMSIS/include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1070:./CMSIS/include/core_cm3.h **** 
1071:./CMSIS/include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1072:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1073:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1074:./CMSIS/include/core_cm3.h **** 
1075:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1076:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1077:./CMSIS/include/core_cm3.h **** 
1078:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1079:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1080:./CMSIS/include/core_cm3.h **** 
1081:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1082:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1083:./CMSIS/include/core_cm3.h **** 
1084:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1085:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1086:./CMSIS/include/core_cm3.h **** 
1087:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1088:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1089:./CMSIS/include/core_cm3.h **** 
1090:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1091:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1092:./CMSIS/include/core_cm3.h **** 
1093:./CMSIS/include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1094:./CMSIS/include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1095:./CMSIS/include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1096:./CMSIS/include/core_cm3.h **** 
1097:./CMSIS/include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1098:./CMSIS/include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1099:./CMSIS/include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1100:./CMSIS/include/core_cm3.h **** 
1101:./CMSIS/include/core_cm3.h **** /* TPI DEVID Register Definitions */
1102:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1103:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1104:./CMSIS/include/core_cm3.h **** 
1105:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1106:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1107:./CMSIS/include/core_cm3.h **** 
1108:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1109:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1110:./CMSIS/include/core_cm3.h **** 
1111:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1112:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1113:./CMSIS/include/core_cm3.h **** 
1114:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1115:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 21


1116:./CMSIS/include/core_cm3.h **** 
1117:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1118:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1119:./CMSIS/include/core_cm3.h **** 
1120:./CMSIS/include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1121:./CMSIS/include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1122:./CMSIS/include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1123:./CMSIS/include/core_cm3.h **** 
1124:./CMSIS/include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1125:./CMSIS/include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1126:./CMSIS/include/core_cm3.h **** 
1127:./CMSIS/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1128:./CMSIS/include/core_cm3.h **** 
1129:./CMSIS/include/core_cm3.h **** 
1130:./CMSIS/include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1131:./CMSIS/include/core_cm3.h **** /**
1132:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
1133:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1134:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1135:./CMSIS/include/core_cm3.h ****   @{
1136:./CMSIS/include/core_cm3.h ****  */
1137:./CMSIS/include/core_cm3.h **** 
1138:./CMSIS/include/core_cm3.h **** /**
1139:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1140:./CMSIS/include/core_cm3.h ****  */
1141:./CMSIS/include/core_cm3.h **** typedef struct
1142:./CMSIS/include/core_cm3.h **** {
1143:./CMSIS/include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1144:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1145:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1146:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1147:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1148:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1149:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1150:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1151:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1152:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1153:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1154:./CMSIS/include/core_cm3.h **** } MPU_Type;
1155:./CMSIS/include/core_cm3.h **** 
1156:./CMSIS/include/core_cm3.h **** /* MPU Type Register Definitions */
1157:./CMSIS/include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1158:./CMSIS/include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1159:./CMSIS/include/core_cm3.h **** 
1160:./CMSIS/include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1161:./CMSIS/include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1162:./CMSIS/include/core_cm3.h **** 
1163:./CMSIS/include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1164:./CMSIS/include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1165:./CMSIS/include/core_cm3.h **** 
1166:./CMSIS/include/core_cm3.h **** /* MPU Control Register Definitions */
1167:./CMSIS/include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1168:./CMSIS/include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1169:./CMSIS/include/core_cm3.h **** 
1170:./CMSIS/include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1171:./CMSIS/include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1172:./CMSIS/include/core_cm3.h **** 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 22


1173:./CMSIS/include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1174:./CMSIS/include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1175:./CMSIS/include/core_cm3.h **** 
1176:./CMSIS/include/core_cm3.h **** /* MPU Region Number Register Definitions */
1177:./CMSIS/include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1178:./CMSIS/include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1179:./CMSIS/include/core_cm3.h **** 
1180:./CMSIS/include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1181:./CMSIS/include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1182:./CMSIS/include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1183:./CMSIS/include/core_cm3.h **** 
1184:./CMSIS/include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1185:./CMSIS/include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1186:./CMSIS/include/core_cm3.h **** 
1187:./CMSIS/include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1188:./CMSIS/include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1189:./CMSIS/include/core_cm3.h **** 
1190:./CMSIS/include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1191:./CMSIS/include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1192:./CMSIS/include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1193:./CMSIS/include/core_cm3.h **** 
1194:./CMSIS/include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1195:./CMSIS/include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1196:./CMSIS/include/core_cm3.h **** 
1197:./CMSIS/include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1198:./CMSIS/include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1199:./CMSIS/include/core_cm3.h **** 
1200:./CMSIS/include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1201:./CMSIS/include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1202:./CMSIS/include/core_cm3.h **** 
1203:./CMSIS/include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1204:./CMSIS/include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1205:./CMSIS/include/core_cm3.h **** 
1206:./CMSIS/include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1207:./CMSIS/include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1208:./CMSIS/include/core_cm3.h **** 
1209:./CMSIS/include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1210:./CMSIS/include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1211:./CMSIS/include/core_cm3.h **** 
1212:./CMSIS/include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1213:./CMSIS/include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1214:./CMSIS/include/core_cm3.h **** 
1215:./CMSIS/include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1216:./CMSIS/include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1217:./CMSIS/include/core_cm3.h **** 
1218:./CMSIS/include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1219:./CMSIS/include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1220:./CMSIS/include/core_cm3.h **** 
1221:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1222:./CMSIS/include/core_cm3.h **** #endif
1223:./CMSIS/include/core_cm3.h **** 
1224:./CMSIS/include/core_cm3.h **** 
1225:./CMSIS/include/core_cm3.h **** /**
1226:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
1227:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1228:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1229:./CMSIS/include/core_cm3.h ****   @{
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 23


1230:./CMSIS/include/core_cm3.h ****  */
1231:./CMSIS/include/core_cm3.h **** 
1232:./CMSIS/include/core_cm3.h **** /**
1233:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1234:./CMSIS/include/core_cm3.h ****  */
1235:./CMSIS/include/core_cm3.h **** typedef struct
1236:./CMSIS/include/core_cm3.h **** {
1237:./CMSIS/include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1238:./CMSIS/include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1239:./CMSIS/include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1240:./CMSIS/include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1241:./CMSIS/include/core_cm3.h **** } CoreDebug_Type;
1242:./CMSIS/include/core_cm3.h **** 
1243:./CMSIS/include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1244:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1245:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1246:./CMSIS/include/core_cm3.h **** 
1247:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1248:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1249:./CMSIS/include/core_cm3.h **** 
1250:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1251:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1252:./CMSIS/include/core_cm3.h **** 
1253:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1254:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1255:./CMSIS/include/core_cm3.h **** 
1256:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1257:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1258:./CMSIS/include/core_cm3.h **** 
1259:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1260:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1261:./CMSIS/include/core_cm3.h **** 
1262:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1263:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1264:./CMSIS/include/core_cm3.h **** 
1265:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1266:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1267:./CMSIS/include/core_cm3.h **** 
1268:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1269:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1270:./CMSIS/include/core_cm3.h **** 
1271:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1272:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1273:./CMSIS/include/core_cm3.h **** 
1274:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1275:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1276:./CMSIS/include/core_cm3.h **** 
1277:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1278:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1279:./CMSIS/include/core_cm3.h **** 
1280:./CMSIS/include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1281:./CMSIS/include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1282:./CMSIS/include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1283:./CMSIS/include/core_cm3.h **** 
1284:./CMSIS/include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1285:./CMSIS/include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1286:./CMSIS/include/core_cm3.h **** 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 24


1287:./CMSIS/include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1288:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1289:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1290:./CMSIS/include/core_cm3.h **** 
1291:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1292:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1293:./CMSIS/include/core_cm3.h **** 
1294:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1295:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1296:./CMSIS/include/core_cm3.h **** 
1297:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1298:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1299:./CMSIS/include/core_cm3.h **** 
1300:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1301:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1302:./CMSIS/include/core_cm3.h **** 
1303:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1304:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1305:./CMSIS/include/core_cm3.h **** 
1306:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1307:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1308:./CMSIS/include/core_cm3.h **** 
1309:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1310:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1311:./CMSIS/include/core_cm3.h **** 
1312:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1313:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1314:./CMSIS/include/core_cm3.h **** 
1315:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1316:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1317:./CMSIS/include/core_cm3.h **** 
1318:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1319:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1320:./CMSIS/include/core_cm3.h **** 
1321:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1322:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1323:./CMSIS/include/core_cm3.h **** 
1324:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1325:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1326:./CMSIS/include/core_cm3.h **** 
1327:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1328:./CMSIS/include/core_cm3.h **** 
1329:./CMSIS/include/core_cm3.h **** 
1330:./CMSIS/include/core_cm3.h **** /**
1331:./CMSIS/include/core_cm3.h ****   \ingroup    CMSIS_core_register
1332:./CMSIS/include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1333:./CMSIS/include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1334:./CMSIS/include/core_cm3.h ****   @{
1335:./CMSIS/include/core_cm3.h ****  */
1336:./CMSIS/include/core_cm3.h **** 
1337:./CMSIS/include/core_cm3.h **** /**
1338:./CMSIS/include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1339:./CMSIS/include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1340:./CMSIS/include/core_cm3.h ****   \param[in] value  Value of the bit field.
1341:./CMSIS/include/core_cm3.h ****   \return           Masked and shifted value.
1342:./CMSIS/include/core_cm3.h **** */
1343:./CMSIS/include/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 25


1344:./CMSIS/include/core_cm3.h **** 
1345:./CMSIS/include/core_cm3.h **** /**
1346:./CMSIS/include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1347:./CMSIS/include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:./CMSIS/include/core_cm3.h ****   \param[in] value  Value of register.
1349:./CMSIS/include/core_cm3.h ****   \return           Masked and shifted bit field value.
1350:./CMSIS/include/core_cm3.h **** */
1351:./CMSIS/include/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1352:./CMSIS/include/core_cm3.h **** 
1353:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1354:./CMSIS/include/core_cm3.h **** 
1355:./CMSIS/include/core_cm3.h **** 
1356:./CMSIS/include/core_cm3.h **** /**
1357:./CMSIS/include/core_cm3.h ****   \ingroup    CMSIS_core_register
1358:./CMSIS/include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1359:./CMSIS/include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1360:./CMSIS/include/core_cm3.h ****   @{
1361:./CMSIS/include/core_cm3.h ****  */
1362:./CMSIS/include/core_cm3.h **** 
1363:./CMSIS/include/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1364:./CMSIS/include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1365:./CMSIS/include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1366:./CMSIS/include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1367:./CMSIS/include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1368:./CMSIS/include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1369:./CMSIS/include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1370:./CMSIS/include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1371:./CMSIS/include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1372:./CMSIS/include/core_cm3.h **** 
1373:./CMSIS/include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1374:./CMSIS/include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1375:./CMSIS/include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1376:./CMSIS/include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1377:./CMSIS/include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1378:./CMSIS/include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1379:./CMSIS/include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1380:./CMSIS/include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1381:./CMSIS/include/core_cm3.h **** 
1382:./CMSIS/include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1383:./CMSIS/include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1384:./CMSIS/include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1385:./CMSIS/include/core_cm3.h **** #endif
1386:./CMSIS/include/core_cm3.h **** 
1387:./CMSIS/include/core_cm3.h **** /*@} */
1388:./CMSIS/include/core_cm3.h **** 
1389:./CMSIS/include/core_cm3.h **** 
1390:./CMSIS/include/core_cm3.h **** 
1391:./CMSIS/include/core_cm3.h **** /*******************************************************************************
1392:./CMSIS/include/core_cm3.h ****  *                Hardware Abstraction Layer
1393:./CMSIS/include/core_cm3.h ****   Core Function Interface contains:
1394:./CMSIS/include/core_cm3.h ****   - Core NVIC Functions
1395:./CMSIS/include/core_cm3.h ****   - Core SysTick Functions
1396:./CMSIS/include/core_cm3.h ****   - Core Debug Functions
1397:./CMSIS/include/core_cm3.h ****   - Core Register Access Functions
1398:./CMSIS/include/core_cm3.h ****  ******************************************************************************/
1399:./CMSIS/include/core_cm3.h **** /**
1400:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 26


1401:./CMSIS/include/core_cm3.h **** */
1402:./CMSIS/include/core_cm3.h **** 
1403:./CMSIS/include/core_cm3.h **** 
1404:./CMSIS/include/core_cm3.h **** 
1405:./CMSIS/include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1406:./CMSIS/include/core_cm3.h **** /**
1407:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1408:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1409:./CMSIS/include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1410:./CMSIS/include/core_cm3.h ****   @{
1411:./CMSIS/include/core_cm3.h ****  */
1412:./CMSIS/include/core_cm3.h **** 
1413:./CMSIS/include/core_cm3.h **** /**
1414:./CMSIS/include/core_cm3.h ****   \brief   Set Priority Grouping
1415:./CMSIS/include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1416:./CMSIS/include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1417:./CMSIS/include/core_cm3.h ****            Only values from 0..7 are used.
1418:./CMSIS/include/core_cm3.h ****            In case of a conflict between priority grouping and available
1419:./CMSIS/include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1420:./CMSIS/include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1421:./CMSIS/include/core_cm3.h ****  */
1422:./CMSIS/include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1423:./CMSIS/include/core_cm3.h **** {
1424:./CMSIS/include/core_cm3.h ****   uint32_t reg_value;
1425:./CMSIS/include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1426:./CMSIS/include/core_cm3.h **** 
1427:./CMSIS/include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1428:./CMSIS/include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1429:./CMSIS/include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1430:./CMSIS/include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1431:./CMSIS/include/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1432:./CMSIS/include/core_cm3.h ****   SCB->AIRCR =  reg_value;
1433:./CMSIS/include/core_cm3.h **** }
1434:./CMSIS/include/core_cm3.h **** 
1435:./CMSIS/include/core_cm3.h **** 
1436:./CMSIS/include/core_cm3.h **** /**
1437:./CMSIS/include/core_cm3.h ****   \brief   Get Priority Grouping
1438:./CMSIS/include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1439:./CMSIS/include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1440:./CMSIS/include/core_cm3.h ****  */
1441:./CMSIS/include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1442:./CMSIS/include/core_cm3.h **** {
1443:./CMSIS/include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1444:./CMSIS/include/core_cm3.h **** }
1445:./CMSIS/include/core_cm3.h **** 
1446:./CMSIS/include/core_cm3.h **** 
1447:./CMSIS/include/core_cm3.h **** /**
1448:./CMSIS/include/core_cm3.h ****   \brief   Enable External Interrupt
1449:./CMSIS/include/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1450:./CMSIS/include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1451:./CMSIS/include/core_cm3.h ****  */
1452:./CMSIS/include/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1453:./CMSIS/include/core_cm3.h **** {
1454:./CMSIS/include/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1455:./CMSIS/include/core_cm3.h **** }
1456:./CMSIS/include/core_cm3.h **** 
1457:./CMSIS/include/core_cm3.h **** 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 27


1458:./CMSIS/include/core_cm3.h **** /**
1459:./CMSIS/include/core_cm3.h ****   \brief   Disable External Interrupt
1460:./CMSIS/include/core_cm3.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1461:./CMSIS/include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1462:./CMSIS/include/core_cm3.h ****  */
1463:./CMSIS/include/core_cm3.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1464:./CMSIS/include/core_cm3.h **** {
1465:./CMSIS/include/core_cm3.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1466:./CMSIS/include/core_cm3.h **** }
1467:./CMSIS/include/core_cm3.h **** 
1468:./CMSIS/include/core_cm3.h **** 
1469:./CMSIS/include/core_cm3.h **** /**
1470:./CMSIS/include/core_cm3.h ****   \brief   Get Pending Interrupt
1471:./CMSIS/include/core_cm3.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1472:./CMSIS/include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1473:./CMSIS/include/core_cm3.h ****   \return             0  Interrupt status is not pending.
1474:./CMSIS/include/core_cm3.h ****   \return             1  Interrupt status is pending.
1475:./CMSIS/include/core_cm3.h ****  */
1476:./CMSIS/include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1477:./CMSIS/include/core_cm3.h **** {
1478:./CMSIS/include/core_cm3.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1479:./CMSIS/include/core_cm3.h **** }
1480:./CMSIS/include/core_cm3.h **** 
1481:./CMSIS/include/core_cm3.h **** 
1482:./CMSIS/include/core_cm3.h **** /**
1483:./CMSIS/include/core_cm3.h ****   \brief   Set Pending Interrupt
1484:./CMSIS/include/core_cm3.h ****   \details Sets the pending bit of an external interrupt.
1485:./CMSIS/include/core_cm3.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1486:./CMSIS/include/core_cm3.h ****  */
1487:./CMSIS/include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1488:./CMSIS/include/core_cm3.h **** {
1489:./CMSIS/include/core_cm3.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1490:./CMSIS/include/core_cm3.h **** }
1491:./CMSIS/include/core_cm3.h **** 
1492:./CMSIS/include/core_cm3.h **** 
1493:./CMSIS/include/core_cm3.h **** /**
1494:./CMSIS/include/core_cm3.h ****   \brief   Clear Pending Interrupt
1495:./CMSIS/include/core_cm3.h ****   \details Clears the pending bit of an external interrupt.
1496:./CMSIS/include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1497:./CMSIS/include/core_cm3.h ****  */
1498:./CMSIS/include/core_cm3.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1499:./CMSIS/include/core_cm3.h **** {
1500:./CMSIS/include/core_cm3.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1501:./CMSIS/include/core_cm3.h **** }
1502:./CMSIS/include/core_cm3.h **** 
1503:./CMSIS/include/core_cm3.h **** 
1504:./CMSIS/include/core_cm3.h **** /**
1505:./CMSIS/include/core_cm3.h ****   \brief   Get Active Interrupt
1506:./CMSIS/include/core_cm3.h ****   \details Reads the active register in NVIC and returns the active bit.
1507:./CMSIS/include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1508:./CMSIS/include/core_cm3.h ****   \return             0  Interrupt status is not active.
1509:./CMSIS/include/core_cm3.h ****   \return             1  Interrupt status is active.
1510:./CMSIS/include/core_cm3.h ****  */
1511:./CMSIS/include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1512:./CMSIS/include/core_cm3.h **** {
1513:./CMSIS/include/core_cm3.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1514:./CMSIS/include/core_cm3.h **** }
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 28


1515:./CMSIS/include/core_cm3.h **** 
1516:./CMSIS/include/core_cm3.h **** 
1517:./CMSIS/include/core_cm3.h **** /**
1518:./CMSIS/include/core_cm3.h ****   \brief   Set Interrupt Priority
1519:./CMSIS/include/core_cm3.h ****   \details Sets the priority of an interrupt.
1520:./CMSIS/include/core_cm3.h ****   \note    The priority cannot be set for every core interrupt.
1521:./CMSIS/include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1522:./CMSIS/include/core_cm3.h ****   \param [in]  priority  Priority to set.
1523:./CMSIS/include/core_cm3.h ****  */
1524:./CMSIS/include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1525:./CMSIS/include/core_cm3.h **** {
  26              		.loc 2 1525 1
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 7, -4
  34 0002 83B0     		sub	sp, sp, #12
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 0346     		mov	r3, r0
  39 0008 3960     		str	r1, [r7]
  40 000a FB71     		strb	r3, [r7, #7]
1526:./CMSIS/include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
  41              		.loc 2 1526 6
  42 000c 97F90730 		ldrsb	r3, [r7, #7]
  43 0010 002B     		cmp	r3, #0
  44 0012 0BDA     		bge	.L2
1527:./CMSIS/include/core_cm3.h ****   {
1528:./CMSIS/include/core_cm3.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
  45              		.loc 2 1528 57
  46 0014 3B68     		ldr	r3, [r7]
  47 0016 DAB2     		uxtb	r2, r3
  48              		.loc 2 1528 8
  49 0018 0C49     		ldr	r1, .L5
  50              		.loc 2 1528 41
  51 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  52 001c 03F00F03 		and	r3, r3, #15
  53              		.loc 2 1528 49
  54 0020 043B     		subs	r3, r3, #4
  55              		.loc 2 1528 57
  56 0022 1201     		lsls	r2, r2, #4
  57 0024 D2B2     		uxtb	r2, r2
  58              		.loc 2 1528 55
  59 0026 0B44     		add	r3, r3, r1
  60 0028 1A76     		strb	r2, [r3, #24]
1529:./CMSIS/include/core_cm3.h ****   }
1530:./CMSIS/include/core_cm3.h ****   else
1531:./CMSIS/include/core_cm3.h ****   {
1532:./CMSIS/include/core_cm3.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1533:./CMSIS/include/core_cm3.h ****   }
1534:./CMSIS/include/core_cm3.h **** }
  61              		.loc 2 1534 1
  62 002a 09E0     		b	.L4
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 29


  63              	.L2:
1532:./CMSIS/include/core_cm3.h ****   }
  64              		.loc 2 1532 57
  65 002c 3B68     		ldr	r3, [r7]
  66 002e DAB2     		uxtb	r2, r3
1532:./CMSIS/include/core_cm3.h ****   }
  67              		.loc 2 1532 9
  68 0030 0749     		ldr	r1, .L5+4
1532:./CMSIS/include/core_cm3.h ****   }
  69              		.loc 2 1532 15
  70 0032 97F90730 		ldrsb	r3, [r7, #7]
1532:./CMSIS/include/core_cm3.h ****   }
  71              		.loc 2 1532 57
  72 0036 1201     		lsls	r2, r2, #4
  73 0038 D2B2     		uxtb	r2, r2
1532:./CMSIS/include/core_cm3.h ****   }
  74              		.loc 2 1532 55
  75 003a 0B44     		add	r3, r3, r1
  76 003c 83F80023 		strb	r2, [r3, #768]
  77              	.L4:
  78              		.loc 2 1534 1
  79 0040 00BF     		nop
  80 0042 0C37     		adds	r7, r7, #12
  81              		.cfi_def_cfa_offset 4
  82 0044 BD46     		mov	sp, r7
  83              		.cfi_def_cfa_register 13
  84              		@ sp needed
  85 0046 80BC     		pop	{r7}
  86              		.cfi_restore 7
  87              		.cfi_def_cfa_offset 0
  88 0048 7047     		bx	lr
  89              	.L6:
  90 004a 00BF     		.align	2
  91              	.L5:
  92 004c 00ED00E0 		.word	-536810240
  93 0050 00E100E0 		.word	-536813312
  94              		.cfi_endproc
  95              	.LFE54:
  96              		.size	NVIC_SetPriority, .-NVIC_SetPriority
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.type	SysTick_Config, %function
 102              	SysTick_Config:
 103              	.LFB59:
1535:./CMSIS/include/core_cm3.h **** 
1536:./CMSIS/include/core_cm3.h **** 
1537:./CMSIS/include/core_cm3.h **** /**
1538:./CMSIS/include/core_cm3.h ****   \brief   Get Interrupt Priority
1539:./CMSIS/include/core_cm3.h ****   \details Reads the priority of an interrupt.
1540:./CMSIS/include/core_cm3.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1541:./CMSIS/include/core_cm3.h ****            or negative to specify an internal (core) interrupt.
1542:./CMSIS/include/core_cm3.h ****   \param [in]   IRQn  Interrupt number.
1543:./CMSIS/include/core_cm3.h ****   \return             Interrupt Priority.
1544:./CMSIS/include/core_cm3.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1545:./CMSIS/include/core_cm3.h ****  */
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 30


1546:./CMSIS/include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1547:./CMSIS/include/core_cm3.h **** {
1548:./CMSIS/include/core_cm3.h **** 
1549:./CMSIS/include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1550:./CMSIS/include/core_cm3.h ****   {
1551:./CMSIS/include/core_cm3.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1552:./CMSIS/include/core_cm3.h ****   }
1553:./CMSIS/include/core_cm3.h ****   else
1554:./CMSIS/include/core_cm3.h ****   {
1555:./CMSIS/include/core_cm3.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1556:./CMSIS/include/core_cm3.h ****   }
1557:./CMSIS/include/core_cm3.h **** }
1558:./CMSIS/include/core_cm3.h **** 
1559:./CMSIS/include/core_cm3.h **** 
1560:./CMSIS/include/core_cm3.h **** /**
1561:./CMSIS/include/core_cm3.h ****   \brief   Encode Priority
1562:./CMSIS/include/core_cm3.h ****   \details Encodes the priority for an interrupt with the given priority group,
1563:./CMSIS/include/core_cm3.h ****            preemptive priority value, and subpriority value.
1564:./CMSIS/include/core_cm3.h ****            In case of a conflict between priority grouping and available
1565:./CMSIS/include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1566:./CMSIS/include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1567:./CMSIS/include/core_cm3.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1568:./CMSIS/include/core_cm3.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1569:./CMSIS/include/core_cm3.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1570:./CMSIS/include/core_cm3.h ****  */
1571:./CMSIS/include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1572:./CMSIS/include/core_cm3.h **** {
1573:./CMSIS/include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1574:./CMSIS/include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1575:./CMSIS/include/core_cm3.h ****   uint32_t SubPriorityBits;
1576:./CMSIS/include/core_cm3.h **** 
1577:./CMSIS/include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1578:./CMSIS/include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1579:./CMSIS/include/core_cm3.h **** 
1580:./CMSIS/include/core_cm3.h ****   return (
1581:./CMSIS/include/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1582:./CMSIS/include/core_cm3.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1583:./CMSIS/include/core_cm3.h ****          );
1584:./CMSIS/include/core_cm3.h **** }
1585:./CMSIS/include/core_cm3.h **** 
1586:./CMSIS/include/core_cm3.h **** 
1587:./CMSIS/include/core_cm3.h **** /**
1588:./CMSIS/include/core_cm3.h ****   \brief   Decode Priority
1589:./CMSIS/include/core_cm3.h ****   \details Decodes an interrupt priority value with a given priority group to
1590:./CMSIS/include/core_cm3.h ****            preemptive priority value and subpriority value.
1591:./CMSIS/include/core_cm3.h ****            In case of a conflict between priority grouping and available
1592:./CMSIS/include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1593:./CMSIS/include/core_cm3.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1594:./CMSIS/include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1595:./CMSIS/include/core_cm3.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1596:./CMSIS/include/core_cm3.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1597:./CMSIS/include/core_cm3.h ****  */
1598:./CMSIS/include/core_cm3.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1599:./CMSIS/include/core_cm3.h **** {
1600:./CMSIS/include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1601:./CMSIS/include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1602:./CMSIS/include/core_cm3.h ****   uint32_t SubPriorityBits;
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 31


1603:./CMSIS/include/core_cm3.h **** 
1604:./CMSIS/include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1605:./CMSIS/include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1606:./CMSIS/include/core_cm3.h **** 
1607:./CMSIS/include/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1608:./CMSIS/include/core_cm3.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1609:./CMSIS/include/core_cm3.h **** }
1610:./CMSIS/include/core_cm3.h **** 
1611:./CMSIS/include/core_cm3.h **** 
1612:./CMSIS/include/core_cm3.h **** /**
1613:./CMSIS/include/core_cm3.h ****   \brief   System Reset
1614:./CMSIS/include/core_cm3.h ****   \details Initiates a system reset request to reset the MCU.
1615:./CMSIS/include/core_cm3.h ****  */
1616:./CMSIS/include/core_cm3.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1617:./CMSIS/include/core_cm3.h **** {
1618:./CMSIS/include/core_cm3.h ****   __DSB();                                                          /* Ensure all outstanding memor
1619:./CMSIS/include/core_cm3.h ****                                                                        buffered write are completed
1620:./CMSIS/include/core_cm3.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1621:./CMSIS/include/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1622:./CMSIS/include/core_cm3.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1623:./CMSIS/include/core_cm3.h ****   __DSB();                                                          /* Ensure completion of memory 
1624:./CMSIS/include/core_cm3.h **** 
1625:./CMSIS/include/core_cm3.h ****   for(;;)                                                           /* wait until reset */
1626:./CMSIS/include/core_cm3.h ****   {
1627:./CMSIS/include/core_cm3.h ****     __NOP();
1628:./CMSIS/include/core_cm3.h ****   }
1629:./CMSIS/include/core_cm3.h **** }
1630:./CMSIS/include/core_cm3.h **** 
1631:./CMSIS/include/core_cm3.h **** /*@} end of CMSIS_Core_NVICFunctions */
1632:./CMSIS/include/core_cm3.h **** 
1633:./CMSIS/include/core_cm3.h **** 
1634:./CMSIS/include/core_cm3.h **** 
1635:./CMSIS/include/core_cm3.h **** /* ##################################    SysTick function  ########################################
1636:./CMSIS/include/core_cm3.h **** /**
1637:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1638:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1639:./CMSIS/include/core_cm3.h ****   \brief    Functions that configure the System.
1640:./CMSIS/include/core_cm3.h ****   @{
1641:./CMSIS/include/core_cm3.h ****  */
1642:./CMSIS/include/core_cm3.h **** 
1643:./CMSIS/include/core_cm3.h **** #if (__Vendor_SysTickConfig == 0U)
1644:./CMSIS/include/core_cm3.h **** 
1645:./CMSIS/include/core_cm3.h **** /**
1646:./CMSIS/include/core_cm3.h ****   \brief   System Tick Configuration
1647:./CMSIS/include/core_cm3.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1648:./CMSIS/include/core_cm3.h ****            Counter is in free running mode to generate periodic interrupts.
1649:./CMSIS/include/core_cm3.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1650:./CMSIS/include/core_cm3.h ****   \return          0  Function succeeded.
1651:./CMSIS/include/core_cm3.h ****   \return          1  Function failed.
1652:./CMSIS/include/core_cm3.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1653:./CMSIS/include/core_cm3.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1654:./CMSIS/include/core_cm3.h ****            must contain a vendor-specific implementation of this function.
1655:./CMSIS/include/core_cm3.h ****  */
1656:./CMSIS/include/core_cm3.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1657:./CMSIS/include/core_cm3.h **** {
 104              		.loc 2 1657 1
 105              		.cfi_startproc
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 32


 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0054 80B5     		push	{r7, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0056 82B0     		sub	sp, sp, #8
 113              		.cfi_def_cfa_offset 16
 114 0058 00AF     		add	r7, sp, #0
 115              		.cfi_def_cfa_register 7
 116 005a 7860     		str	r0, [r7, #4]
1658:./CMSIS/include/core_cm3.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 117              		.loc 2 1658 14
 118 005c 7B68     		ldr	r3, [r7, #4]
 119 005e 013B     		subs	r3, r3, #1
 120              		.loc 2 1658 6
 121 0060 B3F1807F 		cmp	r3, #16777216
 122 0064 01D3     		bcc	.L8
1659:./CMSIS/include/core_cm3.h ****   {
1660:./CMSIS/include/core_cm3.h ****     return (1UL);                                                   /* Reload value impossible */
 123              		.loc 2 1660 12
 124 0066 0123     		movs	r3, #1
 125 0068 0FE0     		b	.L9
 126              	.L8:
1661:./CMSIS/include/core_cm3.h ****   }
1662:./CMSIS/include/core_cm3.h **** 
1663:./CMSIS/include/core_cm3.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 127              		.loc 2 1663 10
 128 006a 0A4A     		ldr	r2, .L10
 129              		.loc 2 1663 20
 130 006c 7B68     		ldr	r3, [r7, #4]
 131 006e 013B     		subs	r3, r3, #1
 132              		.loc 2 1663 18
 133 0070 5360     		str	r3, [r2, #4]
1664:./CMSIS/include/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 134              		.loc 2 1664 3
 135 0072 0F21     		movs	r1, #15
 136 0074 4FF0FF30 		mov	r0, #-1
 137 0078 FFF7C2FF 		bl	NVIC_SetPriority
1665:./CMSIS/include/core_cm3.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 138              		.loc 2 1665 10
 139 007c 054B     		ldr	r3, .L10
 140              		.loc 2 1665 18
 141 007e 0022     		movs	r2, #0
 142 0080 9A60     		str	r2, [r3, #8]
1666:./CMSIS/include/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 143              		.loc 2 1666 10
 144 0082 044B     		ldr	r3, .L10
 145              		.loc 2 1666 18
 146 0084 0722     		movs	r2, #7
 147 0086 1A60     		str	r2, [r3]
1667:./CMSIS/include/core_cm3.h ****                    SysTick_CTRL_TICKINT_Msk   |
1668:./CMSIS/include/core_cm3.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1669:./CMSIS/include/core_cm3.h ****   return (0UL);                                                     /* Function successful */
 148              		.loc 2 1669 10
 149 0088 0023     		movs	r3, #0
 150              	.L9:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 33


1670:./CMSIS/include/core_cm3.h **** }
 151              		.loc 2 1670 1
 152 008a 1846     		mov	r0, r3
 153 008c 0837     		adds	r7, r7, #8
 154              		.cfi_def_cfa_offset 8
 155 008e BD46     		mov	sp, r7
 156              		.cfi_def_cfa_register 13
 157              		@ sp needed
 158 0090 80BD     		pop	{r7, pc}
 159              	.L11:
 160 0092 00BF     		.align	2
 161              	.L10:
 162 0094 10E000E0 		.word	-536813552
 163              		.cfi_endproc
 164              	.LFE59:
 165              		.size	SysTick_Config, .-SysTick_Config
 166              		.global	tick_count
 167              		.bss
 168              		.align	2
 169              		.type	tick_count, %object
 170              		.size	tick_count, 4
 171              	tick_count:
 172 0000 00000000 		.space	4
 173              		.global	cpu_load
 174              		.align	2
 175              		.type	cpu_load, %object
 176              		.size	cpu_load, 4
 177              	cpu_load:
 178 0004 00000000 		.space	4
 179              		.global	max_cpu_load
 180              		.align	2
 181              		.type	max_cpu_load, %object
 182              		.size	max_cpu_load, 4
 183              	max_cpu_load:
 184 0008 00000000 		.space	4
 185              		.text
 186              		.align	1
 187              		.global	SysTick_Handler
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.type	SysTick_Handler, %function
 192              	SysTick_Handler:
 193              	.LFB63:
   1:src/stm32f103_setup.c **** #include "stm32f103_setup.h"
   2:src/stm32f103_setup.c **** #include "stm32f1xx.h" // Include necessary headers for STM32F103
   3:src/stm32f103_setup.c **** 
   4:src/stm32f103_setup.c **** volatile uint32_t tick_count = 0;
   5:src/stm32f103_setup.c **** 
   6:src/stm32f103_setup.c **** volatile uint32_t cpu_load = 0;
   7:src/stm32f103_setup.c **** uint32_t max_cpu_load = 0;
   8:src/stm32f103_setup.c **** 
   9:src/stm32f103_setup.c **** 
  10:src/stm32f103_setup.c **** void SysTick_Handler(void) {
 194              		.loc 1 10 28
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 34


 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199 0098 80B4     		push	{r7}
 200              		.cfi_def_cfa_offset 4
 201              		.cfi_offset 7, -4
 202 009a 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
  11:src/stm32f103_setup.c ****     tick_count++;
 204              		.loc 1 11 15
 205 009c 044B     		ldr	r3, .L13
 206 009e 1B68     		ldr	r3, [r3]
 207 00a0 0133     		adds	r3, r3, #1
 208 00a2 034A     		ldr	r2, .L13
 209 00a4 1360     		str	r3, [r2]
  12:src/stm32f103_setup.c **** }
 210              		.loc 1 12 1
 211 00a6 00BF     		nop
 212 00a8 BD46     		mov	sp, r7
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 00aa 80BC     		pop	{r7}
 216              		.cfi_restore 7
 217              		.cfi_def_cfa_offset 0
 218 00ac 7047     		bx	lr
 219              	.L14:
 220 00ae 00BF     		.align	2
 221              	.L13:
 222 00b0 00000000 		.word	tick_count
 223              		.cfi_endproc
 224              	.LFE63:
 225              		.size	SysTick_Handler, .-SysTick_Handler
 226              		.align	1
 227              		.global	busy_tick
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.type	busy_tick, %function
 232              	busy_tick:
 233              	.LFB64:
  13:src/stm32f103_setup.c **** 
  14:src/stm32f103_setup.c **** void busy_tick() {
 234              		.loc 1 14 18
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 1, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 239 00b4 80B4     		push	{r7}
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 00b6 00AF     		add	r7, sp, #0
 243              		.cfi_def_cfa_register 7
  15:src/stm32f103_setup.c ****     // Perform your application tasks here
  16:src/stm32f103_setup.c **** 
  17:src/stm32f103_setup.c ****         // Sample CPU load every 1000 ms
  18:src/stm32f103_setup.c ****         if (tick_count >= 1000) {
 244              		.loc 1 18 24
 245 00b8 124B     		ldr	r3, .L18
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 35


 246 00ba 1B68     		ldr	r3, [r3]
 247              		.loc 1 18 12
 248 00bc B3F57A7F 		cmp	r3, #1000
 249 00c0 1CD3     		bcc	.L17
  19:src/stm32f103_setup.c ****             cpu_load = 100-((1000 - (tick_count % 1000)) * 100 / 1000); // Calculate CPU load
 250              		.loc 1 19 49
 251 00c2 104B     		ldr	r3, .L18
 252 00c4 1A68     		ldr	r2, [r3]
 253 00c6 104B     		ldr	r3, .L18+4
 254 00c8 A3FB0213 		umull	r1, r3, r3, r2
 255 00cc 9B09     		lsrs	r3, r3, #6
 256 00ce 4FF47A71 		mov	r1, #1000
 257 00d2 01FB03F3 		mul	r3, r1, r3
 258 00d6 D31A     		subs	r3, r2, r3
 259              		.loc 1 19 58
 260 00d8 6FF06302 		mvn	r2, #99
 261 00dc 02FB03F3 		mul	r3, r2, r3
 262 00e0 03F5C333 		add	r3, r3, #99840
 263 00e4 A033     		adds	r3, r3, #160
 264              		.loc 1 19 64
 265 00e6 084A     		ldr	r2, .L18+4
 266 00e8 A2FB0323 		umull	r2, r3, r2, r3
 267 00ec 9B09     		lsrs	r3, r3, #6
 268              		.loc 1 19 27
 269 00ee C3F16403 		rsb	r3, r3, #100
 270              		.loc 1 19 22
 271 00f2 064A     		ldr	r2, .L18+8
 272 00f4 1360     		str	r3, [r2]
  20:src/stm32f103_setup.c ****             tick_count = 0; // Reset tick count
 273              		.loc 1 20 24
 274 00f6 034B     		ldr	r3, .L18
 275 00f8 0022     		movs	r2, #0
 276 00fa 1A60     		str	r2, [r3]
 277              	.L17:
  21:src/stm32f103_setup.c ****             // Do something with cpu_load value (e.g., send it over UART)
  22:src/stm32f103_setup.c ****         }
  23:src/stm32f103_setup.c **** }
 278              		.loc 1 23 1
 279 00fc 00BF     		nop
 280 00fe BD46     		mov	sp, r7
 281              		.cfi_def_cfa_register 13
 282              		@ sp needed
 283 0100 80BC     		pop	{r7}
 284              		.cfi_restore 7
 285              		.cfi_def_cfa_offset 0
 286 0102 7047     		bx	lr
 287              	.L19:
 288              		.align	2
 289              	.L18:
 290 0104 00000000 		.word	tick_count
 291 0108 D34D6210 		.word	274877907
 292 010c 00000000 		.word	cpu_load
 293              		.cfi_endproc
 294              	.LFE64:
 295              		.size	busy_tick, .-busy_tick
 296              		.align	1
 297              		.global	measure_cpu_usage
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 36


 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.type	measure_cpu_usage, %function
 302              	measure_cpu_usage:
 303              	.LFB65:
  24:src/stm32f103_setup.c **** 
  25:src/stm32f103_setup.c **** // Function to measure CPU usage
  26:src/stm32f103_setup.c **** uint32_t measure_cpu_usage() {
 304              		.loc 1 26 30
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 309 0110 80B4     		push	{r7}
 310              		.cfi_def_cfa_offset 4
 311              		.cfi_offset 7, -4
 312 0112 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
  27:src/stm32f103_setup.c ****     if (cpu_load > max_cpu_load) {
 314              		.loc 1 27 18
 315 0114 074B     		ldr	r3, .L23
 316 0116 1A68     		ldr	r2, [r3]
 317 0118 074B     		ldr	r3, .L23+4
 318 011a 1B68     		ldr	r3, [r3]
 319              		.loc 1 27 8
 320 011c 9A42     		cmp	r2, r3
 321 011e 03D9     		bls	.L21
  28:src/stm32f103_setup.c ****         max_cpu_load = cpu_load; // Update max CPU load
 322              		.loc 1 28 22
 323 0120 044B     		ldr	r3, .L23
 324 0122 1B68     		ldr	r3, [r3]
 325 0124 044A     		ldr	r2, .L23+4
 326 0126 1360     		str	r3, [r2]
 327              	.L21:
  29:src/stm32f103_setup.c ****     }
  30:src/stm32f103_setup.c ****     // Calculate the CPU usage as the ratio of busy time to total time
  31:src/stm32f103_setup.c ****     return max_cpu_load;
 328              		.loc 1 31 12
 329 0128 034B     		ldr	r3, .L23+4
 330 012a 1B68     		ldr	r3, [r3]
  32:src/stm32f103_setup.c **** }
 331              		.loc 1 32 1
 332 012c 1846     		mov	r0, r3
 333 012e BD46     		mov	sp, r7
 334              		.cfi_def_cfa_register 13
 335              		@ sp needed
 336 0130 80BC     		pop	{r7}
 337              		.cfi_restore 7
 338              		.cfi_def_cfa_offset 0
 339 0132 7047     		bx	lr
 340              	.L24:
 341              		.align	2
 342              	.L23:
 343 0134 00000000 		.word	cpu_load
 344 0138 00000000 		.word	max_cpu_load
 345              		.cfi_endproc
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 37


 346              	.LFE65:
 347              		.size	measure_cpu_usage, .-measure_cpu_usage
 348              		.align	1
 349              		.global	setup_clock_speed
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 353              		.type	setup_clock_speed, %function
 354              	setup_clock_speed:
 355              	.LFB66:
  33:src/stm32f103_setup.c **** 
  34:src/stm32f103_setup.c **** void setup_clock_speed() {
 356              		.loc 1 34 26
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 013c 80B5     		push	{r7, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 013e 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
  35:src/stm32f103_setup.c ****     // Enable HSE (External High-Speed Clock)
  36:src/stm32f103_setup.c ****     RCC->CR |= RCC_CR_HSEON;
 366              		.loc 1 36 8
 367 0140 284B     		ldr	r3, .L29
 368 0142 1B68     		ldr	r3, [r3]
 369 0144 274A     		ldr	r2, .L29
 370              		.loc 1 36 13
 371 0146 43F48033 		orr	r3, r3, #65536
 372 014a 1360     		str	r3, [r2]
  37:src/stm32f103_setup.c ****     while (!(RCC->CR & RCC_CR_HSERDY)); // Wait until HSE is ready
 373              		.loc 1 37 11
 374 014c 00BF     		nop
 375              	.L26:
 376              		.loc 1 37 17 discriminator 1
 377 014e 254B     		ldr	r3, .L29
 378 0150 1B68     		ldr	r3, [r3]
 379              		.loc 1 37 22 discriminator 1
 380 0152 03F40033 		and	r3, r3, #131072
 381              		.loc 1 37 12 discriminator 1
 382 0156 002B     		cmp	r3, #0
 383 0158 F9D0     		beq	.L26
  38:src/stm32f103_setup.c **** 
  39:src/stm32f103_setup.c ****     // Configure PLL (PLLCLK = HSE * 9 = 72MHz)
  40:src/stm32f103_setup.c ****     RCC->CFGR |= RCC_CFGR_PLLSRC; // Select HSE as PLL source
 384              		.loc 1 40 8
 385 015a 224B     		ldr	r3, .L29
 386 015c 5B68     		ldr	r3, [r3, #4]
 387 015e 214A     		ldr	r2, .L29
 388              		.loc 1 40 15
 389 0160 43F48033 		orr	r3, r3, #65536
 390 0164 5360     		str	r3, [r2, #4]
  41:src/stm32f103_setup.c ****     RCC->CFGR |= RCC_CFGR_PLLMULL9; // PLL multiplication factor = 9
 391              		.loc 1 41 8
 392 0166 1F4B     		ldr	r3, .L29
 393 0168 5B68     		ldr	r3, [r3, #4]
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 38


 394 016a 1E4A     		ldr	r2, .L29
 395              		.loc 1 41 15
 396 016c 43F4E013 		orr	r3, r3, #1835008
 397 0170 5360     		str	r3, [r2, #4]
  42:src/stm32f103_setup.c **** 
  43:src/stm32f103_setup.c ****     // Enable PLL
  44:src/stm32f103_setup.c ****     RCC->CR |= RCC_CR_PLLON;
 398              		.loc 1 44 8
 399 0172 1C4B     		ldr	r3, .L29
 400 0174 1B68     		ldr	r3, [r3]
 401 0176 1B4A     		ldr	r2, .L29
 402              		.loc 1 44 13
 403 0178 43F08073 		orr	r3, r3, #16777216
 404 017c 1360     		str	r3, [r2]
  45:src/stm32f103_setup.c ****     while (!(RCC->CR & RCC_CR_PLLRDY)); // Wait until PLL is ready
 405              		.loc 1 45 11
 406 017e 00BF     		nop
 407              	.L27:
 408              		.loc 1 45 17 discriminator 1
 409 0180 184B     		ldr	r3, .L29
 410 0182 1B68     		ldr	r3, [r3]
 411              		.loc 1 45 22 discriminator 1
 412 0184 03F00073 		and	r3, r3, #33554432
 413              		.loc 1 45 12 discriminator 1
 414 0188 002B     		cmp	r3, #0
 415 018a F9D0     		beq	.L27
  46:src/stm32f103_setup.c **** 
  47:src/stm32f103_setup.c ****     // Set Flash latency
  48:src/stm32f103_setup.c ****     FLASH->ACR |= FLASH_ACR_LATENCY_2;
 416              		.loc 1 48 10
 417 018c 164B     		ldr	r3, .L29+4
 418 018e 1B68     		ldr	r3, [r3]
 419 0190 154A     		ldr	r2, .L29+4
 420              		.loc 1 48 16
 421 0192 43F00403 		orr	r3, r3, #4
 422 0196 1360     		str	r3, [r2]
  49:src/stm32f103_setup.c **** 
  50:src/stm32f103_setup.c ****     // Configure AHB/APBx prescalers to provide the desired system clock frequency
  51:src/stm32f103_setup.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1; // AHB prescaler: SYSCLK not divided
 423              		.loc 1 51 8
 424 0198 124B     		ldr	r3, .L29
 425 019a 124A     		ldr	r2, .L29
 426 019c 5B68     		ldr	r3, [r3, #4]
 427              		.loc 1 51 15
 428 019e 5360     		str	r3, [r2, #4]
  52:src/stm32f103_setup.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV2; // APB1 prescaler: HCLK divided by 2
 429              		.loc 1 52 8
 430 01a0 104B     		ldr	r3, .L29
 431 01a2 5B68     		ldr	r3, [r3, #4]
 432 01a4 0F4A     		ldr	r2, .L29
 433              		.loc 1 52 15
 434 01a6 43F48063 		orr	r3, r3, #1024
 435 01aa 5360     		str	r3, [r2, #4]
  53:src/stm32f103_setup.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV1; // APB2 prescaler: HCLK not divided
 436              		.loc 1 53 8
 437 01ac 0D4B     		ldr	r3, .L29
 438 01ae 0D4A     		ldr	r2, .L29
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 39


 439 01b0 5B68     		ldr	r3, [r3, #4]
 440              		.loc 1 53 15
 441 01b2 5360     		str	r3, [r2, #4]
  54:src/stm32f103_setup.c **** 
  55:src/stm32f103_setup.c ****     // Select PLL as system clock source
  56:src/stm32f103_setup.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 442              		.loc 1 56 8
 443 01b4 0B4B     		ldr	r3, .L29
 444 01b6 5B68     		ldr	r3, [r3, #4]
 445 01b8 0A4A     		ldr	r2, .L29
 446              		.loc 1 56 15
 447 01ba 43F00203 		orr	r3, r3, #2
 448 01be 5360     		str	r3, [r2, #4]
  57:src/stm32f103_setup.c ****     while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL); // Wait until PLL is used as the system
 449              		.loc 1 57 11
 450 01c0 00BF     		nop
 451              	.L28:
 452              		.loc 1 57 16 discriminator 1
 453 01c2 084B     		ldr	r3, .L29
 454 01c4 5B68     		ldr	r3, [r3, #4]
 455              		.loc 1 57 23 discriminator 1
 456 01c6 03F00C03 		and	r3, r3, #12
 457              		.loc 1 57 39 discriminator 1
 458 01ca 082B     		cmp	r3, #8
 459 01cc F9D1     		bne	.L28
  58:src/stm32f103_setup.c **** 
  59:src/stm32f103_setup.c ****     // Assuming SysTick timer is used for measuring CPU usage
  60:src/stm32f103_setup.c ****     // Configure SysTick timer
  61:src/stm32f103_setup.c ****     SysTick_Config(SystemCoreClock / 1000); // Configure SysTick to trigger every 1ms
 460              		.loc 1 61 5
 461 01ce 074B     		ldr	r3, .L29+8
 462 01d0 1B68     		ldr	r3, [r3]
 463 01d2 074A     		ldr	r2, .L29+12
 464 01d4 A2FB0323 		umull	r2, r3, r2, r3
 465 01d8 9B09     		lsrs	r3, r3, #6
 466 01da 1846     		mov	r0, r3
 467 01dc FFF73AFF 		bl	SysTick_Config
  62:src/stm32f103_setup.c **** }
 468              		.loc 1 62 1
 469 01e0 00BF     		nop
 470 01e2 80BD     		pop	{r7, pc}
 471              	.L30:
 472              		.align	2
 473              	.L29:
 474 01e4 00100240 		.word	1073876992
 475 01e8 00200240 		.word	1073881088
 476 01ec 00000000 		.word	SystemCoreClock
 477 01f0 D34D6210 		.word	274877907
 478              		.cfi_endproc
 479              	.LFE66:
 480              		.size	setup_clock_speed, .-setup_clock_speed
 481              		.align	1
 482              		.global	init_rtc
 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 486              		.type	init_rtc, %function
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 40


 487              	init_rtc:
 488              	.LFB67:
  63:src/stm32f103_setup.c **** 
  64:src/stm32f103_setup.c **** void init_rtc() {
 489              		.loc 1 64 17
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494 01f4 80B4     		push	{r7}
 495              		.cfi_def_cfa_offset 4
 496              		.cfi_offset 7, -4
 497 01f6 00AF     		add	r7, sp, #0
 498              		.cfi_def_cfa_register 7
  65:src/stm32f103_setup.c ****     // Code to initialize the Real-Time Clock (RTC)
  66:src/stm32f103_setup.c ****     // Example: configuring the RTC with default settings
  67:src/stm32f103_setup.c ****     // (Assuming RTC peripheral is enabled and configured elsewhere)
  68:src/stm32f103_setup.c ****     // RTC->CRL &= ~(RTC_CRL_RTOFF); // Disable write protection
  69:src/stm32f103_setup.c ****     // while (!(RTC->CRL & RTC_CRL_RTOFF)); // Wait for write protection disabled
  70:src/stm32f103_setup.c ****     // RTC->CRL |= RTC_CRL_CNF; // Enter configuration mode
  71:src/stm32f103_setup.c ****     // RTC->PRLH = 0x0000; // Set prescaler (MSB)
  72:src/stm32f103_setup.c ****     // RTC->PRLL = 0x7FFF; // Set prescaler (LSB)
  73:src/stm32f103_setup.c ****     // RTC->CNTH = 0x0000; // Set counter high (MSB)
  74:src/stm32f103_setup.c ****     // RTC->CNTL = 0x0000; // Set counter low (LSB)
  75:src/stm32f103_setup.c ****     // RTC->CRL &= ~(RTC_CRL_CNF); // Exit configuration mode
  76:src/stm32f103_setup.c ****     // while (!(RTC->CRL & RTC_CRL_RTOFF)); // Wait for configuration mode exited
  77:src/stm32f103_setup.c **** }
 499              		.loc 1 77 1
 500 01f8 00BF     		nop
 501 01fa BD46     		mov	sp, r7
 502              		.cfi_def_cfa_register 13
 503              		@ sp needed
 504 01fc 80BC     		pop	{r7}
 505              		.cfi_restore 7
 506              		.cfi_def_cfa_offset 0
 507 01fe 7047     		bx	lr
 508              		.cfi_endproc
 509              	.LFE67:
 510              		.size	init_rtc, .-init_rtc
 511              		.align	1
 512              		.global	enableDWT
 513              		.syntax unified
 514              		.thumb
 515              		.thumb_func
 516              		.type	enableDWT, %function
 517              	enableDWT:
 518              	.LFB68:
  78:src/stm32f103_setup.c **** 
  79:src/stm32f103_setup.c **** // Function to get the microsecond timestamp
  80:src/stm32f103_setup.c **** 
  81:src/stm32f103_setup.c **** void enableDWT(void)
  82:src/stm32f103_setup.c **** {
 519              		.loc 1 82 1
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 41


 524 0200 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0202 00AF     		add	r7, sp, #0
 528              		.cfi_def_cfa_register 7
  83:src/stm32f103_setup.c **** 	if ((CoreDebug->DEMCR & CoreDebug_DEMCR_TRCENA_Msk) == 0)
 529              		.loc 1 83 16
 530 0204 0C4B     		ldr	r3, .L35
 531 0206 DB68     		ldr	r3, [r3, #12]
 532              		.loc 1 83 24
 533 0208 03F08073 		and	r3, r3, #16777216
 534              		.loc 1 83 5
 535 020c 002B     		cmp	r3, #0
 536 020e 0ED1     		bne	.L34
  84:src/stm32f103_setup.c **** 	{
  85:src/stm32f103_setup.c **** 		CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 537              		.loc 1 85 12
 538 0210 094B     		ldr	r3, .L35
 539 0212 DB68     		ldr	r3, [r3, #12]
 540 0214 084A     		ldr	r2, .L35
 541              		.loc 1 85 20
 542 0216 43F08073 		orr	r3, r3, #16777216
 543 021a D360     		str	r3, [r2, #12]
  86:src/stm32f103_setup.c **** 		DWT->CYCCNT = 0;
 544              		.loc 1 86 6
 545 021c 074B     		ldr	r3, .L35+4
 546              		.loc 1 86 15
 547 021e 0022     		movs	r2, #0
 548 0220 5A60     		str	r2, [r3, #4]
  87:src/stm32f103_setup.c **** 		DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 549              		.loc 1 87 6
 550 0222 064B     		ldr	r3, .L35+4
 551 0224 1B68     		ldr	r3, [r3]
 552 0226 054A     		ldr	r2, .L35+4
 553              		.loc 1 87 13
 554 0228 43F00103 		orr	r3, r3, #1
 555 022c 1360     		str	r3, [r2]
 556              	.L34:
  88:src/stm32f103_setup.c **** 	}
  89:src/stm32f103_setup.c **** }
 557              		.loc 1 89 1
 558 022e 00BF     		nop
 559 0230 BD46     		mov	sp, r7
 560              		.cfi_def_cfa_register 13
 561              		@ sp needed
 562 0232 80BC     		pop	{r7}
 563              		.cfi_restore 7
 564              		.cfi_def_cfa_offset 0
 565 0234 7047     		bx	lr
 566              	.L36:
 567 0236 00BF     		.align	2
 568              	.L35:
 569 0238 F0ED00E0 		.word	-536810000
 570 023c 001000E0 		.word	-536866816
 571              		.cfi_endproc
 572              	.LFE68:
 573              		.size	enableDWT, .-enableDWT
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 42


 574              		.align	1
 575              		.global	micros
 576              		.syntax unified
 577              		.thumb
 578              		.thumb_func
 579              		.type	micros, %function
 580              	micros:
 581              	.LFB69:
  90:src/stm32f103_setup.c **** 
  91:src/stm32f103_setup.c **** uint32_t micros(void)
  92:src/stm32f103_setup.c **** {
 582              		.loc 1 92 1
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 1, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587 0240 80B4     		push	{r7}
 588              		.cfi_def_cfa_offset 4
 589              		.cfi_offset 7, -4
 590 0242 00AF     		add	r7, sp, #0
 591              		.cfi_def_cfa_register 7
  93:src/stm32f103_setup.c **** 	return DWT->CYCCNT / (SystemCoreClock / 1000000);
 592              		.loc 1 93 12
 593 0244 064B     		ldr	r3, .L39
 594 0246 5A68     		ldr	r2, [r3, #4]
 595              		.loc 1 93 40
 596 0248 064B     		ldr	r3, .L39+4
 597 024a 1B68     		ldr	r3, [r3]
 598 024c 0649     		ldr	r1, .L39+8
 599 024e A1FB0313 		umull	r1, r3, r1, r3
 600 0252 9B0C     		lsrs	r3, r3, #18
 601              		.loc 1 93 21
 602 0254 B2FBF3F3 		udiv	r3, r2, r3
  94:src/stm32f103_setup.c **** }
 603              		.loc 1 94 1
 604 0258 1846     		mov	r0, r3
 605 025a BD46     		mov	sp, r7
 606              		.cfi_def_cfa_register 13
 607              		@ sp needed
 608 025c 80BC     		pop	{r7}
 609              		.cfi_restore 7
 610              		.cfi_def_cfa_offset 0
 611 025e 7047     		bx	lr
 612              	.L40:
 613              		.align	2
 614              	.L39:
 615 0260 001000E0 		.word	-536866816
 616 0264 00000000 		.word	SystemCoreClock
 617 0268 83DE1B43 		.word	1125899907
 618              		.cfi_endproc
 619              	.LFE69:
 620              		.size	micros, .-micros
 621              		.align	1
 622              		.global	millis
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 43


 626              		.type	millis, %function
 627              	millis:
 628              	.LFB70:
  95:src/stm32f103_setup.c **** 
  96:src/stm32f103_setup.c **** uint32_t millis(void)
  97:src/stm32f103_setup.c **** {
 629              		.loc 1 97 1
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 1, uses_anonymous_args = 0
 633              		@ link register save eliminated.
 634 026c 80B4     		push	{r7}
 635              		.cfi_def_cfa_offset 4
 636              		.cfi_offset 7, -4
 637 026e 00AF     		add	r7, sp, #0
 638              		.cfi_def_cfa_register 7
  98:src/stm32f103_setup.c **** 	return DWT->CYCCNT / (SystemCoreClock / 1000);
 639              		.loc 1 98 12
 640 0270 064B     		ldr	r3, .L43
 641 0272 5A68     		ldr	r2, [r3, #4]
 642              		.loc 1 98 40
 643 0274 064B     		ldr	r3, .L43+4
 644 0276 1B68     		ldr	r3, [r3]
 645 0278 0649     		ldr	r1, .L43+8
 646 027a A1FB0313 		umull	r1, r3, r1, r3
 647 027e 9B09     		lsrs	r3, r3, #6
 648              		.loc 1 98 21
 649 0280 B2FBF3F3 		udiv	r3, r2, r3
  99:src/stm32f103_setup.c **** }
 650              		.loc 1 99 1
 651 0284 1846     		mov	r0, r3
 652 0286 BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0288 80BC     		pop	{r7}
 656              		.cfi_restore 7
 657              		.cfi_def_cfa_offset 0
 658 028a 7047     		bx	lr
 659              	.L44:
 660              		.align	2
 661              	.L43:
 662 028c 001000E0 		.word	-536866816
 663 0290 00000000 		.word	SystemCoreClock
 664 0294 D34D6210 		.word	274877907
 665              		.cfi_endproc
 666              	.LFE70:
 667              		.size	millis, .-millis
 668              	.Letext0:
 669              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 670              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 671              		.file 5 "./CMSIS/Device/STM32F1xx/include/stm32f103xb.h"
 672              		.file 6 "./CMSIS/Device/STM32F1xx/include/system_stm32f1xx.h"
 673              		.section	.debug_info,"",%progbits
 674              	.Ldebug_info0:
 675 0000 4C090000 		.4byte	0x94c
 676 0004 0500     		.2byte	0x5
 677 0006 01       		.byte	0x1
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 44


 678 0007 04       		.byte	0x4
 679 0008 00000000 		.4byte	.Ldebug_abbrev0
 680 000c 12       		.uleb128 0x12
 681 000d 5A000000 		.4byte	.LASF154
 682 0011 0C       		.byte	0xc
 683 0012 1E000000 		.4byte	.LASF155
 684 0016 6F020000 		.4byte	.LASF156
 685 001a 00000000 		.4byte	.Ltext0
 686 001e 98020000 		.4byte	.Letext0-.Ltext0
 687 0022 00000000 		.4byte	.Ldebug_line0
 688 0026 06       		.uleb128 0x6
 689 0027 01       		.byte	0x1
 690 0028 06       		.byte	0x6
 691 0029 8D060000 		.4byte	.LASF0
 692 002d 0A       		.uleb128 0xa
 693 002e 58050000 		.4byte	.LASF4
 694 0032 03       		.byte	0x3
 695 0033 2B       		.byte	0x2b
 696 0034 18       		.byte	0x18
 697 0035 39000000 		.4byte	0x39
 698 0039 06       		.uleb128 0x6
 699 003a 01       		.byte	0x1
 700 003b 08       		.byte	0x8
 701 003c 0E060000 		.4byte	.LASF1
 702 0040 06       		.uleb128 0x6
 703 0041 02       		.byte	0x2
 704 0042 05       		.byte	0x5
 705 0043 0A050000 		.4byte	.LASF2
 706 0047 06       		.uleb128 0x6
 707 0048 02       		.byte	0x2
 708 0049 07       		.byte	0x7
 709 004a 99060000 		.4byte	.LASF3
 710 004e 0A       		.uleb128 0xa
 711 004f 59010000 		.4byte	.LASF5
 712 0053 03       		.byte	0x3
 713 0054 4D       		.byte	0x4d
 714 0055 18       		.byte	0x18
 715 0056 5A000000 		.4byte	0x5a
 716 005a 06       		.uleb128 0x6
 717 005b 04       		.byte	0x4
 718 005c 05       		.byte	0x5
 719 005d 14050000 		.4byte	.LASF6
 720 0061 0A       		.uleb128 0xa
 721 0062 1C060000 		.4byte	.LASF7
 722 0066 03       		.byte	0x3
 723 0067 4F       		.byte	0x4f
 724 0068 19       		.byte	0x19
 725 0069 6D000000 		.4byte	0x6d
 726 006d 06       		.uleb128 0x6
 727 006e 04       		.byte	0x4
 728 006f 07       		.byte	0x7
 729 0070 B9050000 		.4byte	.LASF8
 730 0074 06       		.uleb128 0x6
 731 0075 08       		.byte	0x8
 732 0076 05       		.byte	0x5
 733 0077 B9030000 		.4byte	.LASF9
 734 007b 06       		.uleb128 0x6
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 45


 735 007c 08       		.byte	0x8
 736 007d 07       		.byte	0x7
 737 007e 17020000 		.4byte	.LASF10
 738 0082 13       		.uleb128 0x13
 739 0083 04       		.byte	0x4
 740 0084 05       		.byte	0x5
 741 0085 696E7400 		.ascii	"int\000"
 742 0089 06       		.uleb128 0x6
 743 008a 04       		.byte	0x4
 744 008b 07       		.byte	0x7
 745 008c 37010000 		.4byte	.LASF11
 746 0090 0A       		.uleb128 0xa
 747 0091 90030000 		.4byte	.LASF12
 748 0095 04       		.byte	0x4
 749 0096 18       		.byte	0x18
 750 0097 13       		.byte	0x13
 751 0098 2D000000 		.4byte	0x2d
 752 009c 08       		.uleb128 0x8
 753 009d 90000000 		.4byte	0x90
 754 00a1 0A       		.uleb128 0xa
 755 00a2 D5050000 		.4byte	.LASF13
 756 00a6 04       		.byte	0x4
 757 00a7 2C       		.byte	0x2c
 758 00a8 13       		.byte	0x13
 759 00a9 4E000000 		.4byte	0x4e
 760 00ad 0A       		.uleb128 0xa
 761 00ae D0010000 		.4byte	.LASF14
 762 00b2 04       		.byte	0x4
 763 00b3 30       		.byte	0x30
 764 00b4 14       		.byte	0x14
 765 00b5 61000000 		.4byte	0x61
 766 00b9 08       		.uleb128 0x8
 767 00ba AD000000 		.4byte	0xad
 768 00be 0D       		.uleb128 0xd
 769 00bf B9000000 		.4byte	0xb9
 770 00c3 14       		.uleb128 0x14
 771 00c4 05       		.byte	0x5
 772 00c5 01       		.byte	0x1
 773 00c6 26000000 		.4byte	0x26
 774 00ca 05       		.byte	0x5
 775 00cb 58       		.byte	0x58
 776 00cc 01       		.byte	0x1
 777 00cd 0A020000 		.4byte	0x20a
 778 00d1 07       		.uleb128 0x7
 779 00d2 29050000 		.4byte	.LASF15
 780 00d6 72       		.sleb128 -14
 781 00d7 07       		.uleb128 0x7
 782 00d8 B7060000 		.4byte	.LASF16
 783 00dc 73       		.sleb128 -13
 784 00dd 07       		.uleb128 0x7
 785 00de BA010000 		.4byte	.LASF17
 786 00e2 74       		.sleb128 -12
 787 00e3 07       		.uleb128 0x7
 788 00e4 F9030000 		.4byte	.LASF18
 789 00e8 75       		.sleb128 -11
 790 00e9 07       		.uleb128 0x7
 791 00ea FE050000 		.4byte	.LASF19
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 46


 792 00ee 76       		.sleb128 -10
 793 00ef 07       		.uleb128 0x7
 794 00f0 34060000 		.4byte	.LASF20
 795 00f4 7B       		.sleb128 -5
 796 00f5 07       		.uleb128 0x7
 797 00f6 EC050000 		.4byte	.LASF21
 798 00fa 7C       		.sleb128 -4
 799 00fb 07       		.uleb128 0x7
 800 00fc 93010000 		.4byte	.LASF22
 801 0100 7E       		.sleb128 -2
 802 0101 07       		.uleb128 0x7
 803 0102 A7050000 		.4byte	.LASF23
 804 0106 7F       		.sleb128 -1
 805 0107 02       		.uleb128 0x2
 806 0108 C7030000 		.4byte	.LASF24
 807 010c 00       		.byte	0
 808 010d 02       		.uleb128 0x2
 809 010e 12040000 		.4byte	.LASF25
 810 0112 01       		.byte	0x1
 811 0113 02       		.uleb128 0x2
 812 0114 FE060000 		.4byte	.LASF26
 813 0118 02       		.byte	0x2
 814 0119 02       		.uleb128 0x2
 815 011a C5040000 		.4byte	.LASF27
 816 011e 03       		.byte	0x3
 817 011f 02       		.uleb128 0x2
 818 0120 63010000 		.4byte	.LASF28
 819 0124 04       		.byte	0x4
 820 0125 02       		.uleb128 0x2
 821 0126 9F010000 		.4byte	.LASF29
 822 012a 05       		.byte	0x5
 823 012b 02       		.uleb128 0x2
 824 012c 74010000 		.4byte	.LASF30
 825 0130 06       		.byte	0x6
 826 0131 02       		.uleb128 0x2
 827 0132 98030000 		.4byte	.LASF31
 828 0136 07       		.byte	0x7
 829 0137 02       		.uleb128 0x2
 830 0138 FF020000 		.4byte	.LASF32
 831 013c 08       		.byte	0x8
 832 013d 02       		.uleb128 0x2
 833 013e AC060000 		.4byte	.LASF33
 834 0142 09       		.byte	0x9
 835 0143 02       		.uleb128 0x2
 836 0144 07040000 		.4byte	.LASF34
 837 0148 0A       		.byte	0xa
 838 0149 02       		.uleb128 0x2
 839 014a 58030000 		.4byte	.LASF35
 840 014e 0B       		.byte	0xb
 841 014f 02       		.uleb128 0x2
 842 0150 0C010000 		.4byte	.LASF36
 843 0154 0C       		.byte	0xc
 844 0155 02       		.uleb128 0x2
 845 0156 47040000 		.4byte	.LASF37
 846 015a 0D       		.byte	0xd
 847 015b 02       		.uleb128 0x2
 848 015c 04020000 		.4byte	.LASF38
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 47


 849 0160 0E       		.byte	0xe
 850 0161 02       		.uleb128 0x2
 851 0162 6C060000 		.4byte	.LASF39
 852 0166 0F       		.byte	0xf
 853 0167 02       		.uleb128 0x2
 854 0168 2B030000 		.4byte	.LASF40
 855 016c 10       		.byte	0x10
 856 016d 02       		.uleb128 0x2
 857 016e DB000000 		.4byte	.LASF41
 858 0172 11       		.byte	0x11
 859 0173 02       		.uleb128 0x2
 860 0174 D5060000 		.4byte	.LASF42
 861 0178 12       		.byte	0x12
 862 0179 02       		.uleb128 0x2
 863 017a 51020000 		.4byte	.LASF43
 864 017e 13       		.byte	0x13
 865 017f 02       		.uleb128 0x2
 866 0180 00000000 		.4byte	.LASF44
 867 0184 14       		.byte	0x14
 868 0185 02       		.uleb128 0x2
 869 0186 43020000 		.4byte	.LASF45
 870 018a 15       		.byte	0x15
 871 018b 02       		.uleb128 0x2
 872 018c CD000000 		.4byte	.LASF46
 873 0190 16       		.byte	0x16
 874 0191 02       		.uleb128 0x2
 875 0192 27060000 		.4byte	.LASF47
 876 0196 17       		.byte	0x17
 877 0197 02       		.uleb128 0x2
 878 0198 E3010000 		.4byte	.LASF48
 879 019c 18       		.byte	0x18
 880 019d 02       		.uleb128 0x2
 881 019e 97040000 		.4byte	.LASF49
 882 01a2 19       		.byte	0x19
 883 01a3 02       		.uleb128 0x2
 884 01a4 7A050000 		.4byte	.LASF50
 885 01a8 1A       		.byte	0x1a
 886 01a9 02       		.uleb128 0x2
 887 01aa 46050000 		.4byte	.LASF51
 888 01ae 1B       		.byte	0x1b
 889 01af 02       		.uleb128 0x2
 890 01b0 CB050000 		.4byte	.LASF52
 891 01b4 1C       		.byte	0x1c
 892 01b5 02       		.uleb128 0x2
 893 01b6 44030000 		.4byte	.LASF53
 894 01ba 1D       		.byte	0x1d
 895 01bb 02       		.uleb128 0x2
 896 01bc 02010000 		.4byte	.LASF54
 897 01c0 1E       		.byte	0x1e
 898 01c1 02       		.uleb128 0x2
 899 01c2 5A040000 		.4byte	.LASF55
 900 01c6 1F       		.byte	0x1f
 901 01c7 02       		.uleb128 0x2
 902 01c8 91050000 		.4byte	.LASF56
 903 01cc 20       		.byte	0x20
 904 01cd 02       		.uleb128 0x2
 905 01ce 19030000 		.4byte	.LASF57
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 48


 906 01d2 21       		.byte	0x21
 907 01d3 02       		.uleb128 0x2
 908 01d4 EE000000 		.4byte	.LASF58
 909 01d8 22       		.byte	0x22
 910 01d9 02       		.uleb128 0x2
 911 01da FA010000 		.4byte	.LASF59
 912 01de 23       		.byte	0x23
 913 01df 02       		.uleb128 0x2
 914 01e0 5D060000 		.4byte	.LASF60
 915 01e4 24       		.byte	0x24
 916 01e5 02       		.uleb128 0x2
 917 01e6 1D050000 		.4byte	.LASF61
 918 01ea 25       		.byte	0x25
 919 01eb 02       		.uleb128 0x2
 920 01ec A6020000 		.4byte	.LASF62
 921 01f0 26       		.byte	0x26
 922 01f1 02       		.uleb128 0x2
 923 01f2 E6060000 		.4byte	.LASF63
 924 01f6 27       		.byte	0x27
 925 01f7 02       		.uleb128 0x2
 926 01f8 7F010000 		.4byte	.LASF64
 927 01fc 28       		.byte	0x28
 928 01fd 02       		.uleb128 0x2
 929 01fe B6040000 		.4byte	.LASF65
 930 0202 29       		.byte	0x29
 931 0203 02       		.uleb128 0x2
 932 0204 AA030000 		.4byte	.LASF66
 933 0208 2A       		.byte	0x2a
 934 0209 00       		.byte	0
 935 020a 0A       		.uleb128 0xa
 936 020b 65020000 		.4byte	.LASF67
 937 020f 05       		.byte	0x5
 938 0210 90       		.byte	0x90
 939 0211 03       		.byte	0x3
 940 0212 C3000000 		.4byte	0xc3
 941 0216 15       		.uleb128 0x15
 942 0217 040E     		.2byte	0xe04
 943 0219 02       		.byte	0x2
 944 021a 7F01     		.2byte	0x17f
 945 021c 09       		.byte	0x9
 946 021d D0020000 		.4byte	0x2d0
 947 0221 01       		.uleb128 0x1
 948 0222 DE010000 		.4byte	.LASF68
 949 0226 02       		.byte	0x2
 950 0227 8101     		.2byte	0x181
 951 0229 12       		.byte	0x12
 952 022a E0020000 		.4byte	0x2e0
 953 022e 00       		.byte	0
 954 022f 01       		.uleb128 0x1
 955 0230 CE040000 		.4byte	.LASF69
 956 0234 02       		.byte	0x2
 957 0235 8201     		.2byte	0x182
 958 0237 12       		.byte	0x12
 959 0238 E5020000 		.4byte	0x2e5
 960 023c 20       		.byte	0x20
 961 023d 01       		.uleb128 0x1
 962 023e 58060000 		.4byte	.LASF70
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 49


 963 0242 02       		.byte	0x2
 964 0243 8301     		.2byte	0x183
 965 0245 12       		.byte	0x12
 966 0246 E0020000 		.4byte	0x2e0
 967 024a 80       		.byte	0x80
 968 024b 01       		.uleb128 0x1
 969 024c F1010000 		.4byte	.LASF71
 970 0250 02       		.byte	0x2
 971 0251 8401     		.2byte	0x184
 972 0253 12       		.byte	0x12
 973 0254 E5020000 		.4byte	0x2e5
 974 0258 A0       		.byte	0xa0
 975 0259 09       		.uleb128 0x9
 976 025a C6060000 		.4byte	.LASF72
 977 025e 8501     		.2byte	0x185
 978 0260 E0020000 		.4byte	0x2e0
 979 0264 0001     		.2byte	0x100
 980 0266 09       		.uleb128 0x9
 981 0267 E2040000 		.4byte	.LASF73
 982 026b 8601     		.2byte	0x186
 983 026d E5020000 		.4byte	0x2e5
 984 0271 2001     		.2byte	0x120
 985 0273 09       		.uleb128 0x9
 986 0274 2A040000 		.4byte	.LASF74
 987 0278 8701     		.2byte	0x187
 988 027a E0020000 		.4byte	0x2e0
 989 027e 8001     		.2byte	0x180
 990 0280 09       		.uleb128 0x9
 991 0281 EC040000 		.4byte	.LASF75
 992 0285 8801     		.2byte	0x188
 993 0287 E5020000 		.4byte	0x2e5
 994 028b A001     		.2byte	0x1a0
 995 028d 09       		.uleb128 0x9
 996 028e 67060000 		.4byte	.LASF76
 997 0292 8901     		.2byte	0x189
 998 0294 E0020000 		.4byte	0x2e0
 999 0298 0002     		.2byte	0x200
 1000 029a 09       		.uleb128 0x9
 1001 029b F6040000 		.4byte	.LASF77
 1002 029f 8A01     		.2byte	0x18a
 1003 02a1 F5020000 		.4byte	0x2f5
 1004 02a5 2002     		.2byte	0x220
 1005 02a7 16       		.uleb128 0x16
 1006 02a8 495000   		.ascii	"IP\000"
 1007 02ab 02       		.byte	0x2
 1008 02ac 8B01     		.2byte	0x18b
 1009 02ae 12       		.byte	0x12
 1010 02af 15030000 		.4byte	0x315
 1011 02b3 0003     		.2byte	0x300
 1012 02b5 09       		.uleb128 0x9
 1013 02b6 00050000 		.4byte	.LASF78
 1014 02ba 8C01     		.2byte	0x18c
 1015 02bc 1A030000 		.4byte	0x31a
 1016 02c0 F003     		.2byte	0x3f0
 1017 02c2 09       		.uleb128 0x9
 1018 02c3 AB040000 		.4byte	.LASF79
 1019 02c7 8D01     		.2byte	0x18d
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 50


 1020 02c9 B9000000 		.4byte	0xb9
 1021 02cd 000E     		.2byte	0xe00
 1022 02cf 00       		.byte	0
 1023 02d0 04       		.uleb128 0x4
 1024 02d1 B9000000 		.4byte	0xb9
 1025 02d5 E0020000 		.4byte	0x2e0
 1026 02d9 05       		.uleb128 0x5
 1027 02da 89000000 		.4byte	0x89
 1028 02de 07       		.byte	0x7
 1029 02df 00       		.byte	0
 1030 02e0 08       		.uleb128 0x8
 1031 02e1 D0020000 		.4byte	0x2d0
 1032 02e5 04       		.uleb128 0x4
 1033 02e6 AD000000 		.4byte	0xad
 1034 02ea F5020000 		.4byte	0x2f5
 1035 02ee 05       		.uleb128 0x5
 1036 02ef 89000000 		.4byte	0x89
 1037 02f3 17       		.byte	0x17
 1038 02f4 00       		.byte	0
 1039 02f5 04       		.uleb128 0x4
 1040 02f6 AD000000 		.4byte	0xad
 1041 02fa 05030000 		.4byte	0x305
 1042 02fe 05       		.uleb128 0x5
 1043 02ff 89000000 		.4byte	0x89
 1044 0303 37       		.byte	0x37
 1045 0304 00       		.byte	0
 1046 0305 04       		.uleb128 0x4
 1047 0306 9C000000 		.4byte	0x9c
 1048 030a 15030000 		.4byte	0x315
 1049 030e 05       		.uleb128 0x5
 1050 030f 89000000 		.4byte	0x89
 1051 0313 EF       		.byte	0xef
 1052 0314 00       		.byte	0
 1053 0315 08       		.uleb128 0x8
 1054 0316 05030000 		.4byte	0x305
 1055 031a 04       		.uleb128 0x4
 1056 031b AD000000 		.4byte	0xad
 1057 031f 2B030000 		.4byte	0x32b
 1058 0323 17       		.uleb128 0x17
 1059 0324 89000000 		.4byte	0x89
 1060 0328 8302     		.2byte	0x283
 1061 032a 00       		.byte	0
 1062 032b 0B       		.uleb128 0xb
 1063 032c 62050000 		.4byte	.LASF80
 1064 0330 02       		.byte	0x2
 1065 0331 8E01     		.2byte	0x18e
 1066 0333 04       		.byte	0x4
 1067 0334 16020000 		.4byte	0x216
 1068 0338 0C       		.uleb128 0xc
 1069 0339 8C       		.byte	0x8c
 1070 033a 02       		.byte	0x2
 1071 033b A101     		.2byte	0x1a1
 1072 033d 68040000 		.4byte	0x468
 1073 0341 01       		.uleb128 0x1
 1074 0342 C0020000 		.4byte	.LASF81
 1075 0346 02       		.byte	0x2
 1076 0347 A301     		.2byte	0x1a3
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 51


 1077 0349 12       		.byte	0x12
 1078 034a BE000000 		.4byte	0xbe
 1079 034e 00       		.byte	0
 1080 034f 01       		.uleb128 0x1
 1081 0350 B4050000 		.4byte	.LASF82
 1082 0354 02       		.byte	0x2
 1083 0355 A401     		.2byte	0x1a4
 1084 0357 12       		.byte	0x12
 1085 0358 B9000000 		.4byte	0xb9
 1086 035c 04       		.byte	0x4
 1087 035d 01       		.uleb128 0x1
 1088 035e 8C050000 		.4byte	.LASF83
 1089 0362 02       		.byte	0x2
 1090 0363 A501     		.2byte	0x1a5
 1091 0365 12       		.byte	0x12
 1092 0366 B9000000 		.4byte	0xb9
 1093 036a 08       		.byte	0x8
 1094 036b 01       		.uleb128 0x1
 1095 036c 3E030000 		.4byte	.LASF84
 1096 0370 02       		.byte	0x2
 1097 0371 A601     		.2byte	0x1a6
 1098 0373 12       		.byte	0x12
 1099 0374 B9000000 		.4byte	0xb9
 1100 0378 0C       		.byte	0xc
 1101 0379 03       		.uleb128 0x3
 1102 037a 53435200 		.ascii	"SCR\000"
 1103 037e 02       		.byte	0x2
 1104 037f A701     		.2byte	0x1a7
 1105 0381 12       		.byte	0x12
 1106 0382 B9000000 		.4byte	0xb9
 1107 0386 10       		.byte	0x10
 1108 0387 03       		.uleb128 0x3
 1109 0388 43435200 		.ascii	"CCR\000"
 1110 038c 02       		.byte	0x2
 1111 038d A801     		.2byte	0x1a8
 1112 038f 12       		.byte	0x12
 1113 0390 B9000000 		.4byte	0xb9
 1114 0394 14       		.byte	0x14
 1115 0395 03       		.uleb128 0x3
 1116 0396 53485000 		.ascii	"SHP\000"
 1117 039a 02       		.byte	0x2
 1118 039b A901     		.2byte	0x1a9
 1119 039d 12       		.byte	0x12
 1120 039e 78040000 		.4byte	0x478
 1121 03a2 18       		.byte	0x18
 1122 03a3 01       		.uleb128 0x1
 1123 03a4 D1030000 		.4byte	.LASF85
 1124 03a8 02       		.byte	0x2
 1125 03a9 AA01     		.2byte	0x1aa
 1126 03ab 12       		.byte	0x12
 1127 03ac B9000000 		.4byte	0xb9
 1128 03b0 24       		.byte	0x24
 1129 03b1 01       		.uleb128 0x1
 1130 03b2 E9030000 		.4byte	.LASF86
 1131 03b6 02       		.byte	0x2
 1132 03b7 AB01     		.2byte	0x1ab
 1133 03b9 12       		.byte	0x12
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 52


 1134 03ba B9000000 		.4byte	0xb9
 1135 03be 28       		.byte	0x28
 1136 03bf 01       		.uleb128 0x1
 1137 03c0 26030000 		.4byte	.LASF87
 1138 03c4 02       		.byte	0x2
 1139 03c5 AC01     		.2byte	0x1ac
 1140 03c7 12       		.byte	0x12
 1141 03c8 B9000000 		.4byte	0xb9
 1142 03cc 2C       		.byte	0x2c
 1143 03cd 01       		.uleb128 0x1
 1144 03ce 4F010000 		.4byte	.LASF88
 1145 03d2 02       		.byte	0x2
 1146 03d3 AD01     		.2byte	0x1ad
 1147 03d5 12       		.byte	0x12
 1148 03d6 B9000000 		.4byte	0xb9
 1149 03da 30       		.byte	0x30
 1150 03db 01       		.uleb128 0x1
 1151 03dc B0040000 		.4byte	.LASF89
 1152 03e0 02       		.byte	0x2
 1153 03e1 AE01     		.2byte	0x1ae
 1154 03e3 12       		.byte	0x12
 1155 03e4 B9000000 		.4byte	0xb9
 1156 03e8 34       		.byte	0x34
 1157 03e9 01       		.uleb128 0x1
 1158 03ea 75050000 		.4byte	.LASF90
 1159 03ee 02       		.byte	0x2
 1160 03ef AF01     		.2byte	0x1af
 1161 03f1 12       		.byte	0x12
 1162 03f2 B9000000 		.4byte	0xb9
 1163 03f6 38       		.byte	0x38
 1164 03f7 01       		.uleb128 0x1
 1165 03f8 E1020000 		.4byte	.LASF91
 1166 03fc 02       		.byte	0x2
 1167 03fd B001     		.2byte	0x1b0
 1168 03ff 12       		.byte	0x12
 1169 0400 B9000000 		.4byte	0xb9
 1170 0404 3C       		.byte	0x3c
 1171 0405 03       		.uleb128 0x3
 1172 0406 50465200 		.ascii	"PFR\000"
 1173 040a 02       		.byte	0x2
 1174 040b B101     		.2byte	0x1b1
 1175 040d 12       		.byte	0x12
 1176 040e 92040000 		.4byte	0x492
 1177 0412 40       		.byte	0x40
 1178 0413 03       		.uleb128 0x3
 1179 0414 44465200 		.ascii	"DFR\000"
 1180 0418 02       		.byte	0x2
 1181 0419 B201     		.2byte	0x1b2
 1182 041b 12       		.byte	0x12
 1183 041c BE000000 		.4byte	0xbe
 1184 0420 48       		.byte	0x48
 1185 0421 03       		.uleb128 0x3
 1186 0422 41445200 		.ascii	"ADR\000"
 1187 0426 02       		.byte	0x2
 1188 0427 B301     		.2byte	0x1b3
 1189 0429 12       		.byte	0x12
 1190 042a BE000000 		.4byte	0xbe
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 53


 1191 042e 4C       		.byte	0x4c
 1192 042f 01       		.uleb128 0x1
 1193 0430 D9010000 		.4byte	.LASF92
 1194 0434 02       		.byte	0x2
 1195 0435 B401     		.2byte	0x1b4
 1196 0437 12       		.byte	0x12
 1197 0438 AC040000 		.4byte	0x4ac
 1198 043c 50       		.byte	0x50
 1199 043d 01       		.uleb128 0x1
 1200 043e E1060000 		.4byte	.LASF93
 1201 0442 02       		.byte	0x2
 1202 0443 B501     		.2byte	0x1b5
 1203 0445 12       		.byte	0x12
 1204 0446 C6040000 		.4byte	0x4c6
 1205 044a 60       		.byte	0x60
 1206 044b 01       		.uleb128 0x1
 1207 044c CE040000 		.4byte	.LASF69
 1208 0450 02       		.byte	0x2
 1209 0451 B601     		.2byte	0x1b6
 1210 0453 12       		.byte	0x12
 1211 0454 CB040000 		.4byte	0x4cb
 1212 0458 74       		.byte	0x74
 1213 0459 01       		.uleb128 0x1
 1214 045a 3C000000 		.4byte	.LASF94
 1215 045e 02       		.byte	0x2
 1216 045f B701     		.2byte	0x1b7
 1217 0461 12       		.byte	0x12
 1218 0462 B9000000 		.4byte	0xb9
 1219 0466 88       		.byte	0x88
 1220 0467 00       		.byte	0
 1221 0468 04       		.uleb128 0x4
 1222 0469 9C000000 		.4byte	0x9c
 1223 046d 78040000 		.4byte	0x478
 1224 0471 05       		.uleb128 0x5
 1225 0472 89000000 		.4byte	0x89
 1226 0476 0B       		.byte	0xb
 1227 0477 00       		.byte	0
 1228 0478 08       		.uleb128 0x8
 1229 0479 68040000 		.4byte	0x468
 1230 047d 04       		.uleb128 0x4
 1231 047e BE000000 		.4byte	0xbe
 1232 0482 8D040000 		.4byte	0x48d
 1233 0486 05       		.uleb128 0x5
 1234 0487 89000000 		.4byte	0x89
 1235 048b 01       		.byte	0x1
 1236 048c 00       		.byte	0
 1237 048d 0D       		.uleb128 0xd
 1238 048e 7D040000 		.4byte	0x47d
 1239 0492 08       		.uleb128 0x8
 1240 0493 8D040000 		.4byte	0x48d
 1241 0497 04       		.uleb128 0x4
 1242 0498 BE000000 		.4byte	0xbe
 1243 049c A7040000 		.4byte	0x4a7
 1244 04a0 05       		.uleb128 0x5
 1245 04a1 89000000 		.4byte	0x89
 1246 04a5 03       		.byte	0x3
 1247 04a6 00       		.byte	0
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 54


 1248 04a7 0D       		.uleb128 0xd
 1249 04a8 97040000 		.4byte	0x497
 1250 04ac 08       		.uleb128 0x8
 1251 04ad A7040000 		.4byte	0x4a7
 1252 04b1 04       		.uleb128 0x4
 1253 04b2 BE000000 		.4byte	0xbe
 1254 04b6 C1040000 		.4byte	0x4c1
 1255 04ba 05       		.uleb128 0x5
 1256 04bb 89000000 		.4byte	0x89
 1257 04bf 04       		.byte	0x4
 1258 04c0 00       		.byte	0
 1259 04c1 0D       		.uleb128 0xd
 1260 04c2 B1040000 		.4byte	0x4b1
 1261 04c6 08       		.uleb128 0x8
 1262 04c7 C1040000 		.4byte	0x4c1
 1263 04cb 04       		.uleb128 0x4
 1264 04cc AD000000 		.4byte	0xad
 1265 04d0 DB040000 		.4byte	0x4db
 1266 04d4 05       		.uleb128 0x5
 1267 04d5 89000000 		.4byte	0x89
 1268 04d9 04       		.byte	0x4
 1269 04da 00       		.byte	0
 1270 04db 0B       		.uleb128 0xb
 1271 04dc 6C050000 		.4byte	.LASF95
 1272 04e0 02       		.byte	0x2
 1273 04e1 B801     		.2byte	0x1b8
 1274 04e3 03       		.byte	0x3
 1275 04e4 38030000 		.4byte	0x338
 1276 04e8 04       		.uleb128 0x4
 1277 04e9 AD000000 		.4byte	0xad
 1278 04ed F8040000 		.4byte	0x4f8
 1279 04f1 05       		.uleb128 0x5
 1280 04f2 89000000 		.4byte	0x89
 1281 04f6 00       		.byte	0
 1282 04f7 00       		.byte	0
 1283 04f8 0C       		.uleb128 0xc
 1284 04f9 10       		.byte	0x10
 1285 04fa 02       		.byte	0x2
 1286 04fb AB02     		.2byte	0x2ab
 1287 04fd 3A050000 		.4byte	0x53a
 1288 0501 01       		.uleb128 0x1
 1289 0502 11070000 		.4byte	.LASF96
 1290 0506 02       		.byte	0x2
 1291 0507 AD02     		.2byte	0x2ad
 1292 0509 12       		.byte	0x12
 1293 050a B9000000 		.4byte	0xb9
 1294 050e 00       		.byte	0
 1295 050f 01       		.uleb128 0x1
 1296 0510 44010000 		.4byte	.LASF97
 1297 0514 02       		.byte	0x2
 1298 0515 AE02     		.2byte	0x2ae
 1299 0517 12       		.byte	0x12
 1300 0518 B9000000 		.4byte	0xb9
 1301 051c 04       		.byte	0x4
 1302 051d 03       		.uleb128 0x3
 1303 051e 56414C00 		.ascii	"VAL\000"
 1304 0522 02       		.byte	0x2
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 55


 1305 0523 AF02     		.2byte	0x2af
 1306 0525 12       		.byte	0x12
 1307 0526 B9000000 		.4byte	0xb9
 1308 052a 08       		.byte	0x8
 1309 052b 01       		.uleb128 0x1
 1310 052c 6E010000 		.4byte	.LASF98
 1311 0530 02       		.byte	0x2
 1312 0531 B002     		.2byte	0x2b0
 1313 0533 12       		.byte	0x12
 1314 0534 BE000000 		.4byte	0xbe
 1315 0538 0C       		.byte	0xc
 1316 0539 00       		.byte	0
 1317 053a 0B       		.uleb128 0xb
 1318 053b 6C040000 		.4byte	.LASF99
 1319 053f 02       		.byte	0x2
 1320 0540 B102     		.2byte	0x2b1
 1321 0542 03       		.byte	0x3
 1322 0543 F8040000 		.4byte	0x4f8
 1323 0547 0C       		.uleb128 0xc
 1324 0548 5C       		.byte	0x5c
 1325 0549 02       		.byte	0x2
 1326 054a 4603     		.2byte	0x346
 1327 054c 93060000 		.4byte	0x693
 1328 0550 01       		.uleb128 0x1
 1329 0551 11070000 		.4byte	.LASF96
 1330 0555 02       		.byte	0x2
 1331 0556 4803     		.2byte	0x348
 1332 0558 12       		.byte	0x12
 1333 0559 B9000000 		.4byte	0xb9
 1334 055d 00       		.byte	0
 1335 055e 01       		.uleb128 0x1
 1336 055f A3030000 		.4byte	.LASF100
 1337 0563 02       		.byte	0x2
 1338 0564 4903     		.2byte	0x349
 1339 0566 12       		.byte	0x12
 1340 0567 B9000000 		.4byte	0xb9
 1341 056b 04       		.byte	0x4
 1342 056c 01       		.uleb128 0x1
 1343 056d 1F010000 		.4byte	.LASF101
 1344 0571 02       		.byte	0x2
 1345 0572 4A03     		.2byte	0x34a
 1346 0574 12       		.byte	0x12
 1347 0575 B9000000 		.4byte	0xb9
 1348 0579 08       		.byte	0x8
 1349 057a 01       		.uleb128 0x1
 1350 057b 0A070000 		.4byte	.LASF102
 1351 057f 02       		.byte	0x2
 1352 0580 4B03     		.2byte	0x34b
 1353 0582 12       		.byte	0x12
 1354 0583 B9000000 		.4byte	0xb9
 1355 0587 0C       		.byte	0xc
 1356 0588 01       		.uleb128 0x1
 1357 0589 79040000 		.4byte	.LASF103
 1358 058d 02       		.byte	0x2
 1359 058e 4C03     		.2byte	0x34c
 1360 0590 12       		.byte	0x12
 1361 0591 B9000000 		.4byte	0xb9
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 56


 1362 0595 10       		.byte	0x10
 1363 0596 01       		.uleb128 0x1
 1364 0597 EF020000 		.4byte	.LASF104
 1365 059b 02       		.byte	0x2
 1366 059c 4D03     		.2byte	0x34d
 1367 059e 12       		.byte	0x12
 1368 059f B9000000 		.4byte	0xb9
 1369 05a3 14       		.byte	0x14
 1370 05a4 01       		.uleb128 0x1
 1371 05a5 7F060000 		.4byte	.LASF105
 1372 05a9 02       		.byte	0x2
 1373 05aa 4E03     		.2byte	0x34e
 1374 05ac 12       		.byte	0x12
 1375 05ad B9000000 		.4byte	0xb9
 1376 05b1 18       		.byte	0x18
 1377 05b2 01       		.uleb128 0x1
 1378 05b3 E7050000 		.4byte	.LASF106
 1379 05b7 02       		.byte	0x2
 1380 05b8 4F03     		.2byte	0x34f
 1381 05ba 12       		.byte	0x12
 1382 05bb BE000000 		.4byte	0xbe
 1383 05bf 1C       		.byte	0x1c
 1384 05c0 01       		.uleb128 0x1
 1385 05c1 42000000 		.4byte	.LASF107
 1386 05c5 02       		.byte	0x2
 1387 05c6 5003     		.2byte	0x350
 1388 05c8 12       		.byte	0x12
 1389 05c9 B9000000 		.4byte	0xb9
 1390 05cd 20       		.byte	0x20
 1391 05ce 01       		.uleb128 0x1
 1392 05cf D7030000 		.4byte	.LASF108
 1393 05d3 02       		.byte	0x2
 1394 05d4 5103     		.2byte	0x351
 1395 05d6 12       		.byte	0x12
 1396 05d7 B9000000 		.4byte	0xb9
 1397 05db 24       		.byte	0x24
 1398 05dc 01       		.uleb128 0x1
 1399 05dd 72030000 		.4byte	.LASF109
 1400 05e1 02       		.byte	0x2
 1401 05e2 5203     		.2byte	0x352
 1402 05e4 12       		.byte	0x12
 1403 05e5 B9000000 		.4byte	0xb9
 1404 05e9 28       		.byte	0x28
 1405 05ea 01       		.uleb128 0x1
 1406 05eb CE040000 		.4byte	.LASF69
 1407 05ef 02       		.byte	0x2
 1408 05f0 5303     		.2byte	0x353
 1409 05f2 12       		.byte	0x12
 1410 05f3 E8040000 		.4byte	0x4e8
 1411 05f7 2C       		.byte	0x2c
 1412 05f8 01       		.uleb128 0x1
 1413 05f9 48000000 		.4byte	.LASF110
 1414 05fd 02       		.byte	0x2
 1415 05fe 5403     		.2byte	0x354
 1416 0600 12       		.byte	0x12
 1417 0601 B9000000 		.4byte	0xb9
 1418 0605 30       		.byte	0x30
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 57


 1419 0606 01       		.uleb128 0x1
 1420 0607 DD030000 		.4byte	.LASF111
 1421 060b 02       		.byte	0x2
 1422 060c 5503     		.2byte	0x355
 1423 060e 12       		.byte	0x12
 1424 060f B9000000 		.4byte	0xb9
 1425 0613 34       		.byte	0x34
 1426 0614 01       		.uleb128 0x1
 1427 0615 7C030000 		.4byte	.LASF112
 1428 0619 02       		.byte	0x2
 1429 061a 5603     		.2byte	0x356
 1430 061c 12       		.byte	0x12
 1431 061d B9000000 		.4byte	0xb9
 1432 0621 38       		.byte	0x38
 1433 0622 01       		.uleb128 0x1
 1434 0623 D8040000 		.4byte	.LASF113
 1435 0627 02       		.byte	0x2
 1436 0628 5703     		.2byte	0x357
 1437 062a 12       		.byte	0x12
 1438 062b E8040000 		.4byte	0x4e8
 1439 062f 3C       		.byte	0x3c
 1440 0630 01       		.uleb128 0x1
 1441 0631 4E000000 		.4byte	.LASF114
 1442 0635 02       		.byte	0x2
 1443 0636 5803     		.2byte	0x358
 1444 0638 12       		.byte	0x12
 1445 0639 B9000000 		.4byte	0xb9
 1446 063d 40       		.byte	0x40
 1447 063e 01       		.uleb128 0x1
 1448 063f E3030000 		.4byte	.LASF115
 1449 0643 02       		.byte	0x2
 1450 0644 5903     		.2byte	0x359
 1451 0646 12       		.byte	0x12
 1452 0647 B9000000 		.4byte	0xb9
 1453 064b 44       		.byte	0x44
 1454 064c 01       		.uleb128 0x1
 1455 064d CB060000 		.4byte	.LASF116
 1456 0651 02       		.byte	0x2
 1457 0652 5A03     		.2byte	0x35a
 1458 0654 12       		.byte	0x12
 1459 0655 B9000000 		.4byte	0xb9
 1460 0659 48       		.byte	0x48
 1461 065a 01       		.uleb128 0x1
 1462 065b E2040000 		.4byte	.LASF73
 1463 065f 02       		.byte	0x2
 1464 0660 5B03     		.2byte	0x35b
 1465 0662 12       		.byte	0x12
 1466 0663 E8040000 		.4byte	0x4e8
 1467 0667 4C       		.byte	0x4c
 1468 0668 01       		.uleb128 0x1
 1469 0669 54000000 		.4byte	.LASF117
 1470 066d 02       		.byte	0x2
 1471 066e 5C03     		.2byte	0x35c
 1472 0670 12       		.byte	0x12
 1473 0671 B9000000 		.4byte	0xb9
 1474 0675 50       		.byte	0x50
 1475 0676 01       		.uleb128 0x1
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 58


 1476 0677 40060000 		.4byte	.LASF118
 1477 067b 02       		.byte	0x2
 1478 067c 5D03     		.2byte	0x35d
 1479 067e 12       		.byte	0x12
 1480 067f B9000000 		.4byte	0xb9
 1481 0683 54       		.byte	0x54
 1482 0684 01       		.uleb128 0x1
 1483 0685 86030000 		.4byte	.LASF119
 1484 0689 02       		.byte	0x2
 1485 068a 5E03     		.2byte	0x35e
 1486 068c 12       		.byte	0x12
 1487 068d B9000000 		.4byte	0xb9
 1488 0691 58       		.byte	0x58
 1489 0692 00       		.byte	0
 1490 0693 0B       		.uleb128 0xb
 1491 0694 E6020000 		.4byte	.LASF120
 1492 0698 02       		.byte	0x2
 1493 0699 5F03     		.2byte	0x35f
 1494 069b 03       		.byte	0x3
 1495 069c 47050000 		.4byte	0x547
 1496 06a0 0C       		.uleb128 0xc
 1497 06a1 10       		.byte	0x10
 1498 06a2 02       		.byte	0x2
 1499 06a3 D304     		.2byte	0x4d3
 1500 06a5 E2060000 		.4byte	0x6e2
 1501 06a9 01       		.uleb128 0x1
 1502 06aa 87060000 		.4byte	.LASF121
 1503 06ae 02       		.byte	0x2
 1504 06af D504     		.2byte	0x4d5
 1505 06b1 12       		.byte	0x12
 1506 06b2 B9000000 		.4byte	0xb9
 1507 06b6 00       		.byte	0
 1508 06b7 01       		.uleb128 0x1
 1509 06b8 F2060000 		.4byte	.LASF122
 1510 06bc 02       		.byte	0x2
 1511 06bd D604     		.2byte	0x4d6
 1512 06bf 12       		.byte	0x12
 1513 06c0 B9000000 		.4byte	0xb9
 1514 06c4 04       		.byte	0x4
 1515 06c5 01       		.uleb128 0x1
 1516 06c6 F8060000 		.4byte	.LASF123
 1517 06ca 02       		.byte	0x2
 1518 06cb D704     		.2byte	0x4d7
 1519 06cd 12       		.byte	0x12
 1520 06ce B9000000 		.4byte	0xb9
 1521 06d2 08       		.byte	0x8
 1522 06d3 01       		.uleb128 0x1
 1523 06d4 49010000 		.4byte	.LASF124
 1524 06d8 02       		.byte	0x2
 1525 06d9 D804     		.2byte	0x4d8
 1526 06db 12       		.byte	0x12
 1527 06dc B9000000 		.4byte	0xb9
 1528 06e0 0C       		.byte	0xc
 1529 06e1 00       		.byte	0
 1530 06e2 0B       		.uleb128 0xb
 1531 06e3 1B040000 		.4byte	.LASF125
 1532 06e7 02       		.byte	0x2
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 59


 1533 06e8 D904     		.2byte	0x4d9
 1534 06ea 03       		.byte	0x3
 1535 06eb A0060000 		.4byte	0x6a0
 1536 06ef 18       		.uleb128 0x18
 1537 06f0 82040000 		.4byte	.LASF139
 1538 06f4 06       		.byte	0x6
 1539 06f5 45       		.byte	0x45
 1540 06f6 11       		.byte	0x11
 1541 06f7 AD000000 		.4byte	0xad
 1542 06fb 0C       		.uleb128 0xc
 1543 06fc 24       		.byte	0x24
 1544 06fd 05       		.byte	0x5
 1545 06fe 5701     		.2byte	0x157
 1546 0700 80070000 		.4byte	0x780
 1547 0704 03       		.uleb128 0x3
 1548 0705 41435200 		.ascii	"ACR\000"
 1549 0709 05       		.byte	0x5
 1550 070a 5901     		.2byte	0x159
 1551 070c 11       		.byte	0x11
 1552 070d B9000000 		.4byte	0xb9
 1553 0711 00       		.byte	0
 1554 0712 01       		.uleb128 0x1
 1555 0713 8E010000 		.4byte	.LASF126
 1556 0717 05       		.byte	0x5
 1557 0718 5A01     		.2byte	0x15a
 1558 071a 11       		.byte	0x11
 1559 071b B9000000 		.4byte	0xb9
 1560 071f 04       		.byte	0x4
 1561 0720 01       		.uleb128 0x1
 1562 0721 2E020000 		.4byte	.LASF127
 1563 0725 05       		.byte	0x5
 1564 0726 5B01     		.2byte	0x15b
 1565 0728 11       		.byte	0x11
 1566 0729 B9000000 		.4byte	0xb9
 1567 072d 08       		.byte	0x8
 1568 072e 03       		.uleb128 0x3
 1569 072f 535200   		.ascii	"SR\000"
 1570 0732 05       		.byte	0x5
 1571 0733 5C01     		.2byte	0x15c
 1572 0735 11       		.byte	0x11
 1573 0736 B9000000 		.4byte	0xb9
 1574 073a 0C       		.byte	0xc
 1575 073b 03       		.uleb128 0x3
 1576 073c 435200   		.ascii	"CR\000"
 1577 073f 05       		.byte	0x5
 1578 0740 5D01     		.2byte	0x15d
 1579 0742 11       		.byte	0x11
 1580 0743 B9000000 		.4byte	0xb9
 1581 0747 10       		.byte	0x10
 1582 0748 03       		.uleb128 0x3
 1583 0749 415200   		.ascii	"AR\000"
 1584 074c 05       		.byte	0x5
 1585 074d 5E01     		.2byte	0x15e
 1586 074f 11       		.byte	0x11
 1587 0750 B9000000 		.4byte	0xb9
 1588 0754 14       		.byte	0x14
 1589 0755 01       		.uleb128 0x1
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 60


 1590 0756 15000000 		.4byte	.LASF128
 1591 075a 05       		.byte	0x5
 1592 075b 5F01     		.2byte	0x15f
 1593 075d 11       		.byte	0x11
 1594 075e B9000000 		.4byte	0xb9
 1595 0762 18       		.byte	0x18
 1596 0763 03       		.uleb128 0x3
 1597 0764 4F425200 		.ascii	"OBR\000"
 1598 0768 05       		.byte	0x5
 1599 0769 6001     		.2byte	0x160
 1600 076b 11       		.byte	0x11
 1601 076c B9000000 		.4byte	0xb9
 1602 0770 1C       		.byte	0x1c
 1603 0771 01       		.uleb128 0x1
 1604 0772 67040000 		.4byte	.LASF129
 1605 0776 05       		.byte	0x5
 1606 0777 6101     		.2byte	0x161
 1607 0779 11       		.byte	0x11
 1608 077a B9000000 		.4byte	0xb9
 1609 077e 20       		.byte	0x20
 1610 077f 00       		.byte	0
 1611 0780 0B       		.uleb128 0xb
 1612 0781 B2020000 		.4byte	.LASF130
 1613 0785 05       		.byte	0x5
 1614 0786 6201     		.2byte	0x162
 1615 0788 03       		.byte	0x3
 1616 0789 FB060000 		.4byte	0x6fb
 1617 078d 0C       		.uleb128 0xc
 1618 078e 28       		.byte	0x28
 1619 078f 05       		.byte	0x5
 1620 0790 BA01     		.2byte	0x1ba
 1621 0792 22080000 		.4byte	0x822
 1622 0796 03       		.uleb128 0x3
 1623 0797 435200   		.ascii	"CR\000"
 1624 079a 05       		.byte	0x5
 1625 079b BC01     		.2byte	0x1bc
 1626 079d 11       		.byte	0x11
 1627 079e B9000000 		.4byte	0xb9
 1628 07a2 00       		.byte	0
 1629 07a3 01       		.uleb128 0x1
 1630 07a4 53050000 		.4byte	.LASF131
 1631 07a8 05       		.byte	0x5
 1632 07a9 BD01     		.2byte	0x1bd
 1633 07ab 11       		.byte	0x11
 1634 07ac B9000000 		.4byte	0xb9
 1635 07b0 04       		.byte	0x4
 1636 07b1 03       		.uleb128 0x3
 1637 07b2 43495200 		.ascii	"CIR\000"
 1638 07b6 05       		.byte	0x5
 1639 07b7 BE01     		.2byte	0x1be
 1640 07b9 11       		.byte	0x11
 1641 07ba B9000000 		.4byte	0xb9
 1642 07be 08       		.byte	0x8
 1643 07bf 01       		.uleb128 0x1
 1644 07c0 C4000000 		.4byte	.LASF132
 1645 07c4 05       		.byte	0x5
 1646 07c5 BF01     		.2byte	0x1bf
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 61


 1647 07c7 11       		.byte	0x11
 1648 07c8 B9000000 		.4byte	0xb9
 1649 07cc 0C       		.byte	0xc
 1650 07cd 01       		.uleb128 0x1
 1651 07ce 10030000 		.4byte	.LASF133
 1652 07d2 05       		.byte	0x5
 1653 07d3 C001     		.2byte	0x1c0
 1654 07d5 11       		.byte	0x11
 1655 07d6 B9000000 		.4byte	0xb9
 1656 07da 10       		.byte	0x10
 1657 07db 01       		.uleb128 0x1
 1658 07dc 6B030000 		.4byte	.LASF134
 1659 07e0 05       		.byte	0x5
 1660 07e1 C101     		.2byte	0x1c1
 1661 07e3 11       		.byte	0x11
 1662 07e4 B9000000 		.4byte	0xb9
 1663 07e8 14       		.byte	0x14
 1664 07e9 01       		.uleb128 0x1
 1665 07ea 2F040000 		.4byte	.LASF135
 1666 07ee 05       		.byte	0x5
 1667 07ef C201     		.2byte	0x1c2
 1668 07f1 11       		.byte	0x11
 1669 07f2 B9000000 		.4byte	0xb9
 1670 07f6 18       		.byte	0x18
 1671 07f7 01       		.uleb128 0x1
 1672 07f8 34000000 		.4byte	.LASF136
 1673 07fc 05       		.byte	0x5
 1674 07fd C301     		.2byte	0x1c3
 1675 07ff 11       		.byte	0x11
 1676 0800 B9000000 		.4byte	0xb9
 1677 0804 1C       		.byte	0x1c
 1678 0805 01       		.uleb128 0x1
 1679 0806 54010000 		.4byte	.LASF137
 1680 080a 05       		.byte	0x5
 1681 080b C401     		.2byte	0x1c4
 1682 080d 11       		.byte	0x11
 1683 080e B9000000 		.4byte	0xb9
 1684 0812 20       		.byte	0x20
 1685 0813 03       		.uleb128 0x3
 1686 0814 43535200 		.ascii	"CSR\000"
 1687 0818 05       		.byte	0x5
 1688 0819 C501     		.2byte	0x1c5
 1689 081b 11       		.byte	0x11
 1690 081c B9000000 		.4byte	0xb9
 1691 0820 24       		.byte	0x24
 1692 0821 00       		.byte	0
 1693 0822 0B       		.uleb128 0xb
 1694 0823 C6020000 		.4byte	.LASF138
 1695 0827 05       		.byte	0x5
 1696 0828 C801     		.2byte	0x1c8
 1697 082a 03       		.byte	0x3
 1698 082b 8D070000 		.4byte	0x78d
 1699 082f 0E       		.uleb128 0xe
 1700 0830 EE030000 		.4byte	.LASF140
 1701 0834 04       		.byte	0x4
 1702 0835 13       		.byte	0x13
 1703 0836 B9000000 		.4byte	0xb9
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 62


 1704 083a 05       		.uleb128 0x5
 1705 083b 03       		.byte	0x3
 1706 083c 00000000 		.4byte	tick_count
 1707 0840 0E       		.uleb128 0xe
 1708 0841 F6020000 		.4byte	.LASF141
 1709 0845 06       		.byte	0x6
 1710 0846 13       		.byte	0x13
 1711 0847 B9000000 		.4byte	0xb9
 1712 084b 05       		.uleb128 0x5
 1713 084c 03       		.byte	0x3
 1714 084d 00000000 		.4byte	cpu_load
 1715 0851 0E       		.uleb128 0xe
 1716 0852 36020000 		.4byte	.LASF142
 1717 0856 07       		.byte	0x7
 1718 0857 0A       		.byte	0xa
 1719 0858 AD000000 		.4byte	0xad
 1720 085c 05       		.uleb128 0x5
 1721 085d 03       		.byte	0x3
 1722 085e 00000000 		.4byte	max_cpu_load
 1723 0862 0F       		.uleb128 0xf
 1724 0863 FB000000 		.4byte	.LASF143
 1725 0867 60       		.byte	0x60
 1726 0868 AD000000 		.4byte	0xad
 1727 086c 6C020000 		.4byte	.LFB70
 1728 0870 2C000000 		.4byte	.LFE70-.LFB70
 1729 0874 01       		.uleb128 0x1
 1730 0875 9C       		.byte	0x9c
 1731 0876 0F       		.uleb128 0xf
 1732 0877 A4040000 		.4byte	.LASF144
 1733 087b 5B       		.byte	0x5b
 1734 087c AD000000 		.4byte	0xad
 1735 0880 40020000 		.4byte	.LFB69
 1736 0884 2C000000 		.4byte	.LFE69-.LFB69
 1737 0888 01       		.uleb128 0x1
 1738 0889 9C       		.byte	0x9c
 1739 088a 10       		.uleb128 0x10
 1740 088b DD050000 		.4byte	.LASF148
 1741 088f 51       		.byte	0x51
 1742 0890 00020000 		.4byte	.LFB68
 1743 0894 40000000 		.4byte	.LFE68-.LFB68
 1744 0898 01       		.uleb128 0x1
 1745 0899 9C       		.byte	0x9c
 1746 089a 19       		.uleb128 0x19
 1747 089b 9E050000 		.4byte	.LASF145
 1748 089f 01       		.byte	0x1
 1749 08a0 40       		.byte	0x40
 1750 08a1 06       		.byte	0x6
 1751 08a2 F4010000 		.4byte	.LFB67
 1752 08a6 0C000000 		.4byte	.LFE67-.LFB67
 1753 08aa 01       		.uleb128 0x1
 1754 08ab 9C       		.byte	0x9c
 1755 08ac 1A       		.uleb128 0x1a
 1756 08ad A8010000 		.4byte	.LASF146
 1757 08b1 01       		.byte	0x1
 1758 08b2 22       		.byte	0x22
 1759 08b3 06       		.byte	0x6
 1760 08b4 3C010000 		.4byte	.LFB66
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 63


 1761 08b8 B8000000 		.4byte	.LFE66-.LFB66
 1762 08bc 01       		.uleb128 0x1
 1763 08bd 9C       		.byte	0x9c
 1764 08be 0F       		.uleb128 0xf
 1765 08bf 46060000 		.4byte	.LASF147
 1766 08c3 1A       		.byte	0x1a
 1767 08c4 AD000000 		.4byte	0xad
 1768 08c8 10010000 		.4byte	.LFB65
 1769 08cc 2C000000 		.4byte	.LFE65-.LFB65
 1770 08d0 01       		.uleb128 0x1
 1771 08d1 9C       		.byte	0x9c
 1772 08d2 10       		.uleb128 0x10
 1773 08d3 4E030000 		.4byte	.LASF149
 1774 08d7 0E       		.byte	0xe
 1775 08d8 B4000000 		.4byte	.LFB64
 1776 08dc 5C000000 		.4byte	.LFE64-.LFB64
 1777 08e0 01       		.uleb128 0x1
 1778 08e1 9C       		.byte	0x9c
 1779 08e2 10       		.uleb128 0x10
 1780 08e3 37040000 		.4byte	.LASF150
 1781 08e7 0A       		.byte	0xa
 1782 08e8 98000000 		.4byte	.LFB63
 1783 08ec 1C000000 		.4byte	.LFE63-.LFB63
 1784 08f0 01       		.uleb128 0x1
 1785 08f1 9C       		.byte	0x9c
 1786 08f2 1B       		.uleb128 0x1b
 1787 08f3 D2020000 		.4byte	.LASF157
 1788 08f7 02       		.byte	0x2
 1789 08f8 7806     		.2byte	0x678
 1790 08fa 1A       		.byte	0x1a
 1791 08fb AD000000 		.4byte	0xad
 1792 08ff 54000000 		.4byte	.LFB59
 1793 0903 44000000 		.4byte	.LFE59-.LFB59
 1794 0907 01       		.uleb128 0x1
 1795 0908 9C       		.byte	0x9c
 1796 0909 1D090000 		.4byte	0x91d
 1797 090d 11       		.uleb128 0x11
 1798 090e 0A030000 		.4byte	.LASF151
 1799 0912 7806     		.2byte	0x678
 1800 0914 32       		.byte	0x32
 1801 0915 AD000000 		.4byte	0xad
 1802 0919 02       		.uleb128 0x2
 1803 091a 91       		.byte	0x91
 1804 091b 74       		.sleb128 -12
 1805 091c 00       		.byte	0
 1806 091d 1C       		.uleb128 0x1c
 1807 091e 26010000 		.4byte	.LASF158
 1808 0922 02       		.byte	0x2
 1809 0923 F405     		.2byte	0x5f4
 1810 0925 16       		.byte	0x16
 1811 0926 00000000 		.4byte	.LFB54
 1812 092a 54000000 		.4byte	.LFE54-.LFB54
 1813 092e 01       		.uleb128 0x1
 1814 092f 9C       		.byte	0x9c
 1815 0930 11       		.uleb128 0x11
 1816 0931 92040000 		.4byte	.LASF152
 1817 0935 F405     		.2byte	0x5f4
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 64


 1818 0937 31       		.byte	0x31
 1819 0938 0A020000 		.4byte	0x20a
 1820 093c 02       		.uleb128 0x2
 1821 093d 91       		.byte	0x91
 1822 093e 77       		.sleb128 -9
 1823 093f 11       		.uleb128 0x11
 1824 0940 3D050000 		.4byte	.LASF153
 1825 0944 F405     		.2byte	0x5f4
 1826 0946 40       		.byte	0x40
 1827 0947 AD000000 		.4byte	0xad
 1828 094b 02       		.uleb128 0x2
 1829 094c 91       		.byte	0x91
 1830 094d 70       		.sleb128 -16
 1831 094e 00       		.byte	0
 1832 094f 00       		.byte	0
 1833              		.section	.debug_abbrev,"",%progbits
 1834              	.Ldebug_abbrev0:
 1835 0000 01       		.uleb128 0x1
 1836 0001 0D       		.uleb128 0xd
 1837 0002 00       		.byte	0
 1838 0003 03       		.uleb128 0x3
 1839 0004 0E       		.uleb128 0xe
 1840 0005 3A       		.uleb128 0x3a
 1841 0006 0B       		.uleb128 0xb
 1842 0007 3B       		.uleb128 0x3b
 1843 0008 05       		.uleb128 0x5
 1844 0009 39       		.uleb128 0x39
 1845 000a 0B       		.uleb128 0xb
 1846 000b 49       		.uleb128 0x49
 1847 000c 13       		.uleb128 0x13
 1848 000d 38       		.uleb128 0x38
 1849 000e 0B       		.uleb128 0xb
 1850 000f 00       		.byte	0
 1851 0010 00       		.byte	0
 1852 0011 02       		.uleb128 0x2
 1853 0012 28       		.uleb128 0x28
 1854 0013 00       		.byte	0
 1855 0014 03       		.uleb128 0x3
 1856 0015 0E       		.uleb128 0xe
 1857 0016 1C       		.uleb128 0x1c
 1858 0017 0B       		.uleb128 0xb
 1859 0018 00       		.byte	0
 1860 0019 00       		.byte	0
 1861 001a 03       		.uleb128 0x3
 1862 001b 0D       		.uleb128 0xd
 1863 001c 00       		.byte	0
 1864 001d 03       		.uleb128 0x3
 1865 001e 08       		.uleb128 0x8
 1866 001f 3A       		.uleb128 0x3a
 1867 0020 0B       		.uleb128 0xb
 1868 0021 3B       		.uleb128 0x3b
 1869 0022 05       		.uleb128 0x5
 1870 0023 39       		.uleb128 0x39
 1871 0024 0B       		.uleb128 0xb
 1872 0025 49       		.uleb128 0x49
 1873 0026 13       		.uleb128 0x13
 1874 0027 38       		.uleb128 0x38
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 65


 1875 0028 0B       		.uleb128 0xb
 1876 0029 00       		.byte	0
 1877 002a 00       		.byte	0
 1878 002b 04       		.uleb128 0x4
 1879 002c 01       		.uleb128 0x1
 1880 002d 01       		.byte	0x1
 1881 002e 49       		.uleb128 0x49
 1882 002f 13       		.uleb128 0x13
 1883 0030 01       		.uleb128 0x1
 1884 0031 13       		.uleb128 0x13
 1885 0032 00       		.byte	0
 1886 0033 00       		.byte	0
 1887 0034 05       		.uleb128 0x5
 1888 0035 21       		.uleb128 0x21
 1889 0036 00       		.byte	0
 1890 0037 49       		.uleb128 0x49
 1891 0038 13       		.uleb128 0x13
 1892 0039 2F       		.uleb128 0x2f
 1893 003a 0B       		.uleb128 0xb
 1894 003b 00       		.byte	0
 1895 003c 00       		.byte	0
 1896 003d 06       		.uleb128 0x6
 1897 003e 24       		.uleb128 0x24
 1898 003f 00       		.byte	0
 1899 0040 0B       		.uleb128 0xb
 1900 0041 0B       		.uleb128 0xb
 1901 0042 3E       		.uleb128 0x3e
 1902 0043 0B       		.uleb128 0xb
 1903 0044 03       		.uleb128 0x3
 1904 0045 0E       		.uleb128 0xe
 1905 0046 00       		.byte	0
 1906 0047 00       		.byte	0
 1907 0048 07       		.uleb128 0x7
 1908 0049 28       		.uleb128 0x28
 1909 004a 00       		.byte	0
 1910 004b 03       		.uleb128 0x3
 1911 004c 0E       		.uleb128 0xe
 1912 004d 1C       		.uleb128 0x1c
 1913 004e 0D       		.uleb128 0xd
 1914 004f 00       		.byte	0
 1915 0050 00       		.byte	0
 1916 0051 08       		.uleb128 0x8
 1917 0052 35       		.uleb128 0x35
 1918 0053 00       		.byte	0
 1919 0054 49       		.uleb128 0x49
 1920 0055 13       		.uleb128 0x13
 1921 0056 00       		.byte	0
 1922 0057 00       		.byte	0
 1923 0058 09       		.uleb128 0x9
 1924 0059 0D       		.uleb128 0xd
 1925 005a 00       		.byte	0
 1926 005b 03       		.uleb128 0x3
 1927 005c 0E       		.uleb128 0xe
 1928 005d 3A       		.uleb128 0x3a
 1929 005e 21       		.uleb128 0x21
 1930 005f 02       		.sleb128 2
 1931 0060 3B       		.uleb128 0x3b
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 66


 1932 0061 05       		.uleb128 0x5
 1933 0062 39       		.uleb128 0x39
 1934 0063 21       		.uleb128 0x21
 1935 0064 12       		.sleb128 18
 1936 0065 49       		.uleb128 0x49
 1937 0066 13       		.uleb128 0x13
 1938 0067 38       		.uleb128 0x38
 1939 0068 05       		.uleb128 0x5
 1940 0069 00       		.byte	0
 1941 006a 00       		.byte	0
 1942 006b 0A       		.uleb128 0xa
 1943 006c 16       		.uleb128 0x16
 1944 006d 00       		.byte	0
 1945 006e 03       		.uleb128 0x3
 1946 006f 0E       		.uleb128 0xe
 1947 0070 3A       		.uleb128 0x3a
 1948 0071 0B       		.uleb128 0xb
 1949 0072 3B       		.uleb128 0x3b
 1950 0073 0B       		.uleb128 0xb
 1951 0074 39       		.uleb128 0x39
 1952 0075 0B       		.uleb128 0xb
 1953 0076 49       		.uleb128 0x49
 1954 0077 13       		.uleb128 0x13
 1955 0078 00       		.byte	0
 1956 0079 00       		.byte	0
 1957 007a 0B       		.uleb128 0xb
 1958 007b 16       		.uleb128 0x16
 1959 007c 00       		.byte	0
 1960 007d 03       		.uleb128 0x3
 1961 007e 0E       		.uleb128 0xe
 1962 007f 3A       		.uleb128 0x3a
 1963 0080 0B       		.uleb128 0xb
 1964 0081 3B       		.uleb128 0x3b
 1965 0082 05       		.uleb128 0x5
 1966 0083 39       		.uleb128 0x39
 1967 0084 0B       		.uleb128 0xb
 1968 0085 49       		.uleb128 0x49
 1969 0086 13       		.uleb128 0x13
 1970 0087 00       		.byte	0
 1971 0088 00       		.byte	0
 1972 0089 0C       		.uleb128 0xc
 1973 008a 13       		.uleb128 0x13
 1974 008b 01       		.byte	0x1
 1975 008c 0B       		.uleb128 0xb
 1976 008d 0B       		.uleb128 0xb
 1977 008e 3A       		.uleb128 0x3a
 1978 008f 0B       		.uleb128 0xb
 1979 0090 3B       		.uleb128 0x3b
 1980 0091 05       		.uleb128 0x5
 1981 0092 39       		.uleb128 0x39
 1982 0093 21       		.uleb128 0x21
 1983 0094 09       		.sleb128 9
 1984 0095 01       		.uleb128 0x1
 1985 0096 13       		.uleb128 0x13
 1986 0097 00       		.byte	0
 1987 0098 00       		.byte	0
 1988 0099 0D       		.uleb128 0xd
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 67


 1989 009a 26       		.uleb128 0x26
 1990 009b 00       		.byte	0
 1991 009c 49       		.uleb128 0x49
 1992 009d 13       		.uleb128 0x13
 1993 009e 00       		.byte	0
 1994 009f 00       		.byte	0
 1995 00a0 0E       		.uleb128 0xe
 1996 00a1 34       		.uleb128 0x34
 1997 00a2 00       		.byte	0
 1998 00a3 03       		.uleb128 0x3
 1999 00a4 0E       		.uleb128 0xe
 2000 00a5 3A       		.uleb128 0x3a
 2001 00a6 21       		.uleb128 0x21
 2002 00a7 01       		.sleb128 1
 2003 00a8 3B       		.uleb128 0x3b
 2004 00a9 0B       		.uleb128 0xb
 2005 00aa 39       		.uleb128 0x39
 2006 00ab 0B       		.uleb128 0xb
 2007 00ac 49       		.uleb128 0x49
 2008 00ad 13       		.uleb128 0x13
 2009 00ae 3F       		.uleb128 0x3f
 2010 00af 19       		.uleb128 0x19
 2011 00b0 02       		.uleb128 0x2
 2012 00b1 18       		.uleb128 0x18
 2013 00b2 00       		.byte	0
 2014 00b3 00       		.byte	0
 2015 00b4 0F       		.uleb128 0xf
 2016 00b5 2E       		.uleb128 0x2e
 2017 00b6 00       		.byte	0
 2018 00b7 3F       		.uleb128 0x3f
 2019 00b8 19       		.uleb128 0x19
 2020 00b9 03       		.uleb128 0x3
 2021 00ba 0E       		.uleb128 0xe
 2022 00bb 3A       		.uleb128 0x3a
 2023 00bc 21       		.uleb128 0x21
 2024 00bd 01       		.sleb128 1
 2025 00be 3B       		.uleb128 0x3b
 2026 00bf 0B       		.uleb128 0xb
 2027 00c0 39       		.uleb128 0x39
 2028 00c1 21       		.uleb128 0x21
 2029 00c2 0A       		.sleb128 10
 2030 00c3 27       		.uleb128 0x27
 2031 00c4 19       		.uleb128 0x19
 2032 00c5 49       		.uleb128 0x49
 2033 00c6 13       		.uleb128 0x13
 2034 00c7 11       		.uleb128 0x11
 2035 00c8 01       		.uleb128 0x1
 2036 00c9 12       		.uleb128 0x12
 2037 00ca 06       		.uleb128 0x6
 2038 00cb 40       		.uleb128 0x40
 2039 00cc 18       		.uleb128 0x18
 2040 00cd 7A       		.uleb128 0x7a
 2041 00ce 19       		.uleb128 0x19
 2042 00cf 00       		.byte	0
 2043 00d0 00       		.byte	0
 2044 00d1 10       		.uleb128 0x10
 2045 00d2 2E       		.uleb128 0x2e
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 68


 2046 00d3 00       		.byte	0
 2047 00d4 3F       		.uleb128 0x3f
 2048 00d5 19       		.uleb128 0x19
 2049 00d6 03       		.uleb128 0x3
 2050 00d7 0E       		.uleb128 0xe
 2051 00d8 3A       		.uleb128 0x3a
 2052 00d9 21       		.uleb128 0x21
 2053 00da 01       		.sleb128 1
 2054 00db 3B       		.uleb128 0x3b
 2055 00dc 0B       		.uleb128 0xb
 2056 00dd 39       		.uleb128 0x39
 2057 00de 21       		.uleb128 0x21
 2058 00df 06       		.sleb128 6
 2059 00e0 27       		.uleb128 0x27
 2060 00e1 19       		.uleb128 0x19
 2061 00e2 11       		.uleb128 0x11
 2062 00e3 01       		.uleb128 0x1
 2063 00e4 12       		.uleb128 0x12
 2064 00e5 06       		.uleb128 0x6
 2065 00e6 40       		.uleb128 0x40
 2066 00e7 18       		.uleb128 0x18
 2067 00e8 7A       		.uleb128 0x7a
 2068 00e9 19       		.uleb128 0x19
 2069 00ea 00       		.byte	0
 2070 00eb 00       		.byte	0
 2071 00ec 11       		.uleb128 0x11
 2072 00ed 05       		.uleb128 0x5
 2073 00ee 00       		.byte	0
 2074 00ef 03       		.uleb128 0x3
 2075 00f0 0E       		.uleb128 0xe
 2076 00f1 3A       		.uleb128 0x3a
 2077 00f2 21       		.uleb128 0x21
 2078 00f3 02       		.sleb128 2
 2079 00f4 3B       		.uleb128 0x3b
 2080 00f5 05       		.uleb128 0x5
 2081 00f6 39       		.uleb128 0x39
 2082 00f7 0B       		.uleb128 0xb
 2083 00f8 49       		.uleb128 0x49
 2084 00f9 13       		.uleb128 0x13
 2085 00fa 02       		.uleb128 0x2
 2086 00fb 18       		.uleb128 0x18
 2087 00fc 00       		.byte	0
 2088 00fd 00       		.byte	0
 2089 00fe 12       		.uleb128 0x12
 2090 00ff 11       		.uleb128 0x11
 2091 0100 01       		.byte	0x1
 2092 0101 25       		.uleb128 0x25
 2093 0102 0E       		.uleb128 0xe
 2094 0103 13       		.uleb128 0x13
 2095 0104 0B       		.uleb128 0xb
 2096 0105 03       		.uleb128 0x3
 2097 0106 0E       		.uleb128 0xe
 2098 0107 1B       		.uleb128 0x1b
 2099 0108 0E       		.uleb128 0xe
 2100 0109 11       		.uleb128 0x11
 2101 010a 01       		.uleb128 0x1
 2102 010b 12       		.uleb128 0x12
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 69


 2103 010c 06       		.uleb128 0x6
 2104 010d 10       		.uleb128 0x10
 2105 010e 17       		.uleb128 0x17
 2106 010f 00       		.byte	0
 2107 0110 00       		.byte	0
 2108 0111 13       		.uleb128 0x13
 2109 0112 24       		.uleb128 0x24
 2110 0113 00       		.byte	0
 2111 0114 0B       		.uleb128 0xb
 2112 0115 0B       		.uleb128 0xb
 2113 0116 3E       		.uleb128 0x3e
 2114 0117 0B       		.uleb128 0xb
 2115 0118 03       		.uleb128 0x3
 2116 0119 08       		.uleb128 0x8
 2117 011a 00       		.byte	0
 2118 011b 00       		.byte	0
 2119 011c 14       		.uleb128 0x14
 2120 011d 04       		.uleb128 0x4
 2121 011e 01       		.byte	0x1
 2122 011f 3E       		.uleb128 0x3e
 2123 0120 0B       		.uleb128 0xb
 2124 0121 0B       		.uleb128 0xb
 2125 0122 0B       		.uleb128 0xb
 2126 0123 49       		.uleb128 0x49
 2127 0124 13       		.uleb128 0x13
 2128 0125 3A       		.uleb128 0x3a
 2129 0126 0B       		.uleb128 0xb
 2130 0127 3B       		.uleb128 0x3b
 2131 0128 0B       		.uleb128 0xb
 2132 0129 39       		.uleb128 0x39
 2133 012a 0B       		.uleb128 0xb
 2134 012b 01       		.uleb128 0x1
 2135 012c 13       		.uleb128 0x13
 2136 012d 00       		.byte	0
 2137 012e 00       		.byte	0
 2138 012f 15       		.uleb128 0x15
 2139 0130 13       		.uleb128 0x13
 2140 0131 01       		.byte	0x1
 2141 0132 0B       		.uleb128 0xb
 2142 0133 05       		.uleb128 0x5
 2143 0134 3A       		.uleb128 0x3a
 2144 0135 0B       		.uleb128 0xb
 2145 0136 3B       		.uleb128 0x3b
 2146 0137 05       		.uleb128 0x5
 2147 0138 39       		.uleb128 0x39
 2148 0139 0B       		.uleb128 0xb
 2149 013a 01       		.uleb128 0x1
 2150 013b 13       		.uleb128 0x13
 2151 013c 00       		.byte	0
 2152 013d 00       		.byte	0
 2153 013e 16       		.uleb128 0x16
 2154 013f 0D       		.uleb128 0xd
 2155 0140 00       		.byte	0
 2156 0141 03       		.uleb128 0x3
 2157 0142 08       		.uleb128 0x8
 2158 0143 3A       		.uleb128 0x3a
 2159 0144 0B       		.uleb128 0xb
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 70


 2160 0145 3B       		.uleb128 0x3b
 2161 0146 05       		.uleb128 0x5
 2162 0147 39       		.uleb128 0x39
 2163 0148 0B       		.uleb128 0xb
 2164 0149 49       		.uleb128 0x49
 2165 014a 13       		.uleb128 0x13
 2166 014b 38       		.uleb128 0x38
 2167 014c 05       		.uleb128 0x5
 2168 014d 00       		.byte	0
 2169 014e 00       		.byte	0
 2170 014f 17       		.uleb128 0x17
 2171 0150 21       		.uleb128 0x21
 2172 0151 00       		.byte	0
 2173 0152 49       		.uleb128 0x49
 2174 0153 13       		.uleb128 0x13
 2175 0154 2F       		.uleb128 0x2f
 2176 0155 05       		.uleb128 0x5
 2177 0156 00       		.byte	0
 2178 0157 00       		.byte	0
 2179 0158 18       		.uleb128 0x18
 2180 0159 34       		.uleb128 0x34
 2181 015a 00       		.byte	0
 2182 015b 03       		.uleb128 0x3
 2183 015c 0E       		.uleb128 0xe
 2184 015d 3A       		.uleb128 0x3a
 2185 015e 0B       		.uleb128 0xb
 2186 015f 3B       		.uleb128 0x3b
 2187 0160 0B       		.uleb128 0xb
 2188 0161 39       		.uleb128 0x39
 2189 0162 0B       		.uleb128 0xb
 2190 0163 49       		.uleb128 0x49
 2191 0164 13       		.uleb128 0x13
 2192 0165 3F       		.uleb128 0x3f
 2193 0166 19       		.uleb128 0x19
 2194 0167 3C       		.uleb128 0x3c
 2195 0168 19       		.uleb128 0x19
 2196 0169 00       		.byte	0
 2197 016a 00       		.byte	0
 2198 016b 19       		.uleb128 0x19
 2199 016c 2E       		.uleb128 0x2e
 2200 016d 00       		.byte	0
 2201 016e 3F       		.uleb128 0x3f
 2202 016f 19       		.uleb128 0x19
 2203 0170 03       		.uleb128 0x3
 2204 0171 0E       		.uleb128 0xe
 2205 0172 3A       		.uleb128 0x3a
 2206 0173 0B       		.uleb128 0xb
 2207 0174 3B       		.uleb128 0x3b
 2208 0175 0B       		.uleb128 0xb
 2209 0176 39       		.uleb128 0x39
 2210 0177 0B       		.uleb128 0xb
 2211 0178 11       		.uleb128 0x11
 2212 0179 01       		.uleb128 0x1
 2213 017a 12       		.uleb128 0x12
 2214 017b 06       		.uleb128 0x6
 2215 017c 40       		.uleb128 0x40
 2216 017d 18       		.uleb128 0x18
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 71


 2217 017e 7A       		.uleb128 0x7a
 2218 017f 19       		.uleb128 0x19
 2219 0180 00       		.byte	0
 2220 0181 00       		.byte	0
 2221 0182 1A       		.uleb128 0x1a
 2222 0183 2E       		.uleb128 0x2e
 2223 0184 00       		.byte	0
 2224 0185 3F       		.uleb128 0x3f
 2225 0186 19       		.uleb128 0x19
 2226 0187 03       		.uleb128 0x3
 2227 0188 0E       		.uleb128 0xe
 2228 0189 3A       		.uleb128 0x3a
 2229 018a 0B       		.uleb128 0xb
 2230 018b 3B       		.uleb128 0x3b
 2231 018c 0B       		.uleb128 0xb
 2232 018d 39       		.uleb128 0x39
 2233 018e 0B       		.uleb128 0xb
 2234 018f 11       		.uleb128 0x11
 2235 0190 01       		.uleb128 0x1
 2236 0191 12       		.uleb128 0x12
 2237 0192 06       		.uleb128 0x6
 2238 0193 40       		.uleb128 0x40
 2239 0194 18       		.uleb128 0x18
 2240 0195 7C       		.uleb128 0x7c
 2241 0196 19       		.uleb128 0x19
 2242 0197 00       		.byte	0
 2243 0198 00       		.byte	0
 2244 0199 1B       		.uleb128 0x1b
 2245 019a 2E       		.uleb128 0x2e
 2246 019b 01       		.byte	0x1
 2247 019c 03       		.uleb128 0x3
 2248 019d 0E       		.uleb128 0xe
 2249 019e 3A       		.uleb128 0x3a
 2250 019f 0B       		.uleb128 0xb
 2251 01a0 3B       		.uleb128 0x3b
 2252 01a1 05       		.uleb128 0x5
 2253 01a2 39       		.uleb128 0x39
 2254 01a3 0B       		.uleb128 0xb
 2255 01a4 27       		.uleb128 0x27
 2256 01a5 19       		.uleb128 0x19
 2257 01a6 49       		.uleb128 0x49
 2258 01a7 13       		.uleb128 0x13
 2259 01a8 11       		.uleb128 0x11
 2260 01a9 01       		.uleb128 0x1
 2261 01aa 12       		.uleb128 0x12
 2262 01ab 06       		.uleb128 0x6
 2263 01ac 40       		.uleb128 0x40
 2264 01ad 18       		.uleb128 0x18
 2265 01ae 7C       		.uleb128 0x7c
 2266 01af 19       		.uleb128 0x19
 2267 01b0 01       		.uleb128 0x1
 2268 01b1 13       		.uleb128 0x13
 2269 01b2 00       		.byte	0
 2270 01b3 00       		.byte	0
 2271 01b4 1C       		.uleb128 0x1c
 2272 01b5 2E       		.uleb128 0x2e
 2273 01b6 01       		.byte	0x1
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 72


 2274 01b7 03       		.uleb128 0x3
 2275 01b8 0E       		.uleb128 0xe
 2276 01b9 3A       		.uleb128 0x3a
 2277 01ba 0B       		.uleb128 0xb
 2278 01bb 3B       		.uleb128 0x3b
 2279 01bc 05       		.uleb128 0x5
 2280 01bd 39       		.uleb128 0x39
 2281 01be 0B       		.uleb128 0xb
 2282 01bf 27       		.uleb128 0x27
 2283 01c0 19       		.uleb128 0x19
 2284 01c1 11       		.uleb128 0x11
 2285 01c2 01       		.uleb128 0x1
 2286 01c3 12       		.uleb128 0x12
 2287 01c4 06       		.uleb128 0x6
 2288 01c5 40       		.uleb128 0x40
 2289 01c6 18       		.uleb128 0x18
 2290 01c7 7A       		.uleb128 0x7a
 2291 01c8 19       		.uleb128 0x19
 2292 01c9 00       		.byte	0
 2293 01ca 00       		.byte	0
 2294 01cb 00       		.byte	0
 2295              		.section	.debug_aranges,"",%progbits
 2296 0000 1C000000 		.4byte	0x1c
 2297 0004 0200     		.2byte	0x2
 2298 0006 00000000 		.4byte	.Ldebug_info0
 2299 000a 04       		.byte	0x4
 2300 000b 00       		.byte	0
 2301 000c 0000     		.2byte	0
 2302 000e 0000     		.2byte	0
 2303 0010 00000000 		.4byte	.Ltext0
 2304 0014 98020000 		.4byte	.Letext0-.Ltext0
 2305 0018 00000000 		.4byte	0
 2306 001c 00000000 		.4byte	0
 2307              		.section	.debug_line,"",%progbits
 2308              	.Ldebug_line0:
 2309 0000 CC020000 		.section	.debug_str,"MS",%progbits,1
 2309      03005701 
 2309      00000201 
 2309      FB0E0D00 
 2309      01010101 
 2310              	.LASF44:
 2311 0000 5553425F 		.ascii	"USB_LP_CAN1_RX0_IRQn\000"
 2311      4C505F43 
 2311      414E315F 
 2311      5258305F 
 2311      4952516E 
 2312              	.LASF128:
 2313 0015 52455345 		.ascii	"RESERVED\000"
 2313      52564544 
 2313      00
 2314              	.LASF155:
 2315 001e 7372632F 		.ascii	"src/stm32f103_setup.c\000"
 2315      73746D33 
 2315      32663130 
 2315      335F7365 
 2315      7475702E 
 2316              	.LASF136:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 73


 2317 0034 41504231 		.ascii	"APB1ENR\000"
 2317      454E5200 
 2318              	.LASF94:
 2319 003c 43504143 		.ascii	"CPACR\000"
 2319      5200
 2320              	.LASF107:
 2321 0042 434F4D50 		.ascii	"COMP0\000"
 2321      3000
 2322              	.LASF110:
 2323 0048 434F4D50 		.ascii	"COMP1\000"
 2323      3100
 2324              	.LASF114:
 2325 004e 434F4D50 		.ascii	"COMP2\000"
 2325      3200
 2326              	.LASF117:
 2327 0054 434F4D50 		.ascii	"COMP3\000"
 2327      3300
 2328              	.LASF154:
 2329 005a 474E5520 		.ascii	"GNU C99 13.2.1 20231009 -mthumb -mcpu=cortex-m3 -mf"
 2329      43393920 
 2329      31332E32 
 2329      2E312032 
 2329      30323331 
 2330 008d 6C6F6174 		.ascii	"loat-abi=soft -march=armv7-m -g -std=gnu99 -fno-com"
 2330      2D616269 
 2330      3D736F66 
 2330      74202D6D 
 2330      61726368 
 2331 00c0 6D6F6E00 		.ascii	"mon\000"
 2332              	.LASF132:
 2333 00c4 41504232 		.ascii	"APB2RSTR\000"
 2333      52535452 
 2333      00
 2334              	.LASF46:
 2335 00cd 43414E31 		.ascii	"CAN1_SCE_IRQn\000"
 2335      5F534345 
 2335      5F495251 
 2335      6E00
 2336              	.LASF41:
 2337 00db 444D4131 		.ascii	"DMA1_Channel7_IRQn\000"
 2337      5F436861 
 2337      6E6E656C 
 2337      375F4952 
 2337      516E00
 2338              	.LASF58:
 2339 00ee 49324332 		.ascii	"I2C2_ER_IRQn\000"
 2339      5F45525F 
 2339      4952516E 
 2339      00
 2340              	.LASF143:
 2341 00fb 6D696C6C 		.ascii	"millis\000"
 2341      697300
 2342              	.LASF54:
 2343 0102 54494D34 		.ascii	"TIM4_IRQn\000"
 2343      5F495251 
 2343      6E00
 2344              	.LASF36:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 74


 2345 010c 444D4131 		.ascii	"DMA1_Channel2_IRQn\000"
 2345      5F436861 
 2345      6E6E656C 
 2345      325F4952 
 2345      516E00
 2346              	.LASF101:
 2347 011f 43504943 		.ascii	"CPICNT\000"
 2347      4E5400
 2348              	.LASF158:
 2349 0126 4E564943 		.ascii	"NVIC_SetPriority\000"
 2349      5F536574 
 2349      5072696F 
 2349      72697479 
 2349      00
 2350              	.LASF11:
 2351 0137 756E7369 		.ascii	"unsigned int\000"
 2351      676E6564 
 2351      20696E74 
 2351      00
 2352              	.LASF97:
 2353 0144 4C4F4144 		.ascii	"LOAD\000"
 2353      00
 2354              	.LASF124:
 2355 0149 44454D43 		.ascii	"DEMCR\000"
 2355      5200
 2356              	.LASF88:
 2357 014f 44465352 		.ascii	"DFSR\000"
 2357      00
 2358              	.LASF137:
 2359 0154 42444352 		.ascii	"BDCR\000"
 2359      00
 2360              	.LASF5:
 2361 0159 5F5F696E 		.ascii	"__int32_t\000"
 2361      7433325F 
 2361      7400
 2362              	.LASF28:
 2363 0163 464C4153 		.ascii	"FLASH_IRQn\000"
 2363      485F4952 
 2363      516E00
 2364              	.LASF98:
 2365 016e 43414C49 		.ascii	"CALIB\000"
 2365      4200
 2366              	.LASF30:
 2367 0174 45585449 		.ascii	"EXTI0_IRQn\000"
 2367      305F4952 
 2367      516E00
 2368              	.LASF64:
 2369 017f 45585449 		.ascii	"EXTI15_10_IRQn\000"
 2369      31355F31 
 2369      305F4952 
 2369      516E00
 2370              	.LASF126:
 2371 018e 4B455952 		.ascii	"KEYR\000"
 2371      00
 2372              	.LASF22:
 2373 0193 50656E64 		.ascii	"PendSV_IRQn\000"
 2373      53565F49 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 75


 2373      52516E00 
 2374              	.LASF29:
 2375 019f 5243435F 		.ascii	"RCC_IRQn\000"
 2375      4952516E 
 2375      00
 2376              	.LASF146:
 2377 01a8 73657475 		.ascii	"setup_clock_speed\000"
 2377      705F636C 
 2377      6F636B5F 
 2377      73706565 
 2377      6400
 2378              	.LASF17:
 2379 01ba 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 2379      72794D61 
 2379      6E616765 
 2379      6D656E74 
 2379      5F495251 
 2380              	.LASF14:
 2381 01d0 75696E74 		.ascii	"uint32_t\000"
 2381      33325F74 
 2381      00
 2382              	.LASF92:
 2383 01d9 4D4D4652 		.ascii	"MMFR\000"
 2383      00
 2384              	.LASF68:
 2385 01de 49534552 		.ascii	"ISER\000"
 2385      00
 2386              	.LASF48:
 2387 01e3 54494D31 		.ascii	"TIM1_BRK_IRQn\000"
 2387      5F42524B 
 2387      5F495251 
 2387      6E00
 2388              	.LASF71:
 2389 01f1 52534552 		.ascii	"RSERVED1\000"
 2389      56454431 
 2389      00
 2390              	.LASF59:
 2391 01fa 53504931 		.ascii	"SPI1_IRQn\000"
 2391      5F495251 
 2391      6E00
 2392              	.LASF38:
 2393 0204 444D4131 		.ascii	"DMA1_Channel4_IRQn\000"
 2393      5F436861 
 2393      6E6E656C 
 2393      345F4952 
 2393      516E00
 2394              	.LASF10:
 2395 0217 6C6F6E67 		.ascii	"long long unsigned int\000"
 2395      206C6F6E 
 2395      6720756E 
 2395      7369676E 
 2395      65642069 
 2396              	.LASF127:
 2397 022e 4F50544B 		.ascii	"OPTKEYR\000"
 2397      45595200 
 2398              	.LASF142:
 2399 0236 6D61785F 		.ascii	"max_cpu_load\000"
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 76


 2399      6370755F 
 2399      6C6F6164 
 2399      00
 2400              	.LASF45:
 2401 0243 43414E31 		.ascii	"CAN1_RX1_IRQn\000"
 2401      5F525831 
 2401      5F495251 
 2401      6E00
 2402              	.LASF43:
 2403 0251 5553425F 		.ascii	"USB_HP_CAN1_TX_IRQn\000"
 2403      48505F43 
 2403      414E315F 
 2403      54585F49 
 2403      52516E00 
 2404              	.LASF67:
 2405 0265 4952516E 		.ascii	"IRQn_Type\000"
 2405      5F547970 
 2405      6500
 2406              	.LASF156:
 2407 026f 2F557365 		.ascii	"/Users/cw/Projekte_local/maker/stm32/STM32F103_ENCO"
 2407      72732F63 
 2407      772F5072 
 2407      6F6A656B 
 2407      74655F6C 
 2408 02a2 44455200 		.ascii	"DER\000"
 2409              	.LASF62:
 2410 02a6 55534152 		.ascii	"USART2_IRQn\000"
 2410      54325F49 
 2410      52516E00 
 2411              	.LASF130:
 2412 02b2 464C4153 		.ascii	"FLASH_TypeDef\000"
 2412      485F5479 
 2412      70654465 
 2412      6600
 2413              	.LASF81:
 2414 02c0 43505549 		.ascii	"CPUID\000"
 2414      4400
 2415              	.LASF138:
 2416 02c6 5243435F 		.ascii	"RCC_TypeDef\000"
 2416      54797065 
 2416      44656600 
 2417              	.LASF157:
 2418 02d2 53797354 		.ascii	"SysTick_Config\000"
 2418      69636B5F 
 2418      436F6E66 
 2418      696700
 2419              	.LASF91:
 2420 02e1 41465352 		.ascii	"AFSR\000"
 2420      00
 2421              	.LASF120:
 2422 02e6 4457545F 		.ascii	"DWT_Type\000"
 2422      54797065 
 2422      00
 2423              	.LASF104:
 2424 02ef 4C535543 		.ascii	"LSUCNT\000"
 2424      4E5400
 2425              	.LASF141:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 77


 2426 02f6 6370755F 		.ascii	"cpu_load\000"
 2426      6C6F6164 
 2426      00
 2427              	.LASF32:
 2428 02ff 45585449 		.ascii	"EXTI2_IRQn\000"
 2428      325F4952 
 2428      516E00
 2429              	.LASF151:
 2430 030a 7469636B 		.ascii	"ticks\000"
 2430      7300
 2431              	.LASF133:
 2432 0310 41504231 		.ascii	"APB1RSTR\000"
 2432      52535452 
 2432      00
 2433              	.LASF57:
 2434 0319 49324332 		.ascii	"I2C2_EV_IRQn\000"
 2434      5F45565F 
 2434      4952516E 
 2434      00
 2435              	.LASF87:
 2436 0326 48465352 		.ascii	"HFSR\000"
 2436      00
 2437              	.LASF40:
 2438 032b 444D4131 		.ascii	"DMA1_Channel6_IRQn\000"
 2438      5F436861 
 2438      6E6E656C 
 2438      365F4952 
 2438      516E00
 2439              	.LASF84:
 2440 033e 41495243 		.ascii	"AIRCR\000"
 2440      5200
 2441              	.LASF53:
 2442 0344 54494D33 		.ascii	"TIM3_IRQn\000"
 2442      5F495251 
 2442      6E00
 2443              	.LASF149:
 2444 034e 62757379 		.ascii	"busy_tick\000"
 2444      5F746963 
 2444      6B00
 2445              	.LASF35:
 2446 0358 444D4131 		.ascii	"DMA1_Channel1_IRQn\000"
 2446      5F436861 
 2446      6E6E656C 
 2446      315F4952 
 2446      516E00
 2447              	.LASF134:
 2448 036b 41484245 		.ascii	"AHBENR\000"
 2448      4E5200
 2449              	.LASF109:
 2450 0372 46554E43 		.ascii	"FUNCTION0\000"
 2450      54494F4E 
 2450      3000
 2451              	.LASF112:
 2452 037c 46554E43 		.ascii	"FUNCTION1\000"
 2452      54494F4E 
 2452      3100
 2453              	.LASF119:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 78


 2454 0386 46554E43 		.ascii	"FUNCTION3\000"
 2454      54494F4E 
 2454      3300
 2455              	.LASF12:
 2456 0390 75696E74 		.ascii	"uint8_t\000"
 2456      385F7400 
 2457              	.LASF31:
 2458 0398 45585449 		.ascii	"EXTI1_IRQn\000"
 2458      315F4952 
 2458      516E00
 2459              	.LASF100:
 2460 03a3 43594343 		.ascii	"CYCCNT\000"
 2460      4E5400
 2461              	.LASF66:
 2462 03aa 55534257 		.ascii	"USBWakeUp_IRQn\000"
 2462      616B6555 
 2462      705F4952 
 2462      516E00
 2463              	.LASF9:
 2464 03b9 6C6F6E67 		.ascii	"long long int\000"
 2464      206C6F6E 
 2464      6720696E 
 2464      7400
 2465              	.LASF24:
 2466 03c7 57574447 		.ascii	"WWDG_IRQn\000"
 2466      5F495251 
 2466      6E00
 2467              	.LASF85:
 2468 03d1 53484353 		.ascii	"SHCSR\000"
 2468      5200
 2469              	.LASF108:
 2470 03d7 4D41534B 		.ascii	"MASK0\000"
 2470      3000
 2471              	.LASF111:
 2472 03dd 4D41534B 		.ascii	"MASK1\000"
 2472      3100
 2473              	.LASF115:
 2474 03e3 4D41534B 		.ascii	"MASK2\000"
 2474      3200
 2475              	.LASF86:
 2476 03e9 43465352 		.ascii	"CFSR\000"
 2476      00
 2477              	.LASF140:
 2478 03ee 7469636B 		.ascii	"tick_count\000"
 2478      5F636F75 
 2478      6E7400
 2479              	.LASF18:
 2480 03f9 42757346 		.ascii	"BusFault_IRQn\000"
 2480      61756C74 
 2480      5F495251 
 2480      6E00
 2481              	.LASF34:
 2482 0407 45585449 		.ascii	"EXTI4_IRQn\000"
 2482      345F4952 
 2482      516E00
 2483              	.LASF25:
 2484 0412 5056445F 		.ascii	"PVD_IRQn\000"
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 79


 2484      4952516E 
 2484      00
 2485              	.LASF125:
 2486 041b 436F7265 		.ascii	"CoreDebug_Type\000"
 2486      44656275 
 2486      675F5479 
 2486      706500
 2487              	.LASF74:
 2488 042a 49435052 		.ascii	"ICPR\000"
 2488      00
 2489              	.LASF135:
 2490 042f 41504232 		.ascii	"APB2ENR\000"
 2490      454E5200 
 2491              	.LASF150:
 2492 0437 53797354 		.ascii	"SysTick_Handler\000"
 2492      69636B5F 
 2492      48616E64 
 2492      6C657200 
 2493              	.LASF37:
 2494 0447 444D4131 		.ascii	"DMA1_Channel3_IRQn\000"
 2494      5F436861 
 2494      6E6E656C 
 2494      335F4952 
 2494      516E00
 2495              	.LASF55:
 2496 045a 49324331 		.ascii	"I2C1_EV_IRQn\000"
 2496      5F45565F 
 2496      4952516E 
 2496      00
 2497              	.LASF129:
 2498 0467 57525052 		.ascii	"WRPR\000"
 2498      00
 2499              	.LASF99:
 2500 046c 53797354 		.ascii	"SysTick_Type\000"
 2500      69636B5F 
 2500      54797065 
 2500      00
 2501              	.LASF103:
 2502 0479 534C4545 		.ascii	"SLEEPCNT\000"
 2502      50434E54 
 2502      00
 2503              	.LASF139:
 2504 0482 53797374 		.ascii	"SystemCoreClock\000"
 2504      656D436F 
 2504      7265436C 
 2504      6F636B00 
 2505              	.LASF152:
 2506 0492 4952516E 		.ascii	"IRQn\000"
 2506      00
 2507              	.LASF49:
 2508 0497 54494D31 		.ascii	"TIM1_UP_IRQn\000"
 2508      5F55505F 
 2508      4952516E 
 2508      00
 2509              	.LASF144:
 2510 04a4 6D696372 		.ascii	"micros\000"
 2510      6F7300
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 80


 2511              	.LASF79:
 2512 04ab 53544952 		.ascii	"STIR\000"
 2512      00
 2513              	.LASF89:
 2514 04b0 4D4D4641 		.ascii	"MMFAR\000"
 2514      5200
 2515              	.LASF65:
 2516 04b6 5254435F 		.ascii	"RTC_Alarm_IRQn\000"
 2516      416C6172 
 2516      6D5F4952 
 2516      516E00
 2517              	.LASF27:
 2518 04c5 5254435F 		.ascii	"RTC_IRQn\000"
 2518      4952516E 
 2518      00
 2519              	.LASF69:
 2520 04ce 52455345 		.ascii	"RESERVED0\000"
 2520      52564544 
 2520      3000
 2521              	.LASF113:
 2522 04d8 52455345 		.ascii	"RESERVED1\000"
 2522      52564544 
 2522      3100
 2523              	.LASF73:
 2524 04e2 52455345 		.ascii	"RESERVED2\000"
 2524      52564544 
 2524      3200
 2525              	.LASF75:
 2526 04ec 52455345 		.ascii	"RESERVED3\000"
 2526      52564544 
 2526      3300
 2527              	.LASF77:
 2528 04f6 52455345 		.ascii	"RESERVED4\000"
 2528      52564544 
 2528      3400
 2529              	.LASF78:
 2530 0500 52455345 		.ascii	"RESERVED5\000"
 2530      52564544 
 2530      3500
 2531              	.LASF2:
 2532 050a 73686F72 		.ascii	"short int\000"
 2532      7420696E 
 2532      7400
 2533              	.LASF6:
 2534 0514 6C6F6E67 		.ascii	"long int\000"
 2534      20696E74 
 2534      00
 2535              	.LASF61:
 2536 051d 55534152 		.ascii	"USART1_IRQn\000"
 2536      54315F49 
 2536      52516E00 
 2537              	.LASF15:
 2538 0529 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 2538      61736B61 
 2538      626C6549 
 2538      6E745F49 
 2538      52516E00 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 81


 2539              	.LASF153:
 2540 053d 7072696F 		.ascii	"priority\000"
 2540      72697479 
 2540      00
 2541              	.LASF51:
 2542 0546 54494D31 		.ascii	"TIM1_CC_IRQn\000"
 2542      5F43435F 
 2542      4952516E 
 2542      00
 2543              	.LASF131:
 2544 0553 43464752 		.ascii	"CFGR\000"
 2544      00
 2545              	.LASF4:
 2546 0558 5F5F7569 		.ascii	"__uint8_t\000"
 2546      6E74385F 
 2546      7400
 2547              	.LASF80:
 2548 0562 4E564943 		.ascii	"NVIC_Type\000"
 2548      5F547970 
 2548      6500
 2549              	.LASF95:
 2550 056c 5343425F 		.ascii	"SCB_Type\000"
 2550      54797065 
 2550      00
 2551              	.LASF90:
 2552 0575 42464152 		.ascii	"BFAR\000"
 2552      00
 2553              	.LASF50:
 2554 057a 54494D31 		.ascii	"TIM1_TRG_COM_IRQn\000"
 2554      5F545247 
 2554      5F434F4D 
 2554      5F495251 
 2554      6E00
 2555              	.LASF83:
 2556 058c 56544F52 		.ascii	"VTOR\000"
 2556      00
 2557              	.LASF56:
 2558 0591 49324331 		.ascii	"I2C1_ER_IRQn\000"
 2558      5F45525F 
 2558      4952516E 
 2558      00
 2559              	.LASF145:
 2560 059e 696E6974 		.ascii	"init_rtc\000"
 2560      5F727463 
 2560      00
 2561              	.LASF23:
 2562 05a7 53797354 		.ascii	"SysTick_IRQn\000"
 2562      69636B5F 
 2562      4952516E 
 2562      00
 2563              	.LASF82:
 2564 05b4 49435352 		.ascii	"ICSR\000"
 2564      00
 2565              	.LASF8:
 2566 05b9 6C6F6E67 		.ascii	"long unsigned int\000"
 2566      20756E73 
 2566      69676E65 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 82


 2566      6420696E 
 2566      7400
 2567              	.LASF52:
 2568 05cb 54494D32 		.ascii	"TIM2_IRQn\000"
 2568      5F495251 
 2568      6E00
 2569              	.LASF13:
 2570 05d5 696E7433 		.ascii	"int32_t\000"
 2570      325F7400 
 2571              	.LASF148:
 2572 05dd 656E6162 		.ascii	"enableDWT\000"
 2572      6C654457 
 2572      5400
 2573              	.LASF106:
 2574 05e7 50435352 		.ascii	"PCSR\000"
 2574      00
 2575              	.LASF21:
 2576 05ec 44656275 		.ascii	"DebugMonitor_IRQn\000"
 2576      674D6F6E 
 2576      69746F72 
 2576      5F495251 
 2576      6E00
 2577              	.LASF19:
 2578 05fe 55736167 		.ascii	"UsageFault_IRQn\000"
 2578      65466175 
 2578      6C745F49 
 2578      52516E00 
 2579              	.LASF1:
 2580 060e 756E7369 		.ascii	"unsigned char\000"
 2580      676E6564 
 2580      20636861 
 2580      7200
 2581              	.LASF7:
 2582 061c 5F5F7569 		.ascii	"__uint32_t\000"
 2582      6E743332 
 2582      5F7400
 2583              	.LASF47:
 2584 0627 45585449 		.ascii	"EXTI9_5_IRQn\000"
 2584      395F355F 
 2584      4952516E 
 2584      00
 2585              	.LASF20:
 2586 0634 53564361 		.ascii	"SVCall_IRQn\000"
 2586      6C6C5F49 
 2586      52516E00 
 2587              	.LASF118:
 2588 0640 4D41534B 		.ascii	"MASK3\000"
 2588      3300
 2589              	.LASF147:
 2590 0646 6D656173 		.ascii	"measure_cpu_usage\000"
 2590      7572655F 
 2590      6370755F 
 2590      75736167 
 2590      6500
 2591              	.LASF70:
 2592 0658 49434552 		.ascii	"ICER\000"
 2592      00
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 83


 2593              	.LASF60:
 2594 065d 53504932 		.ascii	"SPI2_IRQn\000"
 2594      5F495251 
 2594      6E00
 2595              	.LASF76:
 2596 0667 49414252 		.ascii	"IABR\000"
 2596      00
 2597              	.LASF39:
 2598 066c 444D4131 		.ascii	"DMA1_Channel5_IRQn\000"
 2598      5F436861 
 2598      6E6E656C 
 2598      355F4952 
 2598      516E00
 2599              	.LASF105:
 2600 067f 464F4C44 		.ascii	"FOLDCNT\000"
 2600      434E5400 
 2601              	.LASF121:
 2602 0687 44484353 		.ascii	"DHCSR\000"
 2602      5200
 2603              	.LASF0:
 2604 068d 7369676E 		.ascii	"signed char\000"
 2604      65642063 
 2604      68617200 
 2605              	.LASF3:
 2606 0699 73686F72 		.ascii	"short unsigned int\000"
 2606      7420756E 
 2606      7369676E 
 2606      65642069 
 2606      6E7400
 2607              	.LASF33:
 2608 06ac 45585449 		.ascii	"EXTI3_IRQn\000"
 2608      335F4952 
 2608      516E00
 2609              	.LASF16:
 2610 06b7 48617264 		.ascii	"HardFault_IRQn\000"
 2610      4661756C 
 2610      745F4952 
 2610      516E00
 2611              	.LASF72:
 2612 06c6 49535052 		.ascii	"ISPR\000"
 2612      00
 2613              	.LASF116:
 2614 06cb 46554E43 		.ascii	"FUNCTION2\000"
 2614      54494F4E 
 2614      3200
 2615              	.LASF42:
 2616 06d5 41444331 		.ascii	"ADC1_2_IRQn\000"
 2616      5F325F49 
 2616      52516E00 
 2617              	.LASF93:
 2618 06e1 49534152 		.ascii	"ISAR\000"
 2618      00
 2619              	.LASF63:
 2620 06e6 55534152 		.ascii	"USART3_IRQn\000"
 2620      54335F49 
 2620      52516E00 
 2621              	.LASF122:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 84


 2622 06f2 44435253 		.ascii	"DCRSR\000"
 2622      5200
 2623              	.LASF123:
 2624 06f8 44435244 		.ascii	"DCRDR\000"
 2624      5200
 2625              	.LASF26:
 2626 06fe 54414D50 		.ascii	"TAMPER_IRQn\000"
 2626      45525F49 
 2626      52516E00 
 2627              	.LASF102:
 2628 070a 45584343 		.ascii	"EXCCNT\000"
 2628      4E5400
 2629              	.LASF96:
 2630 0711 4354524C 		.ascii	"CTRL\000"
 2630      00
 2631              		.ident	"GCC: (Arm GNU Toolchain 13.2.rel1 (Build arm-13.7)) 13.2.1 20231009"
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s 			page 85


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f103_setup.c
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:18     .text:00000000 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:23     .text:00000000 NVIC_SetPriority
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:92     .text:0000004c $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:97     .text:00000054 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:102    .text:00000054 SysTick_Config
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:162    .text:00000094 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:171    .bss:00000000 tick_count
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:168    .bss:00000000 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:177    .bss:00000004 cpu_load
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:183    .bss:00000008 max_cpu_load
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:186    .text:00000098 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:192    .text:00000098 SysTick_Handler
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:222    .text:000000b0 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:226    .text:000000b4 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:232    .text:000000b4 busy_tick
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:290    .text:00000104 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:296    .text:00000110 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:302    .text:00000110 measure_cpu_usage
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:343    .text:00000134 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:348    .text:0000013c $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:354    .text:0000013c setup_clock_speed
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:474    .text:000001e4 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:481    .text:000001f4 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:487    .text:000001f4 init_rtc
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:517    .text:00000200 enableDWT
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:569    .text:00000238 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:574    .text:00000240 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:580    .text:00000240 micros
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:615    .text:00000260 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:621    .text:0000026c $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:627    .text:0000026c millis
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//ccOLwxk5.s:662    .text:0000028c $d

UNDEFINED SYMBOLS
SystemCoreClock
