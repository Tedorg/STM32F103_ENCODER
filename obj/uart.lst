ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "src/uart.c"
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_EnableIRQ, %function
  23              	NVIC_EnableIRQ:
  24              	.LFB48:
  25              		.file 2 "./CMSIS/include/core_cm3.h"
   1:./CMSIS/include/core_cm3.h **** /**************************************************************************//**
   2:./CMSIS/include/core_cm3.h ****  * @file     core_cm3.h
   3:./CMSIS/include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./CMSIS/include/core_cm3.h ****  * @version  V4.30
   5:./CMSIS/include/core_cm3.h ****  * @date     20. October 2015
   6:./CMSIS/include/core_cm3.h ****  ******************************************************************************/
   7:./CMSIS/include/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./CMSIS/include/core_cm3.h **** 
   9:./CMSIS/include/core_cm3.h ****    All rights reserved.
  10:./CMSIS/include/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:./CMSIS/include/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:./CMSIS/include/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:./CMSIS/include/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:./CMSIS/include/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./CMSIS/include/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:./CMSIS/include/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:./CMSIS/include/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./CMSIS/include/core_cm3.h ****      to endorse or promote products derived from this software without
  19:./CMSIS/include/core_cm3.h ****      specific prior written permission.
  20:./CMSIS/include/core_cm3.h ****    *
  21:./CMSIS/include/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./CMSIS/include/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./CMSIS/include/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./CMSIS/include/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./CMSIS/include/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./CMSIS/include/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./CMSIS/include/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./CMSIS/include/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./CMSIS/include/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./CMSIS/include/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:./CMSIS/include/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./CMSIS/include/core_cm3.h ****    ---------------------------------------------------------------------------*/
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 2


  33:./CMSIS/include/core_cm3.h **** 
  34:./CMSIS/include/core_cm3.h **** 
  35:./CMSIS/include/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:./CMSIS/include/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:./CMSIS/include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:./CMSIS/include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:./CMSIS/include/core_cm3.h **** #endif
  40:./CMSIS/include/core_cm3.h **** 
  41:./CMSIS/include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:./CMSIS/include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:./CMSIS/include/core_cm3.h **** 
  44:./CMSIS/include/core_cm3.h **** #include <stdint.h>
  45:./CMSIS/include/core_cm3.h **** 
  46:./CMSIS/include/core_cm3.h **** #ifdef __cplusplus
  47:./CMSIS/include/core_cm3.h ****  extern "C" {
  48:./CMSIS/include/core_cm3.h **** #endif
  49:./CMSIS/include/core_cm3.h **** 
  50:./CMSIS/include/core_cm3.h **** /**
  51:./CMSIS/include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:./CMSIS/include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:./CMSIS/include/core_cm3.h **** 
  54:./CMSIS/include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:./CMSIS/include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  56:./CMSIS/include/core_cm3.h **** 
  57:./CMSIS/include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:./CMSIS/include/core_cm3.h ****      Unions are used for effective representation of core registers.
  59:./CMSIS/include/core_cm3.h **** 
  60:./CMSIS/include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:./CMSIS/include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  62:./CMSIS/include/core_cm3.h ****  */
  63:./CMSIS/include/core_cm3.h **** 
  64:./CMSIS/include/core_cm3.h **** 
  65:./CMSIS/include/core_cm3.h **** /*******************************************************************************
  66:./CMSIS/include/core_cm3.h ****  *                 CMSIS definitions
  67:./CMSIS/include/core_cm3.h ****  ******************************************************************************/
  68:./CMSIS/include/core_cm3.h **** /**
  69:./CMSIS/include/core_cm3.h ****   \ingroup Cortex_M3
  70:./CMSIS/include/core_cm3.h ****   @{
  71:./CMSIS/include/core_cm3.h ****  */
  72:./CMSIS/include/core_cm3.h **** 
  73:./CMSIS/include/core_cm3.h **** /*  CMSIS CM3 definitions */
  74:./CMSIS/include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:./CMSIS/include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:./CMSIS/include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  77:./CMSIS/include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:./CMSIS/include/core_cm3.h **** 
  79:./CMSIS/include/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  80:./CMSIS/include/core_cm3.h **** 
  81:./CMSIS/include/core_cm3.h **** 
  82:./CMSIS/include/core_cm3.h **** #if   defined ( __CC_ARM )
  83:./CMSIS/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:./CMSIS/include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  86:./CMSIS/include/core_cm3.h **** 
  87:./CMSIS/include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:./CMSIS/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:./CMSIS/include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 3


  90:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  91:./CMSIS/include/core_cm3.h **** 
  92:./CMSIS/include/core_cm3.h **** #elif defined ( __GNUC__ )
  93:./CMSIS/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:./CMSIS/include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static inline
  96:./CMSIS/include/core_cm3.h **** 
  97:./CMSIS/include/core_cm3.h **** #elif defined ( __ICCARM__ )
  98:./CMSIS/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:./CMSIS/include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 101:./CMSIS/include/core_cm3.h **** 
 102:./CMSIS/include/core_cm3.h **** #elif defined ( __TMS470__ )
 103:./CMSIS/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 105:./CMSIS/include/core_cm3.h **** 
 106:./CMSIS/include/core_cm3.h **** #elif defined ( __TASKING__ )
 107:./CMSIS/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:./CMSIS/include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 110:./CMSIS/include/core_cm3.h **** 
 111:./CMSIS/include/core_cm3.h **** #elif defined ( __CSMC__ )
 112:./CMSIS/include/core_cm3.h ****   #define __packed
 113:./CMSIS/include/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:./CMSIS/include/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:./CMSIS/include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 116:./CMSIS/include/core_cm3.h **** 
 117:./CMSIS/include/core_cm3.h **** #else
 118:./CMSIS/include/core_cm3.h ****   #error Unknown compiler
 119:./CMSIS/include/core_cm3.h **** #endif
 120:./CMSIS/include/core_cm3.h **** 
 121:./CMSIS/include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:./CMSIS/include/core_cm3.h ****     This core does not support an FPU at all
 123:./CMSIS/include/core_cm3.h **** */
 124:./CMSIS/include/core_cm3.h **** #define __FPU_USED       0U
 125:./CMSIS/include/core_cm3.h **** 
 126:./CMSIS/include/core_cm3.h **** #if defined ( __CC_ARM )
 127:./CMSIS/include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 128:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:./CMSIS/include/core_cm3.h ****   #endif
 130:./CMSIS/include/core_cm3.h **** 
 131:./CMSIS/include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:./CMSIS/include/core_cm3.h ****   #if defined __ARM_PCS_VFP
 133:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:./CMSIS/include/core_cm3.h ****   #endif
 135:./CMSIS/include/core_cm3.h **** 
 136:./CMSIS/include/core_cm3.h **** #elif defined ( __GNUC__ )
 137:./CMSIS/include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:./CMSIS/include/core_cm3.h ****   #endif
 140:./CMSIS/include/core_cm3.h **** 
 141:./CMSIS/include/core_cm3.h **** #elif defined ( __ICCARM__ )
 142:./CMSIS/include/core_cm3.h ****   #if defined __ARMVFP__
 143:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:./CMSIS/include/core_cm3.h ****   #endif
 145:./CMSIS/include/core_cm3.h **** 
 146:./CMSIS/include/core_cm3.h **** #elif defined ( __TMS470__ )
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 4


 147:./CMSIS/include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 148:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:./CMSIS/include/core_cm3.h ****   #endif
 150:./CMSIS/include/core_cm3.h **** 
 151:./CMSIS/include/core_cm3.h **** #elif defined ( __TASKING__ )
 152:./CMSIS/include/core_cm3.h ****   #if defined __FPU_VFP__
 153:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:./CMSIS/include/core_cm3.h ****   #endif
 155:./CMSIS/include/core_cm3.h **** 
 156:./CMSIS/include/core_cm3.h **** #elif defined ( __CSMC__ )
 157:./CMSIS/include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 158:./CMSIS/include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:./CMSIS/include/core_cm3.h ****   #endif
 160:./CMSIS/include/core_cm3.h **** 
 161:./CMSIS/include/core_cm3.h **** #endif
 162:./CMSIS/include/core_cm3.h **** 
 163:./CMSIS/include/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:./CMSIS/include/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:./CMSIS/include/core_cm3.h **** 
 166:./CMSIS/include/core_cm3.h **** #ifdef __cplusplus
 167:./CMSIS/include/core_cm3.h **** }
 168:./CMSIS/include/core_cm3.h **** #endif
 169:./CMSIS/include/core_cm3.h **** 
 170:./CMSIS/include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 171:./CMSIS/include/core_cm3.h **** 
 172:./CMSIS/include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 173:./CMSIS/include/core_cm3.h **** 
 174:./CMSIS/include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 175:./CMSIS/include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 176:./CMSIS/include/core_cm3.h **** 
 177:./CMSIS/include/core_cm3.h **** #ifdef __cplusplus
 178:./CMSIS/include/core_cm3.h ****  extern "C" {
 179:./CMSIS/include/core_cm3.h **** #endif
 180:./CMSIS/include/core_cm3.h **** 
 181:./CMSIS/include/core_cm3.h **** /* check device defines and use defaults */
 182:./CMSIS/include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 183:./CMSIS/include/core_cm3.h ****   #ifndef __CM3_REV
 184:./CMSIS/include/core_cm3.h ****     #define __CM3_REV               0x0200U
 185:./CMSIS/include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 186:./CMSIS/include/core_cm3.h ****   #endif
 187:./CMSIS/include/core_cm3.h **** 
 188:./CMSIS/include/core_cm3.h ****   #ifndef __MPU_PRESENT
 189:./CMSIS/include/core_cm3.h ****     #define __MPU_PRESENT             0U
 190:./CMSIS/include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:./CMSIS/include/core_cm3.h ****   #endif
 192:./CMSIS/include/core_cm3.h **** 
 193:./CMSIS/include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 194:./CMSIS/include/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 195:./CMSIS/include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 196:./CMSIS/include/core_cm3.h ****   #endif
 197:./CMSIS/include/core_cm3.h **** 
 198:./CMSIS/include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 199:./CMSIS/include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 200:./CMSIS/include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 201:./CMSIS/include/core_cm3.h ****   #endif
 202:./CMSIS/include/core_cm3.h **** #endif
 203:./CMSIS/include/core_cm3.h **** 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 5


 204:./CMSIS/include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 205:./CMSIS/include/core_cm3.h **** /**
 206:./CMSIS/include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 207:./CMSIS/include/core_cm3.h **** 
 208:./CMSIS/include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 209:./CMSIS/include/core_cm3.h ****     \li to specify the access to peripheral variables.
 210:./CMSIS/include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 211:./CMSIS/include/core_cm3.h **** */
 212:./CMSIS/include/core_cm3.h **** #ifdef __cplusplus
 213:./CMSIS/include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 214:./CMSIS/include/core_cm3.h **** #else
 215:./CMSIS/include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 216:./CMSIS/include/core_cm3.h **** #endif
 217:./CMSIS/include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 218:./CMSIS/include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 219:./CMSIS/include/core_cm3.h **** 
 220:./CMSIS/include/core_cm3.h **** /* following defines should be used for structure members */
 221:./CMSIS/include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 222:./CMSIS/include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 223:./CMSIS/include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 224:./CMSIS/include/core_cm3.h **** 
 225:./CMSIS/include/core_cm3.h **** /*@} end of group Cortex_M3 */
 226:./CMSIS/include/core_cm3.h **** 
 227:./CMSIS/include/core_cm3.h **** 
 228:./CMSIS/include/core_cm3.h **** 
 229:./CMSIS/include/core_cm3.h **** /*******************************************************************************
 230:./CMSIS/include/core_cm3.h ****  *                 Register Abstraction
 231:./CMSIS/include/core_cm3.h ****   Core Register contain:
 232:./CMSIS/include/core_cm3.h ****   - Core Register
 233:./CMSIS/include/core_cm3.h ****   - Core NVIC Register
 234:./CMSIS/include/core_cm3.h ****   - Core SCB Register
 235:./CMSIS/include/core_cm3.h ****   - Core SysTick Register
 236:./CMSIS/include/core_cm3.h ****   - Core Debug Register
 237:./CMSIS/include/core_cm3.h ****   - Core MPU Register
 238:./CMSIS/include/core_cm3.h ****  ******************************************************************************/
 239:./CMSIS/include/core_cm3.h **** /**
 240:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 241:./CMSIS/include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 242:./CMSIS/include/core_cm3.h **** */
 243:./CMSIS/include/core_cm3.h **** 
 244:./CMSIS/include/core_cm3.h **** /**
 245:./CMSIS/include/core_cm3.h ****   \ingroup    CMSIS_core_register
 246:./CMSIS/include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 247:./CMSIS/include/core_cm3.h ****   \brief      Core Register type definitions.
 248:./CMSIS/include/core_cm3.h ****   @{
 249:./CMSIS/include/core_cm3.h ****  */
 250:./CMSIS/include/core_cm3.h **** 
 251:./CMSIS/include/core_cm3.h **** /**
 252:./CMSIS/include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 253:./CMSIS/include/core_cm3.h ****  */
 254:./CMSIS/include/core_cm3.h **** typedef union
 255:./CMSIS/include/core_cm3.h **** {
 256:./CMSIS/include/core_cm3.h ****   struct
 257:./CMSIS/include/core_cm3.h ****   {
 258:./CMSIS/include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 259:./CMSIS/include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 260:./CMSIS/include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 6


 261:./CMSIS/include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 262:./CMSIS/include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 263:./CMSIS/include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 264:./CMSIS/include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 265:./CMSIS/include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 266:./CMSIS/include/core_cm3.h **** } APSR_Type;
 267:./CMSIS/include/core_cm3.h **** 
 268:./CMSIS/include/core_cm3.h **** /* APSR Register Definitions */
 269:./CMSIS/include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 270:./CMSIS/include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 271:./CMSIS/include/core_cm3.h **** 
 272:./CMSIS/include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 273:./CMSIS/include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 274:./CMSIS/include/core_cm3.h **** 
 275:./CMSIS/include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 276:./CMSIS/include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 277:./CMSIS/include/core_cm3.h **** 
 278:./CMSIS/include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 279:./CMSIS/include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 280:./CMSIS/include/core_cm3.h **** 
 281:./CMSIS/include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 282:./CMSIS/include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 283:./CMSIS/include/core_cm3.h **** 
 284:./CMSIS/include/core_cm3.h **** 
 285:./CMSIS/include/core_cm3.h **** /**
 286:./CMSIS/include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:./CMSIS/include/core_cm3.h ****  */
 288:./CMSIS/include/core_cm3.h **** typedef union
 289:./CMSIS/include/core_cm3.h **** {
 290:./CMSIS/include/core_cm3.h ****   struct
 291:./CMSIS/include/core_cm3.h ****   {
 292:./CMSIS/include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:./CMSIS/include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:./CMSIS/include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 295:./CMSIS/include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:./CMSIS/include/core_cm3.h **** } IPSR_Type;
 297:./CMSIS/include/core_cm3.h **** 
 298:./CMSIS/include/core_cm3.h **** /* IPSR Register Definitions */
 299:./CMSIS/include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:./CMSIS/include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:./CMSIS/include/core_cm3.h **** 
 302:./CMSIS/include/core_cm3.h **** 
 303:./CMSIS/include/core_cm3.h **** /**
 304:./CMSIS/include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:./CMSIS/include/core_cm3.h ****  */
 306:./CMSIS/include/core_cm3.h **** typedef union
 307:./CMSIS/include/core_cm3.h **** {
 308:./CMSIS/include/core_cm3.h ****   struct
 309:./CMSIS/include/core_cm3.h ****   {
 310:./CMSIS/include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:./CMSIS/include/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:./CMSIS/include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:./CMSIS/include/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 314:./CMSIS/include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 315:./CMSIS/include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 316:./CMSIS/include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 317:./CMSIS/include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 7


 318:./CMSIS/include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 319:./CMSIS/include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 320:./CMSIS/include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:./CMSIS/include/core_cm3.h **** } xPSR_Type;
 322:./CMSIS/include/core_cm3.h **** 
 323:./CMSIS/include/core_cm3.h **** /* xPSR Register Definitions */
 324:./CMSIS/include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 325:./CMSIS/include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 326:./CMSIS/include/core_cm3.h **** 
 327:./CMSIS/include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 328:./CMSIS/include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 329:./CMSIS/include/core_cm3.h **** 
 330:./CMSIS/include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 331:./CMSIS/include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 332:./CMSIS/include/core_cm3.h **** 
 333:./CMSIS/include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 334:./CMSIS/include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 335:./CMSIS/include/core_cm3.h **** 
 336:./CMSIS/include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 337:./CMSIS/include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 338:./CMSIS/include/core_cm3.h **** 
 339:./CMSIS/include/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 340:./CMSIS/include/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 341:./CMSIS/include/core_cm3.h **** 
 342:./CMSIS/include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 343:./CMSIS/include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 344:./CMSIS/include/core_cm3.h **** 
 345:./CMSIS/include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 346:./CMSIS/include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 347:./CMSIS/include/core_cm3.h **** 
 348:./CMSIS/include/core_cm3.h **** 
 349:./CMSIS/include/core_cm3.h **** /**
 350:./CMSIS/include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 351:./CMSIS/include/core_cm3.h ****  */
 352:./CMSIS/include/core_cm3.h **** typedef union
 353:./CMSIS/include/core_cm3.h **** {
 354:./CMSIS/include/core_cm3.h ****   struct
 355:./CMSIS/include/core_cm3.h ****   {
 356:./CMSIS/include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 357:./CMSIS/include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 358:./CMSIS/include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 359:./CMSIS/include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 360:./CMSIS/include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:./CMSIS/include/core_cm3.h **** } CONTROL_Type;
 362:./CMSIS/include/core_cm3.h **** 
 363:./CMSIS/include/core_cm3.h **** /* CONTROL Register Definitions */
 364:./CMSIS/include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 365:./CMSIS/include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 366:./CMSIS/include/core_cm3.h **** 
 367:./CMSIS/include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 368:./CMSIS/include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 369:./CMSIS/include/core_cm3.h **** 
 370:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 371:./CMSIS/include/core_cm3.h **** 
 372:./CMSIS/include/core_cm3.h **** 
 373:./CMSIS/include/core_cm3.h **** /**
 374:./CMSIS/include/core_cm3.h ****   \ingroup    CMSIS_core_register
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 8


 375:./CMSIS/include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 376:./CMSIS/include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 377:./CMSIS/include/core_cm3.h ****   @{
 378:./CMSIS/include/core_cm3.h ****  */
 379:./CMSIS/include/core_cm3.h **** 
 380:./CMSIS/include/core_cm3.h **** /**
 381:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 382:./CMSIS/include/core_cm3.h ****  */
 383:./CMSIS/include/core_cm3.h **** typedef struct
 384:./CMSIS/include/core_cm3.h **** {
 385:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 386:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED0[24U];
 387:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 388:./CMSIS/include/core_cm3.h ****         uint32_t RSERVED1[24U];
 389:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 390:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED2[24U];
 391:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 392:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED3[24U];
 393:./CMSIS/include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 394:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED4[56U];
 395:./CMSIS/include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 396:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED5[644U];
 397:./CMSIS/include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 398:./CMSIS/include/core_cm3.h **** }  NVIC_Type;
 399:./CMSIS/include/core_cm3.h **** 
 400:./CMSIS/include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 401:./CMSIS/include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 402:./CMSIS/include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 403:./CMSIS/include/core_cm3.h **** 
 404:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 405:./CMSIS/include/core_cm3.h **** 
 406:./CMSIS/include/core_cm3.h **** 
 407:./CMSIS/include/core_cm3.h **** /**
 408:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
 409:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 410:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 411:./CMSIS/include/core_cm3.h ****   @{
 412:./CMSIS/include/core_cm3.h ****  */
 413:./CMSIS/include/core_cm3.h **** 
 414:./CMSIS/include/core_cm3.h **** /**
 415:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 416:./CMSIS/include/core_cm3.h ****  */
 417:./CMSIS/include/core_cm3.h **** typedef struct
 418:./CMSIS/include/core_cm3.h **** {
 419:./CMSIS/include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 420:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 421:./CMSIS/include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 422:./CMSIS/include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 423:./CMSIS/include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 424:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 425:./CMSIS/include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 426:./CMSIS/include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 427:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 428:./CMSIS/include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 429:./CMSIS/include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 430:./CMSIS/include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 431:./CMSIS/include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 9


 432:./CMSIS/include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 433:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 434:./CMSIS/include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 435:./CMSIS/include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 436:./CMSIS/include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 437:./CMSIS/include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 438:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED0[5U];
 439:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 440:./CMSIS/include/core_cm3.h **** } SCB_Type;
 441:./CMSIS/include/core_cm3.h **** 
 442:./CMSIS/include/core_cm3.h **** /* SCB CPUID Register Definitions */
 443:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 444:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 445:./CMSIS/include/core_cm3.h **** 
 446:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 447:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 448:./CMSIS/include/core_cm3.h **** 
 449:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 450:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 451:./CMSIS/include/core_cm3.h **** 
 452:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 453:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 454:./CMSIS/include/core_cm3.h **** 
 455:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 456:./CMSIS/include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 457:./CMSIS/include/core_cm3.h **** 
 458:./CMSIS/include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 459:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 460:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 461:./CMSIS/include/core_cm3.h **** 
 462:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 463:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 464:./CMSIS/include/core_cm3.h **** 
 465:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 466:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 467:./CMSIS/include/core_cm3.h **** 
 468:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 469:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 470:./CMSIS/include/core_cm3.h **** 
 471:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 472:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 473:./CMSIS/include/core_cm3.h **** 
 474:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 475:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 476:./CMSIS/include/core_cm3.h **** 
 477:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 478:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 479:./CMSIS/include/core_cm3.h **** 
 480:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 481:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 482:./CMSIS/include/core_cm3.h **** 
 483:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 484:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 485:./CMSIS/include/core_cm3.h **** 
 486:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 487:./CMSIS/include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 488:./CMSIS/include/core_cm3.h **** 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 10


 489:./CMSIS/include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 490:./CMSIS/include/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 491:./CMSIS/include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 492:./CMSIS/include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 493:./CMSIS/include/core_cm3.h **** 
 494:./CMSIS/include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 495:./CMSIS/include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 496:./CMSIS/include/core_cm3.h **** #else
 497:./CMSIS/include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 498:./CMSIS/include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 499:./CMSIS/include/core_cm3.h **** #endif
 500:./CMSIS/include/core_cm3.h **** 
 501:./CMSIS/include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 502:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 503:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 504:./CMSIS/include/core_cm3.h **** 
 505:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 506:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 507:./CMSIS/include/core_cm3.h **** 
 508:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 509:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 510:./CMSIS/include/core_cm3.h **** 
 511:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 512:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 513:./CMSIS/include/core_cm3.h **** 
 514:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 515:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 516:./CMSIS/include/core_cm3.h **** 
 517:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 518:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 519:./CMSIS/include/core_cm3.h **** 
 520:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 521:./CMSIS/include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 522:./CMSIS/include/core_cm3.h **** 
 523:./CMSIS/include/core_cm3.h **** /* SCB System Control Register Definitions */
 524:./CMSIS/include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 525:./CMSIS/include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 526:./CMSIS/include/core_cm3.h **** 
 527:./CMSIS/include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 528:./CMSIS/include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 529:./CMSIS/include/core_cm3.h **** 
 530:./CMSIS/include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 531:./CMSIS/include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 532:./CMSIS/include/core_cm3.h **** 
 533:./CMSIS/include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 534:./CMSIS/include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 535:./CMSIS/include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 536:./CMSIS/include/core_cm3.h **** 
 537:./CMSIS/include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 538:./CMSIS/include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 539:./CMSIS/include/core_cm3.h **** 
 540:./CMSIS/include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 541:./CMSIS/include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 542:./CMSIS/include/core_cm3.h **** 
 543:./CMSIS/include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 544:./CMSIS/include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 545:./CMSIS/include/core_cm3.h **** 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 11


 546:./CMSIS/include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 547:./CMSIS/include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 548:./CMSIS/include/core_cm3.h **** 
 549:./CMSIS/include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 550:./CMSIS/include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 551:./CMSIS/include/core_cm3.h **** 
 552:./CMSIS/include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 553:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 554:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 555:./CMSIS/include/core_cm3.h **** 
 556:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 557:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 558:./CMSIS/include/core_cm3.h **** 
 559:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 560:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 561:./CMSIS/include/core_cm3.h **** 
 562:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 563:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 564:./CMSIS/include/core_cm3.h **** 
 565:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 566:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 567:./CMSIS/include/core_cm3.h **** 
 568:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 569:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 570:./CMSIS/include/core_cm3.h **** 
 571:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 572:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 573:./CMSIS/include/core_cm3.h **** 
 574:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 575:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 576:./CMSIS/include/core_cm3.h **** 
 577:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 578:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 579:./CMSIS/include/core_cm3.h **** 
 580:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 581:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 582:./CMSIS/include/core_cm3.h **** 
 583:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 584:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 585:./CMSIS/include/core_cm3.h **** 
 586:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 587:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 588:./CMSIS/include/core_cm3.h **** 
 589:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 590:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 591:./CMSIS/include/core_cm3.h **** 
 592:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 593:./CMSIS/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 594:./CMSIS/include/core_cm3.h **** 
 595:./CMSIS/include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 596:./CMSIS/include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 597:./CMSIS/include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 598:./CMSIS/include/core_cm3.h **** 
 599:./CMSIS/include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 600:./CMSIS/include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 601:./CMSIS/include/core_cm3.h **** 
 602:./CMSIS/include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 12


 603:./CMSIS/include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 604:./CMSIS/include/core_cm3.h **** 
 605:./CMSIS/include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 606:./CMSIS/include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 607:./CMSIS/include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 608:./CMSIS/include/core_cm3.h **** 
 609:./CMSIS/include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 610:./CMSIS/include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 611:./CMSIS/include/core_cm3.h **** 
 612:./CMSIS/include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 613:./CMSIS/include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 614:./CMSIS/include/core_cm3.h **** 
 615:./CMSIS/include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 616:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 617:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 618:./CMSIS/include/core_cm3.h **** 
 619:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 620:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 621:./CMSIS/include/core_cm3.h **** 
 622:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 623:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 624:./CMSIS/include/core_cm3.h **** 
 625:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 626:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 627:./CMSIS/include/core_cm3.h **** 
 628:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 629:./CMSIS/include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 630:./CMSIS/include/core_cm3.h **** 
 631:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 632:./CMSIS/include/core_cm3.h **** 
 633:./CMSIS/include/core_cm3.h **** 
 634:./CMSIS/include/core_cm3.h **** /**
 635:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
 636:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 637:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 638:./CMSIS/include/core_cm3.h ****   @{
 639:./CMSIS/include/core_cm3.h ****  */
 640:./CMSIS/include/core_cm3.h **** 
 641:./CMSIS/include/core_cm3.h **** /**
 642:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 643:./CMSIS/include/core_cm3.h ****  */
 644:./CMSIS/include/core_cm3.h **** typedef struct
 645:./CMSIS/include/core_cm3.h **** {
 646:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED0[1U];
 647:./CMSIS/include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 648:./CMSIS/include/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 649:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 650:./CMSIS/include/core_cm3.h **** #else
 651:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED1[1U];
 652:./CMSIS/include/core_cm3.h **** #endif
 653:./CMSIS/include/core_cm3.h **** } SCnSCB_Type;
 654:./CMSIS/include/core_cm3.h **** 
 655:./CMSIS/include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 656:./CMSIS/include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 657:./CMSIS/include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 658:./CMSIS/include/core_cm3.h **** 
 659:./CMSIS/include/core_cm3.h **** /* Auxiliary Control Register Definitions */
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 13


 660:./CMSIS/include/core_cm3.h **** 
 661:./CMSIS/include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 662:./CMSIS/include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 663:./CMSIS/include/core_cm3.h **** 
 664:./CMSIS/include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 665:./CMSIS/include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 666:./CMSIS/include/core_cm3.h **** 
 667:./CMSIS/include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 668:./CMSIS/include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 669:./CMSIS/include/core_cm3.h **** 
 670:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 671:./CMSIS/include/core_cm3.h **** 
 672:./CMSIS/include/core_cm3.h **** 
 673:./CMSIS/include/core_cm3.h **** /**
 674:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
 675:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 676:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 677:./CMSIS/include/core_cm3.h ****   @{
 678:./CMSIS/include/core_cm3.h ****  */
 679:./CMSIS/include/core_cm3.h **** 
 680:./CMSIS/include/core_cm3.h **** /**
 681:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 682:./CMSIS/include/core_cm3.h ****  */
 683:./CMSIS/include/core_cm3.h **** typedef struct
 684:./CMSIS/include/core_cm3.h **** {
 685:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 686:./CMSIS/include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 687:./CMSIS/include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 688:./CMSIS/include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 689:./CMSIS/include/core_cm3.h **** } SysTick_Type;
 690:./CMSIS/include/core_cm3.h **** 
 691:./CMSIS/include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 692:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 693:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 694:./CMSIS/include/core_cm3.h **** 
 695:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 696:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 697:./CMSIS/include/core_cm3.h **** 
 698:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 699:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 700:./CMSIS/include/core_cm3.h **** 
 701:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 702:./CMSIS/include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 703:./CMSIS/include/core_cm3.h **** 
 704:./CMSIS/include/core_cm3.h **** /* SysTick Reload Register Definitions */
 705:./CMSIS/include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 706:./CMSIS/include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 707:./CMSIS/include/core_cm3.h **** 
 708:./CMSIS/include/core_cm3.h **** /* SysTick Current Register Definitions */
 709:./CMSIS/include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 710:./CMSIS/include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 711:./CMSIS/include/core_cm3.h **** 
 712:./CMSIS/include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 713:./CMSIS/include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 714:./CMSIS/include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 715:./CMSIS/include/core_cm3.h **** 
 716:./CMSIS/include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 14


 717:./CMSIS/include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 718:./CMSIS/include/core_cm3.h **** 
 719:./CMSIS/include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 720:./CMSIS/include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 721:./CMSIS/include/core_cm3.h **** 
 722:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 723:./CMSIS/include/core_cm3.h **** 
 724:./CMSIS/include/core_cm3.h **** 
 725:./CMSIS/include/core_cm3.h **** /**
 726:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
 727:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 728:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 729:./CMSIS/include/core_cm3.h ****   @{
 730:./CMSIS/include/core_cm3.h ****  */
 731:./CMSIS/include/core_cm3.h **** 
 732:./CMSIS/include/core_cm3.h **** /**
 733:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 734:./CMSIS/include/core_cm3.h ****  */
 735:./CMSIS/include/core_cm3.h **** typedef struct
 736:./CMSIS/include/core_cm3.h **** {
 737:./CMSIS/include/core_cm3.h ****   __OM  union
 738:./CMSIS/include/core_cm3.h ****   {
 739:./CMSIS/include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 740:./CMSIS/include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 741:./CMSIS/include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 742:./CMSIS/include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 743:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED0[864U];
 744:./CMSIS/include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 745:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED1[15U];
 746:./CMSIS/include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 747:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED2[15U];
 748:./CMSIS/include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 749:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED3[29U];
 750:./CMSIS/include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 751:./CMSIS/include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 752:./CMSIS/include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 753:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED4[43U];
 754:./CMSIS/include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 755:./CMSIS/include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 756:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED5[6U];
 757:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 758:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 759:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 760:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 761:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 762:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 763:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 764:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 765:./CMSIS/include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 766:./CMSIS/include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 767:./CMSIS/include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 768:./CMSIS/include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 769:./CMSIS/include/core_cm3.h **** } ITM_Type;
 770:./CMSIS/include/core_cm3.h **** 
 771:./CMSIS/include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 772:./CMSIS/include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 773:./CMSIS/include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 15


 774:./CMSIS/include/core_cm3.h **** 
 775:./CMSIS/include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 776:./CMSIS/include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 777:./CMSIS/include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 778:./CMSIS/include/core_cm3.h **** 
 779:./CMSIS/include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 780:./CMSIS/include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 781:./CMSIS/include/core_cm3.h **** 
 782:./CMSIS/include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 783:./CMSIS/include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 784:./CMSIS/include/core_cm3.h **** 
 785:./CMSIS/include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 786:./CMSIS/include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 787:./CMSIS/include/core_cm3.h **** 
 788:./CMSIS/include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 789:./CMSIS/include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 790:./CMSIS/include/core_cm3.h **** 
 791:./CMSIS/include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 792:./CMSIS/include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 793:./CMSIS/include/core_cm3.h **** 
 794:./CMSIS/include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 795:./CMSIS/include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 796:./CMSIS/include/core_cm3.h **** 
 797:./CMSIS/include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 798:./CMSIS/include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 799:./CMSIS/include/core_cm3.h **** 
 800:./CMSIS/include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 801:./CMSIS/include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 802:./CMSIS/include/core_cm3.h **** 
 803:./CMSIS/include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 804:./CMSIS/include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 805:./CMSIS/include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 806:./CMSIS/include/core_cm3.h **** 
 807:./CMSIS/include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 808:./CMSIS/include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 809:./CMSIS/include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 810:./CMSIS/include/core_cm3.h **** 
 811:./CMSIS/include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 812:./CMSIS/include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 813:./CMSIS/include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 814:./CMSIS/include/core_cm3.h **** 
 815:./CMSIS/include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 816:./CMSIS/include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 817:./CMSIS/include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 818:./CMSIS/include/core_cm3.h **** 
 819:./CMSIS/include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 820:./CMSIS/include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 821:./CMSIS/include/core_cm3.h **** 
 822:./CMSIS/include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 823:./CMSIS/include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 824:./CMSIS/include/core_cm3.h **** 
 825:./CMSIS/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 826:./CMSIS/include/core_cm3.h **** 
 827:./CMSIS/include/core_cm3.h **** 
 828:./CMSIS/include/core_cm3.h **** /**
 829:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
 830:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 16


 831:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 832:./CMSIS/include/core_cm3.h ****   @{
 833:./CMSIS/include/core_cm3.h ****  */
 834:./CMSIS/include/core_cm3.h **** 
 835:./CMSIS/include/core_cm3.h **** /**
 836:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 837:./CMSIS/include/core_cm3.h ****  */
 838:./CMSIS/include/core_cm3.h **** typedef struct
 839:./CMSIS/include/core_cm3.h **** {
 840:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 841:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 842:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 843:./CMSIS/include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 844:./CMSIS/include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 845:./CMSIS/include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 846:./CMSIS/include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 847:./CMSIS/include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 848:./CMSIS/include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 849:./CMSIS/include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 850:./CMSIS/include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 851:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED0[1U];
 852:./CMSIS/include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 853:./CMSIS/include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 854:./CMSIS/include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 855:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED1[1U];
 856:./CMSIS/include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 857:./CMSIS/include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 858:./CMSIS/include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 859:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED2[1U];
 860:./CMSIS/include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 861:./CMSIS/include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 862:./CMSIS/include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 863:./CMSIS/include/core_cm3.h **** } DWT_Type;
 864:./CMSIS/include/core_cm3.h **** 
 865:./CMSIS/include/core_cm3.h **** /* DWT Control Register Definitions */
 866:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 867:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 868:./CMSIS/include/core_cm3.h **** 
 869:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 870:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 871:./CMSIS/include/core_cm3.h **** 
 872:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 873:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 874:./CMSIS/include/core_cm3.h **** 
 875:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 876:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 877:./CMSIS/include/core_cm3.h **** 
 878:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 879:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 880:./CMSIS/include/core_cm3.h **** 
 881:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 882:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 883:./CMSIS/include/core_cm3.h **** 
 884:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 885:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 886:./CMSIS/include/core_cm3.h **** 
 887:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 17


 888:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 889:./CMSIS/include/core_cm3.h **** 
 890:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 891:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 892:./CMSIS/include/core_cm3.h **** 
 893:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 894:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 895:./CMSIS/include/core_cm3.h **** 
 896:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 897:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 898:./CMSIS/include/core_cm3.h **** 
 899:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 900:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 901:./CMSIS/include/core_cm3.h **** 
 902:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 903:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 904:./CMSIS/include/core_cm3.h **** 
 905:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 906:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 907:./CMSIS/include/core_cm3.h **** 
 908:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 909:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 910:./CMSIS/include/core_cm3.h **** 
 911:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 912:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 913:./CMSIS/include/core_cm3.h **** 
 914:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 915:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 916:./CMSIS/include/core_cm3.h **** 
 917:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 918:./CMSIS/include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 919:./CMSIS/include/core_cm3.h **** 
 920:./CMSIS/include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 921:./CMSIS/include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 922:./CMSIS/include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 923:./CMSIS/include/core_cm3.h **** 
 924:./CMSIS/include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 925:./CMSIS/include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 926:./CMSIS/include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 927:./CMSIS/include/core_cm3.h **** 
 928:./CMSIS/include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 929:./CMSIS/include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 930:./CMSIS/include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 931:./CMSIS/include/core_cm3.h **** 
 932:./CMSIS/include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 933:./CMSIS/include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 934:./CMSIS/include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 935:./CMSIS/include/core_cm3.h **** 
 936:./CMSIS/include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 937:./CMSIS/include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 938:./CMSIS/include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 939:./CMSIS/include/core_cm3.h **** 
 940:./CMSIS/include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 941:./CMSIS/include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 942:./CMSIS/include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 943:./CMSIS/include/core_cm3.h **** 
 944:./CMSIS/include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 18


 945:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 946:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 947:./CMSIS/include/core_cm3.h **** 
 948:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 949:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 950:./CMSIS/include/core_cm3.h **** 
 951:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 952:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 953:./CMSIS/include/core_cm3.h **** 
 954:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 955:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 956:./CMSIS/include/core_cm3.h **** 
 957:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 958:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 959:./CMSIS/include/core_cm3.h **** 
 960:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 961:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 962:./CMSIS/include/core_cm3.h **** 
 963:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 964:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 965:./CMSIS/include/core_cm3.h **** 
 966:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 967:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 968:./CMSIS/include/core_cm3.h **** 
 969:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 970:./CMSIS/include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 971:./CMSIS/include/core_cm3.h **** 
 972:./CMSIS/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 973:./CMSIS/include/core_cm3.h **** 
 974:./CMSIS/include/core_cm3.h **** 
 975:./CMSIS/include/core_cm3.h **** /**
 976:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
 977:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 978:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 979:./CMSIS/include/core_cm3.h ****   @{
 980:./CMSIS/include/core_cm3.h ****  */
 981:./CMSIS/include/core_cm3.h **** 
 982:./CMSIS/include/core_cm3.h **** /**
 983:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 984:./CMSIS/include/core_cm3.h ****  */
 985:./CMSIS/include/core_cm3.h **** typedef struct
 986:./CMSIS/include/core_cm3.h **** {
 987:./CMSIS/include/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 988:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 989:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED0[2U];
 990:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 991:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED1[55U];
 992:./CMSIS/include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 993:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED2[131U];
 994:./CMSIS/include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 995:./CMSIS/include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 996:./CMSIS/include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 997:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED3[759U];
 998:./CMSIS/include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 999:./CMSIS/include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1000:./CMSIS/include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1001:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED4[1U];
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 19


1002:./CMSIS/include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1003:./CMSIS/include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1004:./CMSIS/include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1005:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED5[39U];
1006:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1007:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1008:./CMSIS/include/core_cm3.h ****         uint32_t RESERVED7[8U];
1009:./CMSIS/include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1010:./CMSIS/include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1011:./CMSIS/include/core_cm3.h **** } TPI_Type;
1012:./CMSIS/include/core_cm3.h **** 
1013:./CMSIS/include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1014:./CMSIS/include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1015:./CMSIS/include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1016:./CMSIS/include/core_cm3.h **** 
1017:./CMSIS/include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1018:./CMSIS/include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1019:./CMSIS/include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1020:./CMSIS/include/core_cm3.h **** 
1021:./CMSIS/include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1022:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1023:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1024:./CMSIS/include/core_cm3.h **** 
1025:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1026:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1027:./CMSIS/include/core_cm3.h **** 
1028:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1029:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1030:./CMSIS/include/core_cm3.h **** 
1031:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1032:./CMSIS/include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1033:./CMSIS/include/core_cm3.h **** 
1034:./CMSIS/include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1035:./CMSIS/include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1036:./CMSIS/include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1037:./CMSIS/include/core_cm3.h **** 
1038:./CMSIS/include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1039:./CMSIS/include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1040:./CMSIS/include/core_cm3.h **** 
1041:./CMSIS/include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1042:./CMSIS/include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1043:./CMSIS/include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1044:./CMSIS/include/core_cm3.h **** 
1045:./CMSIS/include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1046:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1047:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1048:./CMSIS/include/core_cm3.h **** 
1049:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1050:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1051:./CMSIS/include/core_cm3.h **** 
1052:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1053:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1054:./CMSIS/include/core_cm3.h **** 
1055:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1056:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1057:./CMSIS/include/core_cm3.h **** 
1058:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 20


1059:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1060:./CMSIS/include/core_cm3.h **** 
1061:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1062:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1063:./CMSIS/include/core_cm3.h **** 
1064:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1065:./CMSIS/include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1066:./CMSIS/include/core_cm3.h **** 
1067:./CMSIS/include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1068:./CMSIS/include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1069:./CMSIS/include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1070:./CMSIS/include/core_cm3.h **** 
1071:./CMSIS/include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1072:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1073:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1074:./CMSIS/include/core_cm3.h **** 
1075:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1076:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1077:./CMSIS/include/core_cm3.h **** 
1078:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1079:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1080:./CMSIS/include/core_cm3.h **** 
1081:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1082:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1083:./CMSIS/include/core_cm3.h **** 
1084:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1085:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1086:./CMSIS/include/core_cm3.h **** 
1087:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1088:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1089:./CMSIS/include/core_cm3.h **** 
1090:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1091:./CMSIS/include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1092:./CMSIS/include/core_cm3.h **** 
1093:./CMSIS/include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1094:./CMSIS/include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1095:./CMSIS/include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1096:./CMSIS/include/core_cm3.h **** 
1097:./CMSIS/include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1098:./CMSIS/include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1099:./CMSIS/include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1100:./CMSIS/include/core_cm3.h **** 
1101:./CMSIS/include/core_cm3.h **** /* TPI DEVID Register Definitions */
1102:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1103:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1104:./CMSIS/include/core_cm3.h **** 
1105:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1106:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1107:./CMSIS/include/core_cm3.h **** 
1108:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1109:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1110:./CMSIS/include/core_cm3.h **** 
1111:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1112:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1113:./CMSIS/include/core_cm3.h **** 
1114:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1115:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 21


1116:./CMSIS/include/core_cm3.h **** 
1117:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1118:./CMSIS/include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1119:./CMSIS/include/core_cm3.h **** 
1120:./CMSIS/include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1121:./CMSIS/include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1122:./CMSIS/include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1123:./CMSIS/include/core_cm3.h **** 
1124:./CMSIS/include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1125:./CMSIS/include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1126:./CMSIS/include/core_cm3.h **** 
1127:./CMSIS/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1128:./CMSIS/include/core_cm3.h **** 
1129:./CMSIS/include/core_cm3.h **** 
1130:./CMSIS/include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1131:./CMSIS/include/core_cm3.h **** /**
1132:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
1133:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1134:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1135:./CMSIS/include/core_cm3.h ****   @{
1136:./CMSIS/include/core_cm3.h ****  */
1137:./CMSIS/include/core_cm3.h **** 
1138:./CMSIS/include/core_cm3.h **** /**
1139:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1140:./CMSIS/include/core_cm3.h ****  */
1141:./CMSIS/include/core_cm3.h **** typedef struct
1142:./CMSIS/include/core_cm3.h **** {
1143:./CMSIS/include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1144:./CMSIS/include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1145:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1146:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1147:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1148:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1149:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1150:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1151:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1152:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1153:./CMSIS/include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1154:./CMSIS/include/core_cm3.h **** } MPU_Type;
1155:./CMSIS/include/core_cm3.h **** 
1156:./CMSIS/include/core_cm3.h **** /* MPU Type Register Definitions */
1157:./CMSIS/include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1158:./CMSIS/include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1159:./CMSIS/include/core_cm3.h **** 
1160:./CMSIS/include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1161:./CMSIS/include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1162:./CMSIS/include/core_cm3.h **** 
1163:./CMSIS/include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1164:./CMSIS/include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1165:./CMSIS/include/core_cm3.h **** 
1166:./CMSIS/include/core_cm3.h **** /* MPU Control Register Definitions */
1167:./CMSIS/include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1168:./CMSIS/include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1169:./CMSIS/include/core_cm3.h **** 
1170:./CMSIS/include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1171:./CMSIS/include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1172:./CMSIS/include/core_cm3.h **** 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 22


1173:./CMSIS/include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1174:./CMSIS/include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1175:./CMSIS/include/core_cm3.h **** 
1176:./CMSIS/include/core_cm3.h **** /* MPU Region Number Register Definitions */
1177:./CMSIS/include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1178:./CMSIS/include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1179:./CMSIS/include/core_cm3.h **** 
1180:./CMSIS/include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1181:./CMSIS/include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1182:./CMSIS/include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1183:./CMSIS/include/core_cm3.h **** 
1184:./CMSIS/include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1185:./CMSIS/include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1186:./CMSIS/include/core_cm3.h **** 
1187:./CMSIS/include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1188:./CMSIS/include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1189:./CMSIS/include/core_cm3.h **** 
1190:./CMSIS/include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1191:./CMSIS/include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1192:./CMSIS/include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1193:./CMSIS/include/core_cm3.h **** 
1194:./CMSIS/include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1195:./CMSIS/include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1196:./CMSIS/include/core_cm3.h **** 
1197:./CMSIS/include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1198:./CMSIS/include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1199:./CMSIS/include/core_cm3.h **** 
1200:./CMSIS/include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1201:./CMSIS/include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1202:./CMSIS/include/core_cm3.h **** 
1203:./CMSIS/include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1204:./CMSIS/include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1205:./CMSIS/include/core_cm3.h **** 
1206:./CMSIS/include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1207:./CMSIS/include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1208:./CMSIS/include/core_cm3.h **** 
1209:./CMSIS/include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1210:./CMSIS/include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1211:./CMSIS/include/core_cm3.h **** 
1212:./CMSIS/include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1213:./CMSIS/include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1214:./CMSIS/include/core_cm3.h **** 
1215:./CMSIS/include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1216:./CMSIS/include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1217:./CMSIS/include/core_cm3.h **** 
1218:./CMSIS/include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1219:./CMSIS/include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1220:./CMSIS/include/core_cm3.h **** 
1221:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1222:./CMSIS/include/core_cm3.h **** #endif
1223:./CMSIS/include/core_cm3.h **** 
1224:./CMSIS/include/core_cm3.h **** 
1225:./CMSIS/include/core_cm3.h **** /**
1226:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_core_register
1227:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1228:./CMSIS/include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1229:./CMSIS/include/core_cm3.h ****   @{
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 23


1230:./CMSIS/include/core_cm3.h ****  */
1231:./CMSIS/include/core_cm3.h **** 
1232:./CMSIS/include/core_cm3.h **** /**
1233:./CMSIS/include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1234:./CMSIS/include/core_cm3.h ****  */
1235:./CMSIS/include/core_cm3.h **** typedef struct
1236:./CMSIS/include/core_cm3.h **** {
1237:./CMSIS/include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1238:./CMSIS/include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1239:./CMSIS/include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1240:./CMSIS/include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1241:./CMSIS/include/core_cm3.h **** } CoreDebug_Type;
1242:./CMSIS/include/core_cm3.h **** 
1243:./CMSIS/include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1244:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1245:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1246:./CMSIS/include/core_cm3.h **** 
1247:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1248:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1249:./CMSIS/include/core_cm3.h **** 
1250:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1251:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1252:./CMSIS/include/core_cm3.h **** 
1253:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1254:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1255:./CMSIS/include/core_cm3.h **** 
1256:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1257:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1258:./CMSIS/include/core_cm3.h **** 
1259:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1260:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1261:./CMSIS/include/core_cm3.h **** 
1262:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1263:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1264:./CMSIS/include/core_cm3.h **** 
1265:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1266:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1267:./CMSIS/include/core_cm3.h **** 
1268:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1269:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1270:./CMSIS/include/core_cm3.h **** 
1271:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1272:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1273:./CMSIS/include/core_cm3.h **** 
1274:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1275:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1276:./CMSIS/include/core_cm3.h **** 
1277:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1278:./CMSIS/include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1279:./CMSIS/include/core_cm3.h **** 
1280:./CMSIS/include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1281:./CMSIS/include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1282:./CMSIS/include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1283:./CMSIS/include/core_cm3.h **** 
1284:./CMSIS/include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1285:./CMSIS/include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1286:./CMSIS/include/core_cm3.h **** 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 24


1287:./CMSIS/include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1288:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1289:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1290:./CMSIS/include/core_cm3.h **** 
1291:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1292:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1293:./CMSIS/include/core_cm3.h **** 
1294:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1295:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1296:./CMSIS/include/core_cm3.h **** 
1297:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1298:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1299:./CMSIS/include/core_cm3.h **** 
1300:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1301:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1302:./CMSIS/include/core_cm3.h **** 
1303:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1304:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1305:./CMSIS/include/core_cm3.h **** 
1306:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1307:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1308:./CMSIS/include/core_cm3.h **** 
1309:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1310:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1311:./CMSIS/include/core_cm3.h **** 
1312:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1313:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1314:./CMSIS/include/core_cm3.h **** 
1315:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1316:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1317:./CMSIS/include/core_cm3.h **** 
1318:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1319:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1320:./CMSIS/include/core_cm3.h **** 
1321:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1322:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1323:./CMSIS/include/core_cm3.h **** 
1324:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1325:./CMSIS/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1326:./CMSIS/include/core_cm3.h **** 
1327:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1328:./CMSIS/include/core_cm3.h **** 
1329:./CMSIS/include/core_cm3.h **** 
1330:./CMSIS/include/core_cm3.h **** /**
1331:./CMSIS/include/core_cm3.h ****   \ingroup    CMSIS_core_register
1332:./CMSIS/include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1333:./CMSIS/include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1334:./CMSIS/include/core_cm3.h ****   @{
1335:./CMSIS/include/core_cm3.h ****  */
1336:./CMSIS/include/core_cm3.h **** 
1337:./CMSIS/include/core_cm3.h **** /**
1338:./CMSIS/include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1339:./CMSIS/include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1340:./CMSIS/include/core_cm3.h ****   \param[in] value  Value of the bit field.
1341:./CMSIS/include/core_cm3.h ****   \return           Masked and shifted value.
1342:./CMSIS/include/core_cm3.h **** */
1343:./CMSIS/include/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 25


1344:./CMSIS/include/core_cm3.h **** 
1345:./CMSIS/include/core_cm3.h **** /**
1346:./CMSIS/include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1347:./CMSIS/include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:./CMSIS/include/core_cm3.h ****   \param[in] value  Value of register.
1349:./CMSIS/include/core_cm3.h ****   \return           Masked and shifted bit field value.
1350:./CMSIS/include/core_cm3.h **** */
1351:./CMSIS/include/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1352:./CMSIS/include/core_cm3.h **** 
1353:./CMSIS/include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1354:./CMSIS/include/core_cm3.h **** 
1355:./CMSIS/include/core_cm3.h **** 
1356:./CMSIS/include/core_cm3.h **** /**
1357:./CMSIS/include/core_cm3.h ****   \ingroup    CMSIS_core_register
1358:./CMSIS/include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1359:./CMSIS/include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1360:./CMSIS/include/core_cm3.h ****   @{
1361:./CMSIS/include/core_cm3.h ****  */
1362:./CMSIS/include/core_cm3.h **** 
1363:./CMSIS/include/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1364:./CMSIS/include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1365:./CMSIS/include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1366:./CMSIS/include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1367:./CMSIS/include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1368:./CMSIS/include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1369:./CMSIS/include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1370:./CMSIS/include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1371:./CMSIS/include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1372:./CMSIS/include/core_cm3.h **** 
1373:./CMSIS/include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1374:./CMSIS/include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1375:./CMSIS/include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1376:./CMSIS/include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1377:./CMSIS/include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1378:./CMSIS/include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1379:./CMSIS/include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1380:./CMSIS/include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1381:./CMSIS/include/core_cm3.h **** 
1382:./CMSIS/include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1383:./CMSIS/include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1384:./CMSIS/include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1385:./CMSIS/include/core_cm3.h **** #endif
1386:./CMSIS/include/core_cm3.h **** 
1387:./CMSIS/include/core_cm3.h **** /*@} */
1388:./CMSIS/include/core_cm3.h **** 
1389:./CMSIS/include/core_cm3.h **** 
1390:./CMSIS/include/core_cm3.h **** 
1391:./CMSIS/include/core_cm3.h **** /*******************************************************************************
1392:./CMSIS/include/core_cm3.h ****  *                Hardware Abstraction Layer
1393:./CMSIS/include/core_cm3.h ****   Core Function Interface contains:
1394:./CMSIS/include/core_cm3.h ****   - Core NVIC Functions
1395:./CMSIS/include/core_cm3.h ****   - Core SysTick Functions
1396:./CMSIS/include/core_cm3.h ****   - Core Debug Functions
1397:./CMSIS/include/core_cm3.h ****   - Core Register Access Functions
1398:./CMSIS/include/core_cm3.h ****  ******************************************************************************/
1399:./CMSIS/include/core_cm3.h **** /**
1400:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 26


1401:./CMSIS/include/core_cm3.h **** */
1402:./CMSIS/include/core_cm3.h **** 
1403:./CMSIS/include/core_cm3.h **** 
1404:./CMSIS/include/core_cm3.h **** 
1405:./CMSIS/include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1406:./CMSIS/include/core_cm3.h **** /**
1407:./CMSIS/include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1408:./CMSIS/include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1409:./CMSIS/include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1410:./CMSIS/include/core_cm3.h ****   @{
1411:./CMSIS/include/core_cm3.h ****  */
1412:./CMSIS/include/core_cm3.h **** 
1413:./CMSIS/include/core_cm3.h **** /**
1414:./CMSIS/include/core_cm3.h ****   \brief   Set Priority Grouping
1415:./CMSIS/include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1416:./CMSIS/include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1417:./CMSIS/include/core_cm3.h ****            Only values from 0..7 are used.
1418:./CMSIS/include/core_cm3.h ****            In case of a conflict between priority grouping and available
1419:./CMSIS/include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1420:./CMSIS/include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1421:./CMSIS/include/core_cm3.h ****  */
1422:./CMSIS/include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1423:./CMSIS/include/core_cm3.h **** {
1424:./CMSIS/include/core_cm3.h ****   uint32_t reg_value;
1425:./CMSIS/include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1426:./CMSIS/include/core_cm3.h **** 
1427:./CMSIS/include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1428:./CMSIS/include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1429:./CMSIS/include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1430:./CMSIS/include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1431:./CMSIS/include/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1432:./CMSIS/include/core_cm3.h ****   SCB->AIRCR =  reg_value;
1433:./CMSIS/include/core_cm3.h **** }
1434:./CMSIS/include/core_cm3.h **** 
1435:./CMSIS/include/core_cm3.h **** 
1436:./CMSIS/include/core_cm3.h **** /**
1437:./CMSIS/include/core_cm3.h ****   \brief   Get Priority Grouping
1438:./CMSIS/include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1439:./CMSIS/include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1440:./CMSIS/include/core_cm3.h ****  */
1441:./CMSIS/include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1442:./CMSIS/include/core_cm3.h **** {
1443:./CMSIS/include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1444:./CMSIS/include/core_cm3.h **** }
1445:./CMSIS/include/core_cm3.h **** 
1446:./CMSIS/include/core_cm3.h **** 
1447:./CMSIS/include/core_cm3.h **** /**
1448:./CMSIS/include/core_cm3.h ****   \brief   Enable External Interrupt
1449:./CMSIS/include/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1450:./CMSIS/include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1451:./CMSIS/include/core_cm3.h ****  */
1452:./CMSIS/include/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1453:./CMSIS/include/core_cm3.h **** {
  26              		.loc 2 1453 1
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 27


  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 7, -4
  34 0002 83B0     		sub	sp, sp, #12
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 0346     		mov	r3, r0
  39 0008 FB71     		strb	r3, [r7, #7]
1454:./CMSIS/include/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
  40              		.loc 2 1454 97
  41 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  42 000c 03F01F02 		and	r2, r3, #31
  43              		.loc 2 1454 7
  44 0010 0649     		ldr	r1, .L2
  45              		.loc 2 1454 16
  46 0012 97F90730 		ldrsb	r3, [r7, #7]
  47              		.loc 2 1454 41
  48 0016 5B09     		lsrs	r3, r3, #5
  49              		.loc 2 1454 52
  50 0018 0120     		movs	r0, #1
  51 001a 00FA02F2 		lsl	r2, r0, r2
  52              		.loc 2 1454 50
  53 001e 41F82320 		str	r2, [r1, r3, lsl #2]
1455:./CMSIS/include/core_cm3.h **** }
  54              		.loc 2 1455 1
  55 0022 00BF     		nop
  56 0024 0C37     		adds	r7, r7, #12
  57              		.cfi_def_cfa_offset 4
  58 0026 BD46     		mov	sp, r7
  59              		.cfi_def_cfa_register 13
  60              		@ sp needed
  61 0028 80BC     		pop	{r7}
  62              		.cfi_restore 7
  63              		.cfi_def_cfa_offset 0
  64 002a 7047     		bx	lr
  65              	.L3:
  66              		.align	2
  67              	.L2:
  68 002c 00E100E0 		.word	-536813312
  69              		.cfi_endproc
  70              	.LFE48:
  71              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  72              		.global	ComRXBuffer
  73              		.bss
  74              		.align	2
  75              		.type	ComRXBuffer, %object
  76              		.size	ComRXBuffer, 80
  77              	ComRXBuffer:
  78 0000 00000000 		.space	80
  78      00000000 
  78      00000000 
  78      00000000 
  78      00000000 
  79              		.global	ComTXBuffer
  80              		.align	2
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 28


  81              		.type	ComTXBuffer, %object
  82              		.size	ComTXBuffer, 80
  83              	ComTXBuffer:
  84 0050 00000000 		.space	80
  84      00000000 
  84      00000000 
  84      00000000 
  84      00000000 
  85              		.global	ComOpen
  86              		.align	2
  87              		.type	ComOpen, %object
  88              		.size	ComOpen, 4
  89              	ComOpen:
  90 00a0 00000000 		.space	4
  91              		.global	ComError
  92              		.align	2
  93              		.type	ComError, %object
  94              		.size	ComError, 4
  95              	ComError:
  96 00a4 00000000 		.space	4
  97              		.global	ComBusy
  98              		.align	2
  99              		.type	ComBusy, %object
 100              		.size	ComBusy, 4
 101              	ComBusy:
 102 00a8 00000000 		.space	4
 103              		.text
 104              		.align	1
 105              		.global	ReadCom
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 109              		.type	ReadCom, %function
 110              	ReadCom:
 111              	.LFB63:
   1:src/uart.c    **** 
   2:src/uart.c    **** #include "uart.h"
   3:src/uart.c    **** #include <stdint.h>
   4:src/uart.c    **** #include "stm32f1xx.h"
   5:src/uart.c    **** #include "globals.h"
   6:src/uart.c    **** 
   7:src/uart.c    **** 
   8:src/uart.c    **** // usart defines
   9:src/uart.c    **** #define USART_BAUD          115200
  10:src/uart.c    **** 
  11:src/uart.c    **** 
  12:src/uart.c    **** #define MAXBUFFER 64
  13:src/uart.c    **** typedef struct tagComBuffer
  14:src/uart.c    **** {
  15:src/uart.c    ****   unsigned char Buffer[MAXBUFFER];
  16:src/uart.c    ****   unsigned Head, Tail;
  17:src/uart.c    ****   unsigned Count;
  18:src/uart.c    ****   unsigned Ready;
  19:src/uart.c    **** } ComBuffer;
  20:src/uart.c    **** 
  21:src/uart.c    **** ComBuffer ComRXBuffer, ComTXBuffer;
  22:src/uart.c    **** int PutBuf(ComBuffer *Buf, unsigned char Data);
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 29


  23:src/uart.c    **** unsigned char GetBuf(ComBuffer *Buf);
  24:src/uart.c    **** unsigned GetBufCount(ComBuffer *Buf);
  25:src/uart.c    **** int ReadCom(int Max, unsigned char *Buffer);
  26:src/uart.c    **** int WriteCom(int Count, char *Buffer);
  27:src/uart.c    **** 
  28:src/uart.c    **** void usart_tx(void);
  29:src/uart.c    **** void usart_rx(void);
  30:src/uart.c    **** unsigned ComOpen;
  31:src/uart.c    **** unsigned ComError;
  32:src/uart.c    **** unsigned ComBusy;
  33:src/uart.c    **** 
  34:src/uart.c    **** int ReadCom(int Max, unsigned char *Buffer)
  35:src/uart.c    **** {
 112              		.loc 1 35 1
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 16
 115              		@ frame_needed = 1, uses_anonymous_args = 0
 116 0030 90B5     		push	{r4, r7, lr}
 117              		.cfi_def_cfa_offset 12
 118              		.cfi_offset 4, -12
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0032 85B0     		sub	sp, sp, #20
 122              		.cfi_def_cfa_offset 32
 123 0034 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
 125 0036 7860     		str	r0, [r7, #4]
 126 0038 3960     		str	r1, [r7]
  36:src/uart.c    ****   // Read up to Max bytes from the communications buffer
  37:src/uart.c    ****   // into Buffer.  Return number of bytes read
  38:src/uart.c    ****   unsigned i;
  39:src/uart.c    ****   if (!ComOpen)
 127              		.loc 1 39 7
 128 003a 174B     		ldr	r3, .L11
 129 003c 1B68     		ldr	r3, [r3]
 130              		.loc 1 39 6
 131 003e 002B     		cmp	r3, #0
 132 0040 02D1     		bne	.L5
  40:src/uart.c    ****     return (-1);
 133              		.loc 1 40 12
 134 0042 4FF0FF33 		mov	r3, #-1
 135 0046 23E0     		b	.L6
 136              	.L5:
  41:src/uart.c    ****   i = 0;
 137              		.loc 1 41 5
 138 0048 0023     		movs	r3, #0
 139 004a FB60     		str	r3, [r7, #12]
  42:src/uart.c    ****   while ((i < Max - 1) && (GetBufCount(&ComRXBuffer)))
 140              		.loc 1 42 9
 141 004c 09E0     		b	.L7
 142              	.L9:
  43:src/uart.c    ****     Buffer[i++] = GetBuf(&ComRXBuffer);
 143              		.loc 1 43 13
 144 004e FB68     		ldr	r3, [r7, #12]
 145 0050 5A1C     		adds	r2, r3, #1
 146 0052 FA60     		str	r2, [r7, #12]
 147              		.loc 1 43 11
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 30


 148 0054 3A68     		ldr	r2, [r7]
 149 0056 D418     		adds	r4, r2, r3
 150              		.loc 1 43 19
 151 0058 1048     		ldr	r0, .L11+4
 152 005a FFF7FEFF 		bl	GetBuf
 153 005e 0346     		mov	r3, r0
 154              		.loc 1 43 17 discriminator 1
 155 0060 2370     		strb	r3, [r4]
 156              	.L7:
  42:src/uart.c    ****   while ((i < Max - 1) && (GetBufCount(&ComRXBuffer)))
 157              		.loc 1 42 19
 158 0062 7B68     		ldr	r3, [r7, #4]
 159 0064 013B     		subs	r3, r3, #1
 160 0066 1A46     		mov	r2, r3
  42:src/uart.c    ****   while ((i < Max - 1) && (GetBufCount(&ComRXBuffer)))
 161              		.loc 1 42 24
 162 0068 FB68     		ldr	r3, [r7, #12]
 163 006a 9342     		cmp	r3, r2
 164 006c 05D2     		bcs	.L8
  42:src/uart.c    ****   while ((i < Max - 1) && (GetBufCount(&ComRXBuffer)))
 165              		.loc 1 42 28 discriminator 1
 166 006e 0B48     		ldr	r0, .L11+4
 167 0070 FFF7FEFF 		bl	GetBufCount
 168 0074 0346     		mov	r3, r0
  42:src/uart.c    ****   while ((i < Max - 1) && (GetBufCount(&ComRXBuffer)))
 169              		.loc 1 42 24 discriminator 1
 170 0076 002B     		cmp	r3, #0
 171 0078 E9D1     		bne	.L9
 172              	.L8:
  44:src/uart.c    ****   if (i > 0)
 173              		.loc 1 44 6
 174 007a FB68     		ldr	r3, [r7, #12]
 175 007c 002B     		cmp	r3, #0
 176 007e 06D0     		beq	.L10
  45:src/uart.c    ****   {
  46:src/uart.c    ****     Buffer[i] = 0;
 177              		.loc 1 46 11
 178 0080 3A68     		ldr	r2, [r7]
 179 0082 FB68     		ldr	r3, [r7, #12]
 180 0084 1344     		add	r3, r3, r2
 181              		.loc 1 46 15
 182 0086 0022     		movs	r2, #0
 183 0088 1A70     		strb	r2, [r3]
  47:src/uart.c    **** 
  48:src/uart.c    ****     return (i);
 184              		.loc 1 48 12
 185 008a FB68     		ldr	r3, [r7, #12]
 186 008c 00E0     		b	.L6
 187              	.L10:
  49:src/uart.c    ****   }
  50:src/uart.c    ****   else
  51:src/uart.c    ****   {
  52:src/uart.c    ****     return (0);
 188              		.loc 1 52 12
 189 008e 0023     		movs	r3, #0
 190              	.L6:
  53:src/uart.c    ****   }
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 31


  54:src/uart.c    **** };
 191              		.loc 1 54 1
 192 0090 1846     		mov	r0, r3
 193 0092 1437     		adds	r7, r7, #20
 194              		.cfi_def_cfa_offset 12
 195 0094 BD46     		mov	sp, r7
 196              		.cfi_def_cfa_register 13
 197              		@ sp needed
 198 0096 90BD     		pop	{r4, r7, pc}
 199              	.L12:
 200              		.align	2
 201              	.L11:
 202 0098 00000000 		.word	ComOpen
 203 009c 00000000 		.word	ComRXBuffer
 204              		.cfi_endproc
 205              	.LFE63:
 206              		.size	ReadCom, .-ReadCom
 207              		.align	1
 208              		.global	_write
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.type	_write, %function
 213              	_write:
 214              	.LFB64:
  55:src/uart.c    **** 
  56:src/uart.c    **** // Redirect standard output to the serial port
  57:src/uart.c    **** int _write(int file, char *ptr, int len)
  58:src/uart.c    **** {
 215              		.loc 1 58 1
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 24
 218              		@ frame_needed = 1, uses_anonymous_args = 0
 219              		@ link register save eliminated.
 220 00a0 80B4     		push	{r7}
 221              		.cfi_def_cfa_offset 4
 222              		.cfi_offset 7, -4
 223 00a2 87B0     		sub	sp, sp, #28
 224              		.cfi_def_cfa_offset 32
 225 00a4 00AF     		add	r7, sp, #0
 226              		.cfi_def_cfa_register 7
 227 00a6 F860     		str	r0, [r7, #12]
 228 00a8 B960     		str	r1, [r7, #8]
 229 00aa 7A60     		str	r2, [r7, #4]
  59:src/uart.c    **** 
  60:src/uart.c    ****   USART1->CR1 |= BIT3;
 230              		.loc 1 60 9
 231 00ac 114B     		ldr	r3, .L18
 232 00ae DB68     		ldr	r3, [r3, #12]
 233 00b0 104A     		ldr	r2, .L18
 234              		.loc 1 60 15
 235 00b2 43F00803 		orr	r3, r3, #8
 236 00b6 D360     		str	r3, [r2, #12]
 237              	.LBB2:
  61:src/uart.c    **** 
  62:src/uart.c    ****   for (int i = 0; i < len; i++)
 238              		.loc 1 62 12
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 32


 239 00b8 0023     		movs	r3, #0
 240 00ba 7B61     		str	r3, [r7, #20]
 241              		.loc 1 62 3
 242 00bc 0FE0     		b	.L14
 243              	.L16:
  63:src/uart.c    ****   {
  64:src/uart.c    **** 
  65:src/uart.c    ****     while (!(USART1->SR & USART_SR_TXE))
 244              		.loc 1 65 11
 245 00be 00BF     		nop
 246              	.L15:
 247              		.loc 1 65 20 discriminator 1
 248 00c0 0C4B     		ldr	r3, .L18
 249 00c2 1B68     		ldr	r3, [r3]
 250              		.loc 1 65 25 discriminator 1
 251 00c4 03F08003 		and	r3, r3, #128
 252              		.loc 1 65 12 discriminator 1
 253 00c8 002B     		cmp	r3, #0
 254 00ca F9D0     		beq	.L15
  66:src/uart.c    ****       ;
  67:src/uart.c    ****     USART1->DR = *ptr++;
 255              		.loc 1 67 22
 256 00cc BB68     		ldr	r3, [r7, #8]
 257 00ce 5A1C     		adds	r2, r3, #1
 258 00d0 BA60     		str	r2, [r7, #8]
 259              		.loc 1 67 18
 260 00d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 261              		.loc 1 67 11
 262 00d4 074B     		ldr	r3, .L18
 263              		.loc 1 67 16
 264 00d6 5A60     		str	r2, [r3, #4]
  62:src/uart.c    ****   {
 265              		.loc 1 62 29 discriminator 2
 266 00d8 7B69     		ldr	r3, [r7, #20]
 267 00da 0133     		adds	r3, r3, #1
 268 00dc 7B61     		str	r3, [r7, #20]
 269              	.L14:
  62:src/uart.c    ****   {
 270              		.loc 1 62 21 discriminator 1
 271 00de 7A69     		ldr	r2, [r7, #20]
 272 00e0 7B68     		ldr	r3, [r7, #4]
 273 00e2 9A42     		cmp	r2, r3
 274 00e4 EBDB     		blt	.L16
 275              	.LBE2:
  68:src/uart.c    ****   }
  69:src/uart.c    **** 
  70:src/uart.c    ****   return len;
 276              		.loc 1 70 10
 277 00e6 7B68     		ldr	r3, [r7, #4]
  71:src/uart.c    **** }
 278              		.loc 1 71 1
 279 00e8 1846     		mov	r0, r3
 280 00ea 1C37     		adds	r7, r7, #28
 281              		.cfi_def_cfa_offset 4
 282 00ec BD46     		mov	sp, r7
 283              		.cfi_def_cfa_register 13
 284              		@ sp needed
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 33


 285 00ee 80BC     		pop	{r7}
 286              		.cfi_restore 7
 287              		.cfi_def_cfa_offset 0
 288 00f0 7047     		bx	lr
 289              	.L19:
 290 00f2 00BF     		.align	2
 291              	.L18:
 292 00f4 00380140 		.word	1073821696
 293              		.cfi_endproc
 294              	.LFE64:
 295              		.size	_write, .-_write
 296              		.align	1
 297              		.global	WriteCom
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.type	WriteCom, %function
 302              	WriteCom:
 303              	.LFB65:
  72:src/uart.c    **** 
  73:src/uart.c    **** int WriteCom(int Count, char *Buffer)
  74:src/uart.c    **** {
 304              		.loc 1 74 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 16
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 00f8 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 00fa 84B0     		sub	sp, sp, #16
 313              		.cfi_def_cfa_offset 24
 314 00fc 00AF     		add	r7, sp, #0
 315              		.cfi_def_cfa_register 7
 316 00fe 7860     		str	r0, [r7, #4]
 317 0100 3960     		str	r1, [r7]
  75:src/uart.c    ****   // Writes Count bytes from Buffer into the the communications TX buffer
  76:src/uart.c    ****   // returns -1 if the port is not open (configured)
  77:src/uart.c    ****   // returns -2 if the message is too big to be sent
  78:src/uart.c    ****   // If the transmitter is idle it will initiate interrupts by
  79:src/uart.c    ****   // writing the first character to the hardware transmit buffer
  80:src/uart.c    ****   unsigned i, BufLen;
  81:src/uart.c    ****   if (!ComOpen)
 318              		.loc 1 81 7
 319 0102 1F4B     		ldr	r3, .L27
 320 0104 1B68     		ldr	r3, [r3]
 321              		.loc 1 81 6
 322 0106 002B     		cmp	r3, #0
 323 0108 02D1     		bne	.L21
  82:src/uart.c    ****     return (-1);
 324              		.loc 1 82 12
 325 010a 4FF0FF33 		mov	r3, #-1
 326 010e 32E0     		b	.L22
 327              	.L21:
  83:src/uart.c    ****   BufLen = GetBufCount(&ComTXBuffer);
 328              		.loc 1 83 12
 329 0110 1C48     		ldr	r0, .L27+4
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 34


 330 0112 FFF7FEFF 		bl	GetBufCount
 331 0116 B860     		str	r0, [r7, #8]
  84:src/uart.c    ****   if ((MAXBUFFER - BufLen) < Count)
 332              		.loc 1 84 18
 333 0118 BB68     		ldr	r3, [r7, #8]
 334 011a C3F14002 		rsb	r2, r3, #64
 335              		.loc 1 84 28
 336 011e 7B68     		ldr	r3, [r7, #4]
 337              		.loc 1 84 6
 338 0120 9A42     		cmp	r2, r3
 339 0122 02D2     		bcs	.L23
  85:src/uart.c    ****     return (-2);
 340              		.loc 1 85 12
 341 0124 6FF00103 		mvn	r3, #1
 342 0128 25E0     		b	.L22
 343              	.L23:
  86:src/uart.c    ****   for (i = 0; i < Count; i++)
 344              		.loc 1 86 10
 345 012a 0023     		movs	r3, #0
 346 012c FB60     		str	r3, [r7, #12]
 347              		.loc 1 86 3
 348 012e 0AE0     		b	.L24
 349              	.L25:
  87:src/uart.c    ****     PutBuf(&ComTXBuffer, Buffer[i]);
 350              		.loc 1 87 32
 351 0130 3A68     		ldr	r2, [r7]
 352 0132 FB68     		ldr	r3, [r7, #12]
 353 0134 1344     		add	r3, r3, r2
 354              		.loc 1 87 5
 355 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 356 0138 1946     		mov	r1, r3
 357 013a 1248     		ldr	r0, .L27+4
 358 013c FFF7FEFF 		bl	PutBuf
  86:src/uart.c    ****   for (i = 0; i < Count; i++)
 359              		.loc 1 86 27 discriminator 3
 360 0140 FB68     		ldr	r3, [r7, #12]
 361 0142 0133     		adds	r3, r3, #1
 362 0144 FB60     		str	r3, [r7, #12]
 363              	.L24:
  86:src/uart.c    ****   for (i = 0; i < Count; i++)
 364              		.loc 1 86 17 discriminator 1
 365 0146 7B68     		ldr	r3, [r7, #4]
 366 0148 FA68     		ldr	r2, [r7, #12]
 367 014a 9A42     		cmp	r2, r3
 368 014c F0D3     		bcc	.L25
  88:src/uart.c    **** 
  89:src/uart.c    ****   if ((USART1->CR1 & BIT3) == 0)
 369              		.loc 1 89 14
 370 014e 0E4B     		ldr	r3, .L27+8
 371 0150 DB68     		ldr	r3, [r3, #12]
 372              		.loc 1 89 20
 373 0152 03F00803 		and	r3, r3, #8
 374              		.loc 1 89 6
 375 0156 002B     		cmp	r3, #0
 376 0158 0CD1     		bne	.L26
  90:src/uart.c    ****   { // transmitter was idle, turn it on and force out first character
  91:src/uart.c    ****     USART1->CR1 |= BIT3;
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 35


 377              		.loc 1 91 11
 378 015a 0B4B     		ldr	r3, .L27+8
 379 015c DB68     		ldr	r3, [r3, #12]
 380 015e 0A4A     		ldr	r2, .L27+8
 381              		.loc 1 91 17
 382 0160 43F00803 		orr	r3, r3, #8
 383 0164 D360     		str	r3, [r2, #12]
  92:src/uart.c    ****     USART1->DR = GetBuf(&ComTXBuffer);
 384              		.loc 1 92 18
 385 0166 0748     		ldr	r0, .L27+4
 386 0168 FFF7FEFF 		bl	GetBuf
 387 016c 0346     		mov	r3, r0
 388 016e 1A46     		mov	r2, r3
 389              		.loc 1 92 11 discriminator 1
 390 0170 054B     		ldr	r3, .L27+8
 391              		.loc 1 92 16 discriminator 1
 392 0172 5A60     		str	r2, [r3, #4]
 393              	.L26:
  93:src/uart.c    ****   }
  94:src/uart.c    ****   return 0;
 394              		.loc 1 94 10
 395 0174 0023     		movs	r3, #0
 396              	.L22:
  95:src/uart.c    **** };
 397              		.loc 1 95 1
 398 0176 1846     		mov	r0, r3
 399 0178 1037     		adds	r7, r7, #16
 400              		.cfi_def_cfa_offset 8
 401 017a BD46     		mov	sp, r7
 402              		.cfi_def_cfa_register 13
 403              		@ sp needed
 404 017c 80BD     		pop	{r7, pc}
 405              	.L28:
 406 017e 00BF     		.align	2
 407              	.L27:
 408 0180 00000000 		.word	ComOpen
 409 0184 00000000 		.word	ComTXBuffer
 410 0188 00380140 		.word	1073821696
 411              		.cfi_endproc
 412              	.LFE65:
 413              		.size	WriteCom, .-WriteCom
 414              		.align	1
 415              		.global	init_uart
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.type	init_uart, %function
 420              	init_uart:
 421              	.LFB66:
  96:src/uart.c    **** 
  97:src/uart.c    **** void init_uart()
  98:src/uart.c    **** {
 422              		.loc 1 98 1
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 8
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 018c 80B5     		push	{r7, lr}
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 36


 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 018e 82B0     		sub	sp, sp, #8
 431              		.cfi_def_cfa_offset 16
 432 0190 00AF     		add	r7, sp, #0
 433              		.cfi_def_cfa_register 7
  99:src/uart.c    **** 
 100:src/uart.c    ****   ComRXBuffer.Head = ComRXBuffer.Tail = ComRXBuffer.Count = 0;
 434              		.loc 1 100 59
 435 0192 314B     		ldr	r3, .L30
 436 0194 0022     		movs	r2, #0
 437 0196 9A64     		str	r2, [r3, #72]
 438              		.loc 1 100 52
 439 0198 2F4B     		ldr	r3, .L30
 440 019a 9B6C     		ldr	r3, [r3, #72]
 441              		.loc 1 100 39
 442 019c 2E4A     		ldr	r2, .L30
 443 019e 5364     		str	r3, [r2, #68]
 444              		.loc 1 100 33
 445 01a0 2D4B     		ldr	r3, .L30
 446 01a2 5B6C     		ldr	r3, [r3, #68]
 447              		.loc 1 100 20
 448 01a4 2C4A     		ldr	r2, .L30
 449 01a6 1364     		str	r3, [r2, #64]
 101:src/uart.c    ****   ComTXBuffer.Head = ComTXBuffer.Tail = ComTXBuffer.Count = 0;
 450              		.loc 1 101 59
 451 01a8 2C4B     		ldr	r3, .L30+4
 452 01aa 0022     		movs	r2, #0
 453 01ac 9A64     		str	r2, [r3, #72]
 454              		.loc 1 101 52
 455 01ae 2B4B     		ldr	r3, .L30+4
 456 01b0 9B6C     		ldr	r3, [r3, #72]
 457              		.loc 1 101 39
 458 01b2 2A4A     		ldr	r2, .L30+4
 459 01b4 5364     		str	r3, [r2, #68]
 460              		.loc 1 101 33
 461 01b6 294B     		ldr	r3, .L30+4
 462 01b8 5B6C     		ldr	r3, [r3, #68]
 463              		.loc 1 101 20
 464 01ba 284A     		ldr	r2, .L30+4
 465 01bc 1364     		str	r3, [r2, #64]
 102:src/uart.c    ****    ComRXBuffer.Ready =  ComTXBuffer.Ready = 0;
 466              		.loc 1 102 43
 467 01be 274B     		ldr	r3, .L30+4
 468 01c0 0022     		movs	r2, #0
 469 01c2 DA64     		str	r2, [r3, #76]
 470              		.loc 1 102 36
 471 01c4 254B     		ldr	r3, .L30+4
 472 01c6 DB6C     		ldr	r3, [r3, #76]
 473              		.loc 1 102 22
 474 01c8 234A     		ldr	r2, .L30
 475 01ca D364     		str	r3, [r2, #76]
 103:src/uart.c    ****   ComOpen = 1;
 476              		.loc 1 103 11
 477 01cc 244B     		ldr	r3, .L30+8
 478 01ce 0122     		movs	r2, #1
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 37


 479 01d0 1A60     		str	r2, [r3]
 104:src/uart.c    ****   ComError = 0;
 480              		.loc 1 104 12
 481 01d2 244B     		ldr	r3, .L30+12
 482 01d4 0022     		movs	r2, #0
 483 01d6 1A60     		str	r2, [r3]
 105:src/uart.c    ****    // Enable clock for Port A, alternate functions and USART1
 106:src/uart.c    ****     RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;   // enable GPIOA clock
 484              		.loc 1 106 8
 485 01d8 234B     		ldr	r3, .L30+16
 486 01da 9B69     		ldr	r3, [r3, #24]
 487 01dc 224A     		ldr	r2, .L30+16
 488              		.loc 1 106 18
 489 01de 43F00403 		orr	r3, r3, #4
 490 01e2 9361     		str	r3, [r2, #24]
 107:src/uart.c    ****     RCC->APB2ENR |= RCC_APB2ENR_USART1EN; // enable USART1 clock
 491              		.loc 1 107 8
 492 01e4 204B     		ldr	r3, .L30+16
 493 01e6 9B69     		ldr	r3, [r3, #24]
 494 01e8 1F4A     		ldr	r2, .L30+16
 495              		.loc 1 107 18
 496 01ea 43F48043 		orr	r3, r3, #16384
 497 01ee 9361     		str	r3, [r2, #24]
 108:src/uart.c    **** 
 109:src/uart.c    ****     GPIOA->CRH &= ~(GPIO_CRH_CNF9 | GPIO_CRH_MODE9);   // reset PA9
 498              		.loc 1 109 10
 499 01f0 1E4B     		ldr	r3, .L30+20
 500 01f2 5B68     		ldr	r3, [r3, #4]
 501 01f4 1D4A     		ldr	r2, .L30+20
 502              		.loc 1 109 16
 503 01f6 23F0F003 		bic	r3, r3, #240
 504 01fa 5360     		str	r3, [r2, #4]
 110:src/uart.c    ****     GPIOA->CRH &= ~(GPIO_CRH_CNF10 | GPIO_CRH_MODE10); // reset PA10
 505              		.loc 1 110 10
 506 01fc 1B4B     		ldr	r3, .L30+20
 507 01fe 5B68     		ldr	r3, [r3, #4]
 508 0200 1A4A     		ldr	r2, .L30+20
 509              		.loc 1 110 16
 510 0202 23F47063 		bic	r3, r3, #3840
 511 0206 5360     		str	r3, [r2, #4]
 111:src/uart.c    **** 
 112:src/uart.c    ****     GPIOA->CRH |= GPIO_CRH_MODE9_1 | GPIO_CRH_MODE9_0; // 0b11 50MHz output
 512              		.loc 1 112 10
 513 0208 184B     		ldr	r3, .L30+20
 514 020a 5B68     		ldr	r3, [r3, #4]
 515 020c 174A     		ldr	r2, .L30+20
 516              		.loc 1 112 16
 517 020e 43F03003 		orr	r3, r3, #48
 518 0212 5360     		str	r3, [r2, #4]
 113:src/uart.c    ****     GPIOA->CRH |= GPIO_CRH_CNF9_1;                     // PA9: output @ 50MHz - Alt-function Push-p
 519              		.loc 1 113 10
 520 0214 154B     		ldr	r3, .L30+20
 521 0216 5B68     		ldr	r3, [r3, #4]
 522 0218 144A     		ldr	r2, .L30+20
 523              		.loc 1 113 16
 524 021a 43F08003 		orr	r3, r3, #128
 525 021e 5360     		str	r3, [r2, #4]
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 38


 114:src/uart.c    ****     GPIOA->CRH |= GPIO_CRH_CNF10_0;                    // PA10 RX - Mode = 0b00 (input) - CNF = 0b0
 526              		.loc 1 114 10
 527 0220 124B     		ldr	r3, .L30+20
 528 0222 5B68     		ldr	r3, [r3, #4]
 529 0224 114A     		ldr	r2, .L30+20
 530              		.loc 1 114 16
 531 0226 43F48063 		orr	r3, r3, #1024
 532 022a 5360     		str	r3, [r2, #4]
 115:src/uart.c    **** 
 116:src/uart.c    ****     // configure USART1 registers
 117:src/uart.c    ****     uint32_t baud = (uint32_t)(SystemCoreClock / USART_BAUD );
 533              		.loc 1 117 21
 534 022c 104B     		ldr	r3, .L30+24
 535 022e 1B68     		ldr	r3, [r3]
 536              		.loc 1 117 14
 537 0230 104A     		ldr	r2, .L30+28
 538 0232 A2FB0323 		umull	r2, r3, r2, r3
 539 0236 1B0C     		lsrs	r3, r3, #16
 540 0238 7B60     		str	r3, [r7, #4]
 118:src/uart.c    ****     USART1->BRR = baud;
 541              		.loc 1 118 11
 542 023a 0F4A     		ldr	r2, .L30+32
 543              		.loc 1 118 17
 544 023c 7B68     		ldr	r3, [r7, #4]
 545 023e 9360     		str	r3, [r2, #8]
 119:src/uart.c    ****     USART1->CR1 = USART_CR1_TE | USART_CR1_RE | USART_CR1_RXNEIE | USART_CR1_UE;
 546              		.loc 1 119 11
 547 0240 0D4B     		ldr	r3, .L30+32
 548              		.loc 1 119 17
 549 0242 42F22C02 		movw	r2, #8236
 550 0246 DA60     		str	r2, [r3, #12]
 120:src/uart.c    **** 
 121:src/uart.c    ****     // configure NVIC
 122:src/uart.c    ****     NVIC_EnableIRQ(USART1_IRQn);
 551              		.loc 1 122 5
 552 0248 2520     		movs	r0, #37
 553 024a FFF7D9FE 		bl	NVIC_EnableIRQ
 123:src/uart.c    **** 
 124:src/uart.c    **** }
 554              		.loc 1 124 1
 555 024e 00BF     		nop
 556 0250 0837     		adds	r7, r7, #8
 557              		.cfi_def_cfa_offset 8
 558 0252 BD46     		mov	sp, r7
 559              		.cfi_def_cfa_register 13
 560              		@ sp needed
 561 0254 80BD     		pop	{r7, pc}
 562              	.L31:
 563 0256 00BF     		.align	2
 564              	.L30:
 565 0258 00000000 		.word	ComRXBuffer
 566 025c 00000000 		.word	ComTXBuffer
 567 0260 00000000 		.word	ComOpen
 568 0264 00000000 		.word	ComError
 569 0268 00100240 		.word	1073876992
 570 026c 00080140 		.word	1073809408
 571 0270 00000000 		.word	SystemCoreClock
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 39


 572 0274 C5B3A291 		.word	-1851608123
 573 0278 00380140 		.word	1073821696
 574              		.cfi_endproc
 575              	.LFE66:
 576              		.size	init_uart, .-init_uart
 577              		.align	1
 578              		.global	USART1_IRQHandler
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 582              		.type	USART1_IRQHandler, %function
 583              	USART1_IRQHandler:
 584              	.LFB67:
 125:src/uart.c    **** 
 126:src/uart.c    **** 
 127:src/uart.c    **** 
 128:src/uart.c    **** 
 129:src/uart.c    **** // called after each received character
 130:src/uart.c    **** void USART1_IRQHandler()
 131:src/uart.c    **** {
 585              		.loc 1 131 1
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 1, uses_anonymous_args = 0
 589 027c 80B5     		push	{r7, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 7, -8
 592              		.cfi_offset 14, -4
 593 027e 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
 132:src/uart.c    ****   // check which interrupt happened.
 133:src/uart.c    ****   if (USART1->SR & BIT6) // is it a TXE interrupt?
 595              		.loc 1 133 13
 596 0280 084B     		ldr	r3, .L36
 597 0282 1B68     		ldr	r3, [r3]
 598              		.loc 1 133 18
 599 0284 03F04003 		and	r3, r3, #64
 600              		.loc 1 133 6
 601 0288 002B     		cmp	r3, #0
 602 028a 01D0     		beq	.L33
 134:src/uart.c    ****     usart_tx();
 603              		.loc 1 134 5
 604 028c FFF7FEFF 		bl	usart_tx
 605              	.L33:
 135:src/uart.c    ****   if (USART1->SR & BIT5) // is it an RXNE interrupt?
 606              		.loc 1 135 13
 607 0290 044B     		ldr	r3, .L36
 608 0292 1B68     		ldr	r3, [r3]
 609              		.loc 1 135 18
 610 0294 03F02003 		and	r3, r3, #32
 611              		.loc 1 135 6
 612 0298 002B     		cmp	r3, #0
 613 029a 01D0     		beq	.L35
 136:src/uart.c    ****     usart_rx();
 614              		.loc 1 136 5
 615 029c FFF7FEFF 		bl	usart_rx
 616              	.L35:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 40


 137:src/uart.c    **** }
 617              		.loc 1 137 1
 618 02a0 00BF     		nop
 619 02a2 80BD     		pop	{r7, pc}
 620              	.L37:
 621              		.align	2
 622              	.L36:
 623 02a4 00380140 		.word	1073821696
 624              		.cfi_endproc
 625              	.LFE67:
 626              		.size	USART1_IRQHandler, .-USART1_IRQHandler
 627              		.align	1
 628              		.global	usart_rx
 629              		.syntax unified
 630              		.thumb
 631              		.thumb_func
 632              		.type	usart_rx, %function
 633              	usart_rx:
 634              	.LFB68:
 138:src/uart.c    **** 
 139:src/uart.c    **** 
 140:src/uart.c    **** 
 141:src/uart.c    **** 
 142:src/uart.c    **** void usart_rx(void)
 143:src/uart.c    **** {
 635              		.loc 1 143 1
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639 02a8 80B5     		push	{r7, lr}
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 7, -8
 642              		.cfi_offset 14, -4
 643 02aa 00AF     		add	r7, sp, #0
 644              		.cfi_def_cfa_register 7
 144:src/uart.c    ****   // printf("in: %d \n", USART1->DR);
 145:src/uart.c    ****   // Handles serial comms reception
 146:src/uart.c    ****   // simply puts the data into the buffer and sets the ComError flag
 147:src/uart.c    ****   // if the buffer is fullup
 148:src/uart.c    ****   if (PutBuf(&ComRXBuffer, USART1->DR))
 645              		.loc 1 148 34
 646 02ac 074B     		ldr	r3, .L41
 647 02ae 5B68     		ldr	r3, [r3, #4]
 648              		.loc 1 148 7
 649 02b0 DBB2     		uxtb	r3, r3
 650 02b2 1946     		mov	r1, r3
 651 02b4 0648     		ldr	r0, .L41+4
 652 02b6 FFF7FEFF 		bl	PutBuf
 653 02ba 0346     		mov	r3, r0
 654              		.loc 1 148 6 discriminator 1
 655 02bc 002B     		cmp	r3, #0
 656 02be 02D0     		beq	.L40
 149:src/uart.c    ****     ComError = 1; // if PutBuf returns a non-zero value then there is an error
 657              		.loc 1 149 14
 658 02c0 044B     		ldr	r3, .L41+8
 659 02c2 0122     		movs	r2, #1
 660 02c4 1A60     		str	r2, [r3]
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 41


 661              	.L40:
 150:src/uart.c    **** }
 662              		.loc 1 150 1
 663 02c6 00BF     		nop
 664 02c8 80BD     		pop	{r7, pc}
 665              	.L42:
 666 02ca 00BF     		.align	2
 667              	.L41:
 668 02cc 00380140 		.word	1073821696
 669 02d0 00000000 		.word	ComRXBuffer
 670 02d4 00000000 		.word	ComError
 671              		.cfi_endproc
 672              	.LFE68:
 673              		.size	usart_rx, .-usart_rx
 674              		.align	1
 675              		.global	usart_tx
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 679              		.type	usart_tx, %function
 680              	usart_tx:
 681              	.LFB69:
 151:src/uart.c    **** void usart_tx(void)
 152:src/uart.c    **** {
 682              		.loc 1 152 1
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 1, uses_anonymous_args = 0
 686 02d8 80B5     		push	{r7, lr}
 687              		.cfi_def_cfa_offset 8
 688              		.cfi_offset 7, -8
 689              		.cfi_offset 14, -4
 690 02da 00AF     		add	r7, sp, #0
 691              		.cfi_def_cfa_register 7
 153:src/uart.c    ****  
 154:src/uart.c    ****   // Handles serial comms transmission
 155:src/uart.c    ****   // When the transmitter is idle, this is called and the next byte
 156:src/uart.c    ****   // is sent (if there is one)
 157:src/uart.c    ****   if (GetBufCount(&ComTXBuffer))
 692              		.loc 1 157 7
 693 02dc 1048     		ldr	r0, .L47
 694 02de FFF7FEFF 		bl	GetBufCount
 695 02e2 0346     		mov	r3, r0
 696              		.loc 1 157 6 discriminator 1
 697 02e4 002B     		cmp	r3, #0
 698 02e6 07D0     		beq	.L44
 158:src/uart.c    ****     USART1->DR = GetBuf(&ComTXBuffer);
 699              		.loc 1 158 18
 700 02e8 0D48     		ldr	r0, .L47
 701 02ea FFF7FEFF 		bl	GetBuf
 702 02ee 0346     		mov	r3, r0
 703 02f0 1A46     		mov	r2, r3
 704              		.loc 1 158 11 discriminator 1
 705 02f2 0C4B     		ldr	r3, .L47+4
 706              		.loc 1 158 16 discriminator 1
 707 02f4 5A60     		str	r2, [r3, #4]
 159:src/uart.c    ****   else
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 42


 160:src/uart.c    ****   {
 161:src/uart.c    ****     // No more data, disable the transmitter
 162:src/uart.c    ****     USART1->CR1 &= ~BIT3;
 163:src/uart.c    ****     if (USART1->SR & BIT6)
 164:src/uart.c    ****       // Clear the TC interrupt flag
 165:src/uart.c    ****       USART1->SR &= ~BIT6;
 166:src/uart.c    ****   }
 167:src/uart.c    **** }
 708              		.loc 1 167 1
 709 02f6 11E0     		b	.L46
 710              	.L44:
 162:src/uart.c    ****     if (USART1->SR & BIT6)
 711              		.loc 1 162 11
 712 02f8 0A4B     		ldr	r3, .L47+4
 713 02fa DB68     		ldr	r3, [r3, #12]
 714 02fc 094A     		ldr	r2, .L47+4
 162:src/uart.c    ****     if (USART1->SR & BIT6)
 715              		.loc 1 162 17
 716 02fe 23F00803 		bic	r3, r3, #8
 717 0302 D360     		str	r3, [r2, #12]
 163:src/uart.c    ****       // Clear the TC interrupt flag
 718              		.loc 1 163 15
 719 0304 074B     		ldr	r3, .L47+4
 720 0306 1B68     		ldr	r3, [r3]
 163:src/uart.c    ****       // Clear the TC interrupt flag
 721              		.loc 1 163 20
 722 0308 03F04003 		and	r3, r3, #64
 163:src/uart.c    ****       // Clear the TC interrupt flag
 723              		.loc 1 163 8
 724 030c 002B     		cmp	r3, #0
 725 030e 05D0     		beq	.L46
 165:src/uart.c    ****   }
 726              		.loc 1 165 13
 727 0310 044B     		ldr	r3, .L47+4
 728 0312 1B68     		ldr	r3, [r3]
 729 0314 034A     		ldr	r2, .L47+4
 165:src/uart.c    ****   }
 730              		.loc 1 165 18
 731 0316 23F04003 		bic	r3, r3, #64
 732 031a 1360     		str	r3, [r2]
 733              	.L46:
 734              		.loc 1 167 1
 735 031c 00BF     		nop
 736 031e 80BD     		pop	{r7, pc}
 737              	.L48:
 738              		.align	2
 739              	.L47:
 740 0320 00000000 		.word	ComTXBuffer
 741 0324 00380140 		.word	1073821696
 742              		.cfi_endproc
 743              	.LFE69:
 744              		.size	usart_tx, .-usart_tx
 745              		.align	1
 746              		.global	PutBuf
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 43


 750              		.type	PutBuf, %function
 751              	PutBuf:
 752              	.LFB70:
 168:src/uart.c    **** int PutBuf(ComBuffer *Buf, unsigned char Data)
 169:src/uart.c    **** {
 753              		.loc 1 169 1
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 8
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758 0328 80B4     		push	{r7}
 759              		.cfi_def_cfa_offset 4
 760              		.cfi_offset 7, -4
 761 032a 83B0     		sub	sp, sp, #12
 762              		.cfi_def_cfa_offset 16
 763 032c 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 765 032e 7860     		str	r0, [r7, #4]
 766 0330 0B46     		mov	r3, r1
 767 0332 FB70     		strb	r3, [r7, #3]
 170:src/uart.c    ****   if ((Buf->Head == Buf->Tail) && (Buf->Count != 0))
 768              		.loc 1 170 11
 769 0334 7B68     		ldr	r3, [r7, #4]
 770 0336 1A6C     		ldr	r2, [r3, #64]
 771              		.loc 1 170 24
 772 0338 7B68     		ldr	r3, [r7, #4]
 773 033a 5B6C     		ldr	r3, [r3, #68]
 774              		.loc 1 170 6
 775 033c 9A42     		cmp	r2, r3
 776 033e 05D1     		bne	.L50
 777              		.loc 1 170 39 discriminator 1
 778 0340 7B68     		ldr	r3, [r7, #4]
 779 0342 9B6C     		ldr	r3, [r3, #72]
 780              		.loc 1 170 32 discriminator 1
 781 0344 002B     		cmp	r3, #0
 782 0346 01D0     		beq	.L50
 171:src/uart.c    ****     return (1); /* OverFlow */
 783              		.loc 1 171 12
 784 0348 0123     		movs	r3, #1
 785 034a 1CE0     		b	.L51
 786              	.L50:
 172:src/uart.c    ****   if(Data == NEWLINE)  ComRXBuffer.Ready = 1;
 787              		.loc 1 172 5
 788 034c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 789 034e 0A2B     		cmp	r3, #10
 790 0350 02D1     		bne	.L52
 791              		.loc 1 172 42 discriminator 1
 792 0352 0F4B     		ldr	r3, .L54
 793 0354 0122     		movs	r2, #1
 794 0356 DA64     		str	r2, [r3, #76]
 795              	.L52:
 173:src/uart.c    ****   disable_interrupts();
 796              		.loc 1 173 3
 797              		.syntax unified
 798              	@ 173 "src/uart.c" 1
 799 0358 72B6     		 cpsid i 
 800              	@ 0 "" 2
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 44


 174:src/uart.c    ****   Buf->Buffer[Buf->Head++] = Data;
 801              		.loc 1 174 18
 802              		.thumb
 803              		.syntax unified
 804 035a 7B68     		ldr	r3, [r7, #4]
 805 035c 1B6C     		ldr	r3, [r3, #64]
 806              		.loc 1 174 24
 807 035e 591C     		adds	r1, r3, #1
 808 0360 7A68     		ldr	r2, [r7, #4]
 809 0362 1164     		str	r1, [r2, #64]
 810              		.loc 1 174 28
 811 0364 7A68     		ldr	r2, [r7, #4]
 812 0366 F978     		ldrb	r1, [r7, #3]
 813 0368 D154     		strb	r1, [r2, r3]
 175:src/uart.c    ****   Buf->Count++;
 814              		.loc 1 175 6
 815 036a 7B68     		ldr	r3, [r7, #4]
 816 036c 9B6C     		ldr	r3, [r3, #72]
 817              		.loc 1 175 13
 818 036e 5A1C     		adds	r2, r3, #1
 819 0370 7B68     		ldr	r3, [r7, #4]
 820 0372 9A64     		str	r2, [r3, #72]
 176:src/uart.c    **** 
 177:src/uart.c    ****   // printf("%d\n",Buf->Count);
 178:src/uart.c    ****   if (Buf->Head == MAXBUFFER)
 821              		.loc 1 178 10
 822 0374 7B68     		ldr	r3, [r7, #4]
 823 0376 1B6C     		ldr	r3, [r3, #64]
 824              		.loc 1 178 6
 825 0378 402B     		cmp	r3, #64
 826 037a 02D1     		bne	.L53
 179:src/uart.c    ****     Buf->Head = 0;
 827              		.loc 1 179 15
 828 037c 7B68     		ldr	r3, [r7, #4]
 829 037e 0022     		movs	r2, #0
 830 0380 1A64     		str	r2, [r3, #64]
 831              	.L53:
 180:src/uart.c    ****   enable_interrupts();
 832              		.loc 1 180 3
 833              		.syntax unified
 834              	@ 180 "src/uart.c" 1
 835 0382 62B6     		 cpsie i 
 836              	@ 0 "" 2
 181:src/uart.c    ****   return (0);
 837              		.loc 1 181 10
 838              		.thumb
 839              		.syntax unified
 840 0384 0023     		movs	r3, #0
 841              	.L51:
 182:src/uart.c    **** };
 842              		.loc 1 182 1
 843 0386 1846     		mov	r0, r3
 844 0388 0C37     		adds	r7, r7, #12
 845              		.cfi_def_cfa_offset 4
 846 038a BD46     		mov	sp, r7
 847              		.cfi_def_cfa_register 13
 848              		@ sp needed
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 45


 849 038c 80BC     		pop	{r7}
 850              		.cfi_restore 7
 851              		.cfi_def_cfa_offset 0
 852 038e 7047     		bx	lr
 853              	.L55:
 854              		.align	2
 855              	.L54:
 856 0390 00000000 		.word	ComRXBuffer
 857              		.cfi_endproc
 858              	.LFE70:
 859              		.size	PutBuf, .-PutBuf
 860              		.align	1
 861              		.global	GetBuf
 862              		.syntax unified
 863              		.thumb
 864              		.thumb_func
 865              		.type	GetBuf, %function
 866              	GetBuf:
 867              	.LFB71:
 183:src/uart.c    **** unsigned char GetBuf(ComBuffer *Buf)
 184:src/uart.c    **** {
 868              		.loc 1 184 1
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 16
 871              		@ frame_needed = 1, uses_anonymous_args = 0
 872              		@ link register save eliminated.
 873 0394 80B4     		push	{r7}
 874              		.cfi_def_cfa_offset 4
 875              		.cfi_offset 7, -4
 876 0396 85B0     		sub	sp, sp, #20
 877              		.cfi_def_cfa_offset 24
 878 0398 00AF     		add	r7, sp, #0
 879              		.cfi_def_cfa_register 7
 880 039a 7860     		str	r0, [r7, #4]
 185:src/uart.c    ****   unsigned char Data;
 186:src/uart.c    ****   if (Buf->Count == 0)
 881              		.loc 1 186 10
 882 039c 7B68     		ldr	r3, [r7, #4]
 883 039e 9B6C     		ldr	r3, [r3, #72]
 884              		.loc 1 186 6
 885 03a0 002B     		cmp	r3, #0
 886 03a2 01D1     		bne	.L57
 187:src/uart.c    ****     return (0);
 887              		.loc 1 187 12
 888 03a4 0023     		movs	r3, #0
 889 03a6 16E0     		b	.L58
 890              	.L57:
 188:src/uart.c    ****   disable_interrupts();
 891              		.loc 1 188 3
 892              		.syntax unified
 893              	@ 188 "src/uart.c" 1
 894 03a8 72B6     		 cpsid i 
 895              	@ 0 "" 2
 189:src/uart.c    ****   Data = Buf->Buffer[Buf->Tail++];
 896              		.loc 1 189 25
 897              		.thumb
 898              		.syntax unified
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 46


 899 03aa 7B68     		ldr	r3, [r7, #4]
 900 03ac 5B6C     		ldr	r3, [r3, #68]
 901              		.loc 1 189 31
 902 03ae 591C     		adds	r1, r3, #1
 903 03b0 7A68     		ldr	r2, [r7, #4]
 904 03b2 5164     		str	r1, [r2, #68]
 905              		.loc 1 189 8
 906 03b4 7A68     		ldr	r2, [r7, #4]
 907 03b6 D35C     		ldrb	r3, [r2, r3]
 908 03b8 FB73     		strb	r3, [r7, #15]
 190:src/uart.c    ****   if (Buf->Tail == MAXBUFFER)
 909              		.loc 1 190 10
 910 03ba 7B68     		ldr	r3, [r7, #4]
 911 03bc 5B6C     		ldr	r3, [r3, #68]
 912              		.loc 1 190 6
 913 03be 402B     		cmp	r3, #64
 914 03c0 02D1     		bne	.L59
 191:src/uart.c    ****     Buf->Tail = 0;
 915              		.loc 1 191 15
 916 03c2 7B68     		ldr	r3, [r7, #4]
 917 03c4 0022     		movs	r2, #0
 918 03c6 5A64     		str	r2, [r3, #68]
 919              	.L59:
 192:src/uart.c    ****   Buf->Count--;
 920              		.loc 1 192 6
 921 03c8 7B68     		ldr	r3, [r7, #4]
 922 03ca 9B6C     		ldr	r3, [r3, #72]
 923              		.loc 1 192 13
 924 03cc 5A1E     		subs	r2, r3, #1
 925 03ce 7B68     		ldr	r3, [r7, #4]
 926 03d0 9A64     		str	r2, [r3, #72]
 193:src/uart.c    ****   enable_interrupts();
 927              		.loc 1 193 3
 928              		.syntax unified
 929              	@ 193 "src/uart.c" 1
 930 03d2 62B6     		 cpsie i 
 931              	@ 0 "" 2
 194:src/uart.c    ****   return (Data);
 932              		.loc 1 194 10
 933              		.thumb
 934              		.syntax unified
 935 03d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 936              	.L58:
 195:src/uart.c    **** };
 937              		.loc 1 195 1
 938 03d6 1846     		mov	r0, r3
 939 03d8 1437     		adds	r7, r7, #20
 940              		.cfi_def_cfa_offset 4
 941 03da BD46     		mov	sp, r7
 942              		.cfi_def_cfa_register 13
 943              		@ sp needed
 944 03dc 80BC     		pop	{r7}
 945              		.cfi_restore 7
 946              		.cfi_def_cfa_offset 0
 947 03de 7047     		bx	lr
 948              		.cfi_endproc
 949              	.LFE71:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 47


 950              		.size	GetBuf, .-GetBuf
 951              		.align	1
 952              		.global	GetBufCount
 953              		.syntax unified
 954              		.thumb
 955              		.thumb_func
 956              		.type	GetBufCount, %function
 957              	GetBufCount:
 958              	.LFB72:
 196:src/uart.c    **** unsigned int GetBufCount(ComBuffer *Buf)
 197:src/uart.c    **** {
 959              		.loc 1 197 1
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 8
 962              		@ frame_needed = 1, uses_anonymous_args = 0
 963              		@ link register save eliminated.
 964 03e0 80B4     		push	{r7}
 965              		.cfi_def_cfa_offset 4
 966              		.cfi_offset 7, -4
 967 03e2 83B0     		sub	sp, sp, #12
 968              		.cfi_def_cfa_offset 16
 969 03e4 00AF     		add	r7, sp, #0
 970              		.cfi_def_cfa_register 7
 971 03e6 7860     		str	r0, [r7, #4]
 198:src/uart.c    ****   return Buf->Count;
 972              		.loc 1 198 13
 973 03e8 7B68     		ldr	r3, [r7, #4]
 974 03ea 9B6C     		ldr	r3, [r3, #72]
 199:src/uart.c    **** };
 975              		.loc 1 199 1
 976 03ec 1846     		mov	r0, r3
 977 03ee 0C37     		adds	r7, r7, #12
 978              		.cfi_def_cfa_offset 4
 979 03f0 BD46     		mov	sp, r7
 980              		.cfi_def_cfa_register 13
 981              		@ sp needed
 982 03f2 80BC     		pop	{r7}
 983              		.cfi_restore 7
 984              		.cfi_def_cfa_offset 0
 985 03f4 7047     		bx	lr
 986              		.cfi_endproc
 987              	.LFE72:
 988              		.size	GetBufCount, .-GetBufCount
 989              		.align	1
 990              		.global	rxAvailable
 991              		.syntax unified
 992              		.thumb
 993              		.thumb_func
 994              		.type	rxAvailable, %function
 995              	rxAvailable:
 996              	.LFB73:
 200:src/uart.c    **** 
 201:src/uart.c    **** int rxAvailable()
 202:src/uart.c    **** {
 997              		.loc 1 202 1
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 48


 1000              		@ frame_needed = 1, uses_anonymous_args = 0
 1001              		@ link register save eliminated.
 1002 03f6 80B4     		push	{r7}
 1003              		.cfi_def_cfa_offset 4
 1004              		.cfi_offset 7, -4
 1005 03f8 00AF     		add	r7, sp, #0
 1006              		.cfi_def_cfa_register 7
 203:src/uart.c    ****   return  ComRXBuffer.Ready;
 1007              		.loc 1 203 22
 1008 03fa 034B     		ldr	r3, .L64
 1009 03fc DB6C     		ldr	r3, [r3, #76]
 204:src/uart.c    **** }
 1010              		.loc 1 204 1
 1011 03fe 1846     		mov	r0, r3
 1012 0400 BD46     		mov	sp, r7
 1013              		.cfi_def_cfa_register 13
 1014              		@ sp needed
 1015 0402 80BC     		pop	{r7}
 1016              		.cfi_restore 7
 1017              		.cfi_def_cfa_offset 0
 1018 0404 7047     		bx	lr
 1019              	.L65:
 1020 0406 00BF     		.align	2
 1021              	.L64:
 1022 0408 00000000 		.word	ComRXBuffer
 1023              		.cfi_endproc
 1024              	.LFE73:
 1025              		.size	rxAvailable, .-rxAvailable
 1026              		.align	1
 1027              		.global	eputs
 1028              		.syntax unified
 1029              		.thumb
 1030              		.thumb_func
 1031              		.type	eputs, %function
 1032              	eputs:
 1033              	.LFB74:
 205:src/uart.c    **** 
 206:src/uart.c    **** int eputs(char *s)
 207:src/uart.c    **** {
 1034              		.loc 1 207 1
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 8
 1037              		@ frame_needed = 1, uses_anonymous_args = 0
 1038 040c 80B5     		push	{r7, lr}
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 7, -8
 1041              		.cfi_offset 14, -4
 1042 040e 82B0     		sub	sp, sp, #8
 1043              		.cfi_def_cfa_offset 16
 1044 0410 00AF     		add	r7, sp, #0
 1045              		.cfi_def_cfa_register 7
 1046 0412 7860     		str	r0, [r7, #4]
 208:src/uart.c    **** 
 209:src/uart.c    ****   // only writes to the comms port at the moment
 210:src/uart.c    ****   if (!ComOpen)
 1047              		.loc 1 210 7
 1048 0414 0B4B     		ldr	r3, .L71
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 49


 1049 0416 1B68     		ldr	r3, [r3]
 1050              		.loc 1 210 6
 1051 0418 002B     		cmp	r3, #0
 1052 041a 09D1     		bne	.L69
 211:src/uart.c    ****     return -1;
 1053              		.loc 1 211 12
 1054 041c 4FF0FF33 		mov	r3, #-1
 1055 0420 0BE0     		b	.L68
 1056              	.L70:
 212:src/uart.c    ****   while (*s)
 213:src/uart.c    ****   {
 214:src/uart.c    ****     //printf("test: %c\n",s);
 215:src/uart.c    ****     WriteCom(1, s++);
 1057              		.loc 1 215 5
 1058 0422 7B68     		ldr	r3, [r7, #4]
 1059 0424 5A1C     		adds	r2, r3, #1
 1060 0426 7A60     		str	r2, [r7, #4]
 1061 0428 1946     		mov	r1, r3
 1062 042a 0120     		movs	r0, #1
 1063 042c FFF7FEFF 		bl	WriteCom
 1064              	.L69:
 212:src/uart.c    ****   while (*s)
 1065              		.loc 1 212 10
 1066 0430 7B68     		ldr	r3, [r7, #4]
 1067 0432 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1068 0434 002B     		cmp	r3, #0
 1069 0436 F4D1     		bne	.L70
 216:src/uart.c    ****   }
 217:src/uart.c    ****   return 0;
 1070              		.loc 1 217 10
 1071 0438 0023     		movs	r3, #0
 1072              	.L68:
 218:src/uart.c    **** }
 1073              		.loc 1 218 1
 1074 043a 1846     		mov	r0, r3
 1075 043c 0837     		adds	r7, r7, #8
 1076              		.cfi_def_cfa_offset 8
 1077 043e BD46     		mov	sp, r7
 1078              		.cfi_def_cfa_register 13
 1079              		@ sp needed
 1080 0440 80BD     		pop	{r7, pc}
 1081              	.L72:
 1082 0442 00BF     		.align	2
 1083              	.L71:
 1084 0444 00000000 		.word	ComOpen
 1085              		.cfi_endproc
 1086              	.LFE74:
 1087              		.size	eputs, .-eputs
 1088              		.align	1
 1089              		.global	egets
 1090              		.syntax unified
 1091              		.thumb
 1092              		.thumb_func
 1093              		.type	egets, %function
 1094              	egets:
 1095              	.LFB75:
 219:src/uart.c    **** int egets(char *s, int Max)
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 50


 220:src/uart.c    **** {
 1096              		.loc 1 220 1
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 24
 1099              		@ frame_needed = 1, uses_anonymous_args = 0
 1100 0448 80B5     		push	{r7, lr}
 1101              		.cfi_def_cfa_offset 8
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 044a 86B0     		sub	sp, sp, #24
 1105              		.cfi_def_cfa_offset 32
 1106 044c 00AF     		add	r7, sp, #0
 1107              		.cfi_def_cfa_register 7
 1108 044e 7860     		str	r0, [r7, #4]
 1109 0450 3960     		str	r1, [r7]
 221:src/uart.c    ****   // read from the comms port until end of string
 222:src/uart.c    ****   // or newline is encountered.  Buffer is terminated with null
 223:src/uart.c    ****   // returns number of characters read on success
 224:src/uart.c    ****   // returns 0 or -1 if error occurs
 225:src/uart.c    ****   // Warning: This is a blocking call.
 226:src/uart.c    **** 
 227:src/uart.c    ****   int Len, bufferCount;
 228:src/uart.c    ****   char c;
 229:src/uart.c    **** 
 230:src/uart.c    ****   if (!ComOpen)
 1110              		.loc 1 230 7
 1111 0452 1C4B     		ldr	r3, .L80
 1112 0454 1B68     		ldr	r3, [r3]
 1113              		.loc 1 230 6
 1114 0456 002B     		cmp	r3, #0
 1115 0458 02D1     		bne	.L74
 231:src/uart.c    ****     return -1;
 1116              		.loc 1 231 12
 1117 045a 4FF0FF33 		mov	r3, #-1
 1118 045e 2DE0     		b	.L75
 1119              	.L74:
 232:src/uart.c    ****   Len = 0;
 1120              		.loc 1 232 7
 1121 0460 0023     		movs	r3, #0
 1122 0462 7B61     		str	r3, [r7, #20]
 233:src/uart.c    ****   c = 0;
 1123              		.loc 1 233 5
 1124 0464 0023     		movs	r3, #0
 1125 0466 FB74     		strb	r3, [r7, #19]
 234:src/uart.c    ****   bufferCount = GetBufCount(&ComRXBuffer);
 1126              		.loc 1 234 17
 1127 0468 1748     		ldr	r0, .L80+4
 1128 046a FFF7FEFF 		bl	GetBufCount
 1129 046e 0346     		mov	r3, r0
 1130              		.loc 1 234 15 discriminator 1
 1131 0470 FB60     		str	r3, [r7, #12]
 235:src/uart.c    **** 
 236:src/uart.c    ****   while ((Len < Max - 1) && (c != NEWLINE) && (bufferCount > 0))
 1132              		.loc 1 236 9
 1133 0472 0CE0     		b	.L76
 1134              	.L78:
 237:src/uart.c    ****   {
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 51


 238:src/uart.c    ****     //bufferCount =GetBufCount(&ComRXBuffer);
 239:src/uart.c    ****     // wait for a character
 240:src/uart.c    **** 
 241:src/uart.c    ****     c = GetBuf(&ComRXBuffer);
 1135              		.loc 1 241 9
 1136 0474 1448     		ldr	r0, .L80+4
 1137 0476 FFF7FEFF 		bl	GetBuf
 1138 047a 0346     		mov	r3, r0
 1139 047c FB74     		strb	r3, [r7, #19]
 242:src/uart.c    ****     s[Len++] = c;
 1140              		.loc 1 242 10
 1141 047e 7B69     		ldr	r3, [r7, #20]
 1142 0480 5A1C     		adds	r2, r3, #1
 1143 0482 7A61     		str	r2, [r7, #20]
 1144 0484 1A46     		mov	r2, r3
 1145              		.loc 1 242 6
 1146 0486 7B68     		ldr	r3, [r7, #4]
 1147 0488 1344     		add	r3, r3, r2
 1148              		.loc 1 242 14
 1149 048a FA7C     		ldrb	r2, [r7, #19]
 1150 048c 1A70     		strb	r2, [r3]
 1151              	.L76:
 236:src/uart.c    ****   {
 1152              		.loc 1 236 21
 1153 048e 3B68     		ldr	r3, [r7]
 1154 0490 013B     		subs	r3, r3, #1
 236:src/uart.c    ****   {
 1155              		.loc 1 236 44
 1156 0492 7A69     		ldr	r2, [r7, #20]
 1157 0494 9A42     		cmp	r2, r3
 1158 0496 05DA     		bge	.L77
 236:src/uart.c    ****   {
 1159              		.loc 1 236 26 discriminator 1
 1160 0498 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1161 049a 0A2B     		cmp	r3, #10
 1162 049c 02D0     		beq	.L77
 236:src/uart.c    ****   {
 1163              		.loc 1 236 44 discriminator 2
 1164 049e FB68     		ldr	r3, [r7, #12]
 1165 04a0 002B     		cmp	r3, #0
 1166 04a2 E7DC     		bgt	.L78
 1167              	.L77:
 243:src/uart.c    ****   }
 244:src/uart.c    **** 
 245:src/uart.c    ****   if (Len > 0)
 1168              		.loc 1 245 6
 1169 04a4 7B69     		ldr	r3, [r7, #20]
 1170 04a6 002B     		cmp	r3, #0
 1171 04a8 04DD     		ble	.L79
 246:src/uart.c    ****   {
 247:src/uart.c    ****     s[Len] = 0;
 1172              		.loc 1 247 6
 1173 04aa 7B69     		ldr	r3, [r7, #20]
 1174 04ac 7A68     		ldr	r2, [r7, #4]
 1175 04ae 1344     		add	r3, r3, r2
 1176              		.loc 1 247 12
 1177 04b0 0022     		movs	r2, #0
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 52


 1178 04b2 1A70     		strb	r2, [r3]
 1179              	.L79:
 248:src/uart.c    ****   }
 249:src/uart.c    ****    ComRXBuffer.Ready = 0;
 1180              		.loc 1 249 22
 1181 04b4 044B     		ldr	r3, .L80+4
 1182 04b6 0022     		movs	r2, #0
 1183 04b8 DA64     		str	r2, [r3, #76]
 250:src/uart.c    **** 
 251:src/uart.c    ****   return Len;
 1184              		.loc 1 251 10
 1185 04ba 7B69     		ldr	r3, [r7, #20]
 1186              	.L75:
 252:src/uart.c    **** }
 1187              		.loc 1 252 1
 1188 04bc 1846     		mov	r0, r3
 1189 04be 1837     		adds	r7, r7, #24
 1190              		.cfi_def_cfa_offset 8
 1191 04c0 BD46     		mov	sp, r7
 1192              		.cfi_def_cfa_register 13
 1193              		@ sp needed
 1194 04c2 80BD     		pop	{r7, pc}
 1195              	.L81:
 1196              		.align	2
 1197              	.L80:
 1198 04c4 00000000 		.word	ComOpen
 1199 04c8 00000000 		.word	ComRXBuffer
 1200              		.cfi_endproc
 1201              	.LFE75:
 1202              		.size	egets, .-egets
 1203              	.Letext0:
 1204              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 1205              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 1206              		.file 5 "./CMSIS/Device/STM32F1xx/include/stm32f103xb.h"
 1207              		.file 6 "./CMSIS/Device/STM32F1xx/include/system_stm32f1xx.h"
 1208              		.section	.debug_info,"",%progbits
 1209              	.Ldebug_info0:
 1210 0000 0F080000 		.4byte	0x80f
 1211 0004 0500     		.2byte	0x5
 1212 0006 01       		.byte	0x1
 1213 0007 04       		.byte	0x4
 1214 0008 00000000 		.4byte	.Ldebug_abbrev0
 1215 000c 17       		.uleb128 0x17
 1216 000d 29000000 		.4byte	.LASF124
 1217 0011 0C       		.byte	0xc
 1218 0012 0B020000 		.4byte	.LASF125
 1219 0016 4C020000 		.4byte	.LASF126
 1220 001a 00000000 		.4byte	.Ltext0
 1221 001e CC040000 		.4byte	.Letext0-.Ltext0
 1222 0022 00000000 		.4byte	.Ldebug_line0
 1223 0026 04       		.uleb128 0x4
 1224 0027 01       		.byte	0x1
 1225 0028 06       		.byte	0x6
 1226 0029 9B050000 		.4byte	.LASF0
 1227 002d 07       		.uleb128 0x7
 1228 002e A9040000 		.4byte	.LASF4
 1229 0032 03       		.byte	0x3
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 53


 1230 0033 2B       		.byte	0x2b
 1231 0034 18       		.byte	0x18
 1232 0035 39000000 		.4byte	0x39
 1233 0039 04       		.uleb128 0x4
 1234 003a 01       		.byte	0x1
 1235 003b 08       		.byte	0x8
 1236 003c 42050000 		.4byte	.LASF1
 1237 0040 04       		.uleb128 0x4
 1238 0041 02       		.byte	0x2
 1239 0042 05       		.byte	0x5
 1240 0043 55040000 		.4byte	.LASF2
 1241 0047 04       		.uleb128 0x4
 1242 0048 02       		.byte	0x2
 1243 0049 07       		.byte	0x7
 1244 004a A7050000 		.4byte	.LASF3
 1245 004e 07       		.uleb128 0x7
 1246 004f 05010000 		.4byte	.LASF5
 1247 0053 03       		.byte	0x3
 1248 0054 4D       		.byte	0x4d
 1249 0055 18       		.byte	0x18
 1250 0056 5A000000 		.4byte	0x5a
 1251 005a 04       		.uleb128 0x4
 1252 005b 04       		.byte	0x4
 1253 005c 05       		.byte	0x5
 1254 005d 66040000 		.4byte	.LASF6
 1255 0061 07       		.uleb128 0x7
 1256 0062 50050000 		.4byte	.LASF7
 1257 0066 03       		.byte	0x3
 1258 0067 4F       		.byte	0x4f
 1259 0068 19       		.byte	0x19
 1260 0069 6D000000 		.4byte	0x6d
 1261 006d 04       		.uleb128 0x4
 1262 006e 04       		.byte	0x4
 1263 006f 07       		.byte	0x7
 1264 0070 F6040000 		.4byte	.LASF8
 1265 0074 04       		.uleb128 0x4
 1266 0075 08       		.byte	0x8
 1267 0076 05       		.byte	0x5
 1268 0077 3A030000 		.4byte	.LASF9
 1269 007b 04       		.uleb128 0x4
 1270 007c 08       		.byte	0x8
 1271 007d 07       		.byte	0x7
 1272 007e D5010000 		.4byte	.LASF10
 1273 0082 18       		.uleb128 0x18
 1274 0083 04       		.byte	0x4
 1275 0084 05       		.byte	0x5
 1276 0085 696E7400 		.ascii	"int\000"
 1277 0089 04       		.uleb128 0x4
 1278 008a 04       		.byte	0x4
 1279 008b 07       		.byte	0x7
 1280 008c F3000000 		.4byte	.LASF11
 1281 0090 07       		.uleb128 0x7
 1282 0091 18030000 		.4byte	.LASF12
 1283 0095 04       		.byte	0x4
 1284 0096 18       		.byte	0x18
 1285 0097 13       		.byte	0x13
 1286 0098 2D000000 		.4byte	0x2d
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 54


 1287 009c 0F       		.uleb128 0xf
 1288 009d 90000000 		.4byte	0x90
 1289 00a1 07       		.uleb128 0x7
 1290 00a2 18050000 		.4byte	.LASF13
 1291 00a6 04       		.byte	0x4
 1292 00a7 2C       		.byte	0x2c
 1293 00a8 13       		.byte	0x13
 1294 00a9 4E000000 		.4byte	0x4e
 1295 00ad 07       		.uleb128 0x7
 1296 00ae 73010000 		.4byte	.LASF14
 1297 00b2 04       		.byte	0x4
 1298 00b3 30       		.byte	0x30
 1299 00b4 14       		.byte	0x14
 1300 00b5 61000000 		.4byte	0x61
 1301 00b9 0F       		.uleb128 0xf
 1302 00ba AD000000 		.4byte	0xad
 1303 00be 19       		.uleb128 0x19
 1304 00bf 05       		.byte	0x5
 1305 00c0 01       		.byte	0x1
 1306 00c1 26000000 		.4byte	0x26
 1307 00c5 05       		.byte	0x5
 1308 00c6 58       		.byte	0x58
 1309 00c7 01       		.byte	0x1
 1310 00c8 05020000 		.4byte	0x205
 1311 00cc 05       		.uleb128 0x5
 1312 00cd 7B040000 		.4byte	.LASF15
 1313 00d1 72       		.sleb128 -14
 1314 00d2 05       		.uleb128 0x5
 1315 00d3 C5050000 		.4byte	.LASF16
 1316 00d7 73       		.sleb128 -13
 1317 00d8 05       		.uleb128 0x5
 1318 00d9 56010000 		.4byte	.LASF17
 1319 00dd 74       		.sleb128 -12
 1320 00de 05       		.uleb128 0x5
 1321 00df 5D030000 		.4byte	.LASF18
 1322 00e3 75       		.sleb128 -11
 1323 00e4 05       		.uleb128 0x5
 1324 00e5 32050000 		.4byte	.LASF19
 1325 00e9 76       		.sleb128 -10
 1326 00ea 05       		.uleb128 0x5
 1327 00eb 68050000 		.4byte	.LASF20
 1328 00ef 7B       		.sleb128 -5
 1329 00f0 05       		.uleb128 0x5
 1330 00f1 20050000 		.4byte	.LASF21
 1331 00f5 7C       		.sleb128 -4
 1332 00f6 05       		.uleb128 0x5
 1333 00f7 34010000 		.4byte	.LASF22
 1334 00fb 7E       		.sleb128 -2
 1335 00fc 05       		.uleb128 0x5
 1336 00fd E9040000 		.4byte	.LASF23
 1337 0101 7F       		.sleb128 -1
 1338 0102 01       		.uleb128 0x1
 1339 0103 48030000 		.4byte	.LASF24
 1340 0107 00       		.byte	0
 1341 0108 01       		.uleb128 0x1
 1342 0109 76030000 		.4byte	.LASF25
 1343 010d 01       		.byte	0x1
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 55


 1344 010e 01       		.uleb128 0x1
 1345 010f 21060000 		.4byte	.LASF26
 1346 0113 02       		.byte	0x2
 1347 0114 01       		.uleb128 0x1
 1348 0115 1A040000 		.4byte	.LASF27
 1349 0119 03       		.byte	0x3
 1350 011a 01       		.uleb128 0x1
 1351 011b 0F010000 		.4byte	.LASF28
 1352 011f 04       		.byte	0x4
 1353 0120 01       		.uleb128 0x1
 1354 0121 40010000 		.4byte	.LASF29
 1355 0125 05       		.byte	0x5
 1356 0126 01       		.uleb128 0x1
 1357 0127 1A010000 		.4byte	.LASF30
 1358 012b 06       		.byte	0x6
 1359 012c 01       		.uleb128 0x1
 1360 012d 20030000 		.4byte	.LASF31
 1361 0131 07       		.byte	0x7
 1362 0132 01       		.uleb128 0x1
 1363 0133 BB020000 		.4byte	.LASF32
 1364 0137 08       		.byte	0x8
 1365 0138 01       		.uleb128 0x1
 1366 0139 BA050000 		.4byte	.LASF33
 1367 013d 09       		.byte	0x9
 1368 013e 01       		.uleb128 0x1
 1369 013f 6B030000 		.4byte	.LASF34
 1370 0143 0A       		.byte	0xa
 1371 0144 01       		.uleb128 0x1
 1372 0145 FE020000 		.4byte	.LASF35
 1373 0149 0B       		.byte	0xb
 1374 014a 01       		.uleb128 0x1
 1375 014b E0000000 		.4byte	.LASF36
 1376 014f 0C       		.byte	0xc
 1377 0150 01       		.uleb128 0x1
 1378 0151 A2030000 		.4byte	.LASF37
 1379 0155 0D       		.byte	0xd
 1380 0156 01       		.uleb128 0x1
 1381 0157 B3010000 		.4byte	.LASF38
 1382 015b 0E       		.byte	0xe
 1383 015c 01       		.uleb128 0x1
 1384 015d 88050000 		.4byte	.LASF39
 1385 0161 0F       		.byte	0xf
 1386 0162 01       		.uleb128 0x1
 1387 0163 E1020000 		.4byte	.LASF40
 1388 0167 10       		.byte	0x10
 1389 0168 01       		.uleb128 0x1
 1390 0169 AA000000 		.4byte	.LASF41
 1391 016d 11       		.byte	0x11
 1392 016e 01       		.uleb128 0x1
 1393 016f D9050000 		.4byte	.LASF42
 1394 0173 12       		.byte	0x12
 1395 0174 01       		.uleb128 0x1
 1396 0175 2E020000 		.4byte	.LASF43
 1397 0179 13       		.byte	0x13
 1398 017a 01       		.uleb128 0x1
 1399 017b 00000000 		.4byte	.LASF44
 1400 017f 14       		.byte	0x14
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 56


 1401 0180 01       		.uleb128 0x1
 1402 0181 16020000 		.4byte	.LASF45
 1403 0185 15       		.byte	0x15
 1404 0186 01       		.uleb128 0x1
 1405 0187 9C000000 		.4byte	.LASF46
 1406 018b 16       		.byte	0x16
 1407 018c 01       		.uleb128 0x1
 1408 018d 5B050000 		.4byte	.LASF47
 1409 0191 17       		.byte	0x17
 1410 0192 01       		.uleb128 0x1
 1411 0193 89010000 		.4byte	.LASF48
 1412 0197 18       		.byte	0x18
 1413 0198 01       		.uleb128 0x1
 1414 0199 E0030000 		.4byte	.LASF49
 1415 019d 19       		.byte	0x19
 1416 019e 01       		.uleb128 0x1
 1417 019f BD040000 		.4byte	.LASF50
 1418 01a3 1A       		.byte	0x1a
 1419 01a4 01       		.uleb128 0x1
 1420 01a5 8F040000 		.4byte	.LASF51
 1421 01a9 1B       		.byte	0x1b
 1422 01aa 01       		.uleb128 0x1
 1423 01ab 08050000 		.4byte	.LASF52
 1424 01af 1C       		.byte	0x1c
 1425 01b0 01       		.uleb128 0x1
 1426 01b1 F4020000 		.4byte	.LASF53
 1427 01b5 1D       		.byte	0x1d
 1428 01b6 01       		.uleb128 0x1
 1429 01b7 D6000000 		.4byte	.LASF54
 1430 01bb 1E       		.byte	0x1e
 1431 01bc 01       		.uleb128 0x1
 1432 01bd B5030000 		.4byte	.LASF55
 1433 01c1 1F       		.byte	0x1f
 1434 01c2 01       		.uleb128 0x1
 1435 01c3 DC040000 		.4byte	.LASF56
 1436 01c7 20       		.byte	0x20
 1437 01c8 01       		.uleb128 0x1
 1438 01c9 CF020000 		.4byte	.LASF57
 1439 01cd 21       		.byte	0x21
 1440 01ce 01       		.uleb128 0x1
 1441 01cf BD000000 		.4byte	.LASF58
 1442 01d3 22       		.byte	0x22
 1443 01d4 01       		.uleb128 0x1
 1444 01d5 A0010000 		.4byte	.LASF59
 1445 01d9 23       		.byte	0x23
 1446 01da 01       		.uleb128 0x1
 1447 01db 79050000 		.4byte	.LASF60
 1448 01df 24       		.byte	0x24
 1449 01e0 01       		.uleb128 0x1
 1450 01e1 6F040000 		.4byte	.LASF61
 1451 01e5 25       		.byte	0x25
 1452 01e6 01       		.uleb128 0x1
 1453 01e7 83020000 		.4byte	.LASF62
 1454 01eb 26       		.byte	0x26
 1455 01ec 01       		.uleb128 0x1
 1456 01ed F7050000 		.4byte	.LASF63
 1457 01f1 27       		.byte	0x27
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 57


 1458 01f2 01       		.uleb128 0x1
 1459 01f3 25010000 		.4byte	.LASF64
 1460 01f7 28       		.byte	0x28
 1461 01f8 01       		.uleb128 0x1
 1462 01f9 0B040000 		.4byte	.LASF65
 1463 01fd 29       		.byte	0x29
 1464 01fe 01       		.uleb128 0x1
 1465 01ff 2B030000 		.4byte	.LASF66
 1466 0203 2A       		.byte	0x2a
 1467 0204 00       		.byte	0
 1468 0205 07       		.uleb128 0x7
 1469 0206 42020000 		.4byte	.LASF67
 1470 020a 05       		.byte	0x5
 1471 020b 90       		.byte	0x90
 1472 020c 03       		.byte	0x3
 1473 020d BE000000 		.4byte	0xbe
 1474 0211 1A       		.uleb128 0x1a
 1475 0212 040E     		.2byte	0xe04
 1476 0214 02       		.byte	0x2
 1477 0215 7F01     		.2byte	0x17f
 1478 0217 09       		.byte	0x9
 1479 0218 CB020000 		.4byte	0x2cb
 1480 021c 02       		.uleb128 0x2
 1481 021d 84010000 		.4byte	.LASF68
 1482 0221 02       		.byte	0x2
 1483 0222 8101     		.2byte	0x181
 1484 0224 12       		.byte	0x12
 1485 0225 DB020000 		.4byte	0x2db
 1486 0229 00       		.byte	0
 1487 022a 02       		.uleb128 0x2
 1488 022b 23040000 		.4byte	.LASF69
 1489 022f 02       		.byte	0x2
 1490 0230 8201     		.2byte	0x182
 1491 0232 12       		.byte	0x12
 1492 0233 E0020000 		.4byte	0x2e0
 1493 0237 20       		.byte	0x20
 1494 0238 02       		.uleb128 0x2
 1495 0239 74050000 		.4byte	.LASF70
 1496 023d 02       		.byte	0x2
 1497 023e 8301     		.2byte	0x183
 1498 0240 12       		.byte	0x12
 1499 0241 DB020000 		.4byte	0x2db
 1500 0245 80       		.byte	0x80
 1501 0246 02       		.uleb128 0x2
 1502 0247 97010000 		.4byte	.LASF71
 1503 024b 02       		.byte	0x2
 1504 024c 8401     		.2byte	0x184
 1505 024e 12       		.byte	0x12
 1506 024f E0020000 		.4byte	0x2e0
 1507 0253 A0       		.byte	0xa0
 1508 0254 08       		.uleb128 0x8
 1509 0255 D4050000 		.4byte	.LASF72
 1510 0259 8501     		.2byte	0x185
 1511 025b DB020000 		.4byte	0x2db
 1512 025f 0001     		.2byte	0x100
 1513 0261 08       		.uleb128 0x8
 1514 0262 2D040000 		.4byte	.LASF73
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 58


 1515 0266 8601     		.2byte	0x186
 1516 0268 E0020000 		.4byte	0x2e0
 1517 026c 2001     		.2byte	0x120
 1518 026e 08       		.uleb128 0x8
 1519 026f 89030000 		.4byte	.LASF74
 1520 0273 8701     		.2byte	0x187
 1521 0275 DB020000 		.4byte	0x2db
 1522 0279 8001     		.2byte	0x180
 1523 027b 08       		.uleb128 0x8
 1524 027c 37040000 		.4byte	.LASF75
 1525 0280 8801     		.2byte	0x188
 1526 0282 E0020000 		.4byte	0x2e0
 1527 0286 A001     		.2byte	0x1a0
 1528 0288 08       		.uleb128 0x8
 1529 0289 83050000 		.4byte	.LASF76
 1530 028d 8901     		.2byte	0x189
 1531 028f DB020000 		.4byte	0x2db
 1532 0293 0002     		.2byte	0x200
 1533 0295 08       		.uleb128 0x8
 1534 0296 41040000 		.4byte	.LASF77
 1535 029a 8A01     		.2byte	0x18a
 1536 029c F0020000 		.4byte	0x2f0
 1537 02a0 2002     		.2byte	0x220
 1538 02a2 1B       		.uleb128 0x1b
 1539 02a3 495000   		.ascii	"IP\000"
 1540 02a6 02       		.byte	0x2
 1541 02a7 8B01     		.2byte	0x18b
 1542 02a9 12       		.byte	0x12
 1543 02aa 10030000 		.4byte	0x310
 1544 02ae 0003     		.2byte	0x300
 1545 02b0 08       		.uleb128 0x8
 1546 02b1 4B040000 		.4byte	.LASF78
 1547 02b5 8C01     		.2byte	0x18c
 1548 02b7 15030000 		.4byte	0x315
 1549 02bb F003     		.2byte	0x3f0
 1550 02bd 08       		.uleb128 0x8
 1551 02be F4030000 		.4byte	.LASF79
 1552 02c2 8D01     		.2byte	0x18d
 1553 02c4 B9000000 		.4byte	0xb9
 1554 02c8 000E     		.2byte	0xe00
 1555 02ca 00       		.byte	0
 1556 02cb 09       		.uleb128 0x9
 1557 02cc B9000000 		.4byte	0xb9
 1558 02d0 DB020000 		.4byte	0x2db
 1559 02d4 0A       		.uleb128 0xa
 1560 02d5 89000000 		.4byte	0x89
 1561 02d9 07       		.byte	0x7
 1562 02da 00       		.byte	0
 1563 02db 0F       		.uleb128 0xf
 1564 02dc CB020000 		.4byte	0x2cb
 1565 02e0 09       		.uleb128 0x9
 1566 02e1 AD000000 		.4byte	0xad
 1567 02e5 F0020000 		.4byte	0x2f0
 1568 02e9 0A       		.uleb128 0xa
 1569 02ea 89000000 		.4byte	0x89
 1570 02ee 17       		.byte	0x17
 1571 02ef 00       		.byte	0
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 59


 1572 02f0 09       		.uleb128 0x9
 1573 02f1 AD000000 		.4byte	0xad
 1574 02f5 00030000 		.4byte	0x300
 1575 02f9 0A       		.uleb128 0xa
 1576 02fa 89000000 		.4byte	0x89
 1577 02fe 37       		.byte	0x37
 1578 02ff 00       		.byte	0
 1579 0300 09       		.uleb128 0x9
 1580 0301 9C000000 		.4byte	0x9c
 1581 0305 10030000 		.4byte	0x310
 1582 0309 0A       		.uleb128 0xa
 1583 030a 89000000 		.4byte	0x89
 1584 030e EF       		.byte	0xef
 1585 030f 00       		.byte	0
 1586 0310 0F       		.uleb128 0xf
 1587 0311 00030000 		.4byte	0x300
 1588 0315 09       		.uleb128 0x9
 1589 0316 AD000000 		.4byte	0xad
 1590 031a 26030000 		.4byte	0x326
 1591 031e 1C       		.uleb128 0x1c
 1592 031f 89000000 		.4byte	0x89
 1593 0323 8302     		.2byte	0x283
 1594 0325 00       		.byte	0
 1595 0326 10       		.uleb128 0x10
 1596 0327 B3040000 		.4byte	.LASF80
 1597 032b 02       		.byte	0x2
 1598 032c 8E01     		.2byte	0x18e
 1599 032e 04       		.byte	0x4
 1600 032f 11020000 		.4byte	0x211
 1601 0333 1D       		.uleb128 0x1d
 1602 0334 CB030000 		.4byte	.LASF100
 1603 0338 06       		.byte	0x6
 1604 0339 45       		.byte	0x45
 1605 033a 11       		.byte	0x11
 1606 033b AD000000 		.4byte	0xad
 1607 033f 14       		.uleb128 0x14
 1608 0340 1C       		.byte	0x1c
 1609 0341 7801     		.2byte	0x178
 1610 0343 A0030000 		.4byte	0x3a0
 1611 0347 03       		.uleb128 0x3
 1612 0348 43524C00 		.ascii	"CRL\000"
 1613 034c 7A01     		.2byte	0x17a
 1614 034e B9000000 		.4byte	0xb9
 1615 0352 00       		.byte	0
 1616 0353 03       		.uleb128 0x3
 1617 0354 43524800 		.ascii	"CRH\000"
 1618 0358 7B01     		.2byte	0x17b
 1619 035a B9000000 		.4byte	0xb9
 1620 035e 04       		.byte	0x4
 1621 035f 03       		.uleb128 0x3
 1622 0360 49445200 		.ascii	"IDR\000"
 1623 0364 7C01     		.2byte	0x17c
 1624 0366 B9000000 		.4byte	0xb9
 1625 036a 08       		.byte	0x8
 1626 036b 03       		.uleb128 0x3
 1627 036c 4F445200 		.ascii	"ODR\000"
 1628 0370 7D01     		.2byte	0x17d
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 60


 1629 0372 B9000000 		.4byte	0xb9
 1630 0376 0C       		.byte	0xc
 1631 0377 02       		.uleb128 0x2
 1632 0378 1D000000 		.4byte	.LASF81
 1633 037c 05       		.byte	0x5
 1634 037d 7E01     		.2byte	0x17e
 1635 037f 11       		.byte	0x11
 1636 0380 B9000000 		.4byte	0xb9
 1637 0384 10       		.byte	0x10
 1638 0385 03       		.uleb128 0x3
 1639 0386 42525200 		.ascii	"BRR\000"
 1640 038a 7F01     		.2byte	0x17f
 1641 038c B9000000 		.4byte	0xb9
 1642 0390 14       		.byte	0x14
 1643 0391 02       		.uleb128 0x2
 1644 0392 36060000 		.4byte	.LASF82
 1645 0396 05       		.byte	0x5
 1646 0397 8001     		.2byte	0x180
 1647 0399 11       		.byte	0x11
 1648 039a B9000000 		.4byte	0xb9
 1649 039e 18       		.byte	0x18
 1650 039f 00       		.byte	0
 1651 03a0 10       		.uleb128 0x10
 1652 03a1 CF040000 		.4byte	.LASF83
 1653 03a5 05       		.byte	0x5
 1654 03a6 8101     		.2byte	0x181
 1655 03a8 03       		.byte	0x3
 1656 03a9 3F030000 		.4byte	0x33f
 1657 03ad 14       		.uleb128 0x14
 1658 03ae 28       		.byte	0x28
 1659 03af BA01     		.2byte	0x1ba
 1660 03b1 3B040000 		.4byte	0x43b
 1661 03b5 03       		.uleb128 0x3
 1662 03b6 435200   		.ascii	"CR\000"
 1663 03b9 BC01     		.2byte	0x1bc
 1664 03bb B9000000 		.4byte	0xb9
 1665 03bf 00       		.byte	0
 1666 03c0 02       		.uleb128 0x2
 1667 03c1 A4040000 		.4byte	.LASF84
 1668 03c5 05       		.byte	0x5
 1669 03c6 BD01     		.2byte	0x1bd
 1670 03c8 11       		.byte	0x11
 1671 03c9 B9000000 		.4byte	0xb9
 1672 03cd 04       		.byte	0x4
 1673 03ce 03       		.uleb128 0x3
 1674 03cf 43495200 		.ascii	"CIR\000"
 1675 03d3 BE01     		.2byte	0x1be
 1676 03d5 B9000000 		.4byte	0xb9
 1677 03d9 08       		.byte	0x8
 1678 03da 02       		.uleb128 0x2
 1679 03db 93000000 		.4byte	.LASF85
 1680 03df 05       		.byte	0x5
 1681 03e0 BF01     		.2byte	0x1bf
 1682 03e2 11       		.byte	0x11
 1683 03e3 B9000000 		.4byte	0xb9
 1684 03e7 0C       		.byte	0xc
 1685 03e8 02       		.uleb128 0x2
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 61


 1686 03e9 C6020000 		.4byte	.LASF86
 1687 03ed 05       		.byte	0x5
 1688 03ee C001     		.2byte	0x1c0
 1689 03f0 11       		.byte	0x11
 1690 03f1 B9000000 		.4byte	0xb9
 1691 03f5 10       		.byte	0x10
 1692 03f6 02       		.uleb128 0x2
 1693 03f7 11030000 		.4byte	.LASF87
 1694 03fb 05       		.byte	0x5
 1695 03fc C101     		.2byte	0x1c1
 1696 03fe 11       		.byte	0x11
 1697 03ff B9000000 		.4byte	0xb9
 1698 0403 14       		.byte	0x14
 1699 0404 02       		.uleb128 0x2
 1700 0405 8E030000 		.4byte	.LASF88
 1701 0409 05       		.byte	0x5
 1702 040a C201     		.2byte	0x1c2
 1703 040c 11       		.byte	0x11
 1704 040d B9000000 		.4byte	0xb9
 1705 0411 18       		.byte	0x18
 1706 0412 02       		.uleb128 0x2
 1707 0413 15000000 		.4byte	.LASF89
 1708 0417 05       		.byte	0x5
 1709 0418 C301     		.2byte	0x1c3
 1710 041a 11       		.byte	0x11
 1711 041b B9000000 		.4byte	0xb9
 1712 041f 1C       		.byte	0x1c
 1713 0420 02       		.uleb128 0x2
 1714 0421 00010000 		.4byte	.LASF90
 1715 0425 05       		.byte	0x5
 1716 0426 C401     		.2byte	0x1c4
 1717 0428 11       		.byte	0x11
 1718 0429 B9000000 		.4byte	0xb9
 1719 042d 20       		.byte	0x20
 1720 042e 03       		.uleb128 0x3
 1721 042f 43535200 		.ascii	"CSR\000"
 1722 0433 C501     		.2byte	0x1c5
 1723 0435 B9000000 		.4byte	0xb9
 1724 0439 24       		.byte	0x24
 1725 043a 00       		.byte	0
 1726 043b 10       		.uleb128 0x10
 1727 043c 8F020000 		.4byte	.LASF91
 1728 0440 05       		.byte	0x5
 1729 0441 C801     		.2byte	0x1c8
 1730 0443 03       		.byte	0x3
 1731 0444 AD030000 		.4byte	0x3ad
 1732 0448 14       		.uleb128 0x14
 1733 0449 1C       		.byte	0x1c
 1734 044a 2902     		.2byte	0x229
 1735 044c A5040000 		.4byte	0x4a5
 1736 0450 03       		.uleb128 0x3
 1737 0451 535200   		.ascii	"SR\000"
 1738 0454 2B02     		.2byte	0x22b
 1739 0456 B9000000 		.4byte	0xb9
 1740 045a 00       		.byte	0
 1741 045b 03       		.uleb128 0x3
 1742 045c 445200   		.ascii	"DR\000"
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 62


 1743 045f 2C02     		.2byte	0x22c
 1744 0461 B9000000 		.4byte	0xb9
 1745 0465 04       		.byte	0x4
 1746 0466 03       		.uleb128 0x3
 1747 0467 42525200 		.ascii	"BRR\000"
 1748 046b 2D02     		.2byte	0x22d
 1749 046d B9000000 		.4byte	0xb9
 1750 0471 08       		.byte	0x8
 1751 0472 03       		.uleb128 0x3
 1752 0473 43523100 		.ascii	"CR1\000"
 1753 0477 2E02     		.2byte	0x22e
 1754 0479 B9000000 		.4byte	0xb9
 1755 047d 0C       		.byte	0xc
 1756 047e 03       		.uleb128 0x3
 1757 047f 43523200 		.ascii	"CR2\000"
 1758 0483 2F02     		.2byte	0x22f
 1759 0485 B9000000 		.4byte	0xb9
 1760 0489 10       		.byte	0x10
 1761 048a 03       		.uleb128 0x3
 1762 048b 43523300 		.ascii	"CR3\000"
 1763 048f 3002     		.2byte	0x230
 1764 0491 B9000000 		.4byte	0xb9
 1765 0495 14       		.byte	0x14
 1766 0496 02       		.uleb128 0x2
 1767 0497 49010000 		.4byte	.LASF92
 1768 049b 05       		.byte	0x5
 1769 049c 3102     		.2byte	0x231
 1770 049e 11       		.byte	0x11
 1771 049f B9000000 		.4byte	0xb9
 1772 04a3 18       		.byte	0x18
 1773 04a4 00       		.byte	0
 1774 04a5 10       		.uleb128 0x10
 1775 04a6 A7020000 		.4byte	.LASF93
 1776 04aa 05       		.byte	0x5
 1777 04ab 3202     		.2byte	0x232
 1778 04ad 03       		.byte	0x3
 1779 04ae 48040000 		.4byte	0x448
 1780 04b2 1E       		.uleb128 0x1e
 1781 04b3 0F060000 		.4byte	.LASF127
 1782 04b7 50       		.byte	0x50
 1783 04b8 01       		.byte	0x1
 1784 04b9 0D       		.byte	0xd
 1785 04ba 10       		.byte	0x10
 1786 04bb FC040000 		.4byte	0x4fc
 1787 04bf 0B       		.uleb128 0xb
 1788 04c0 5F040000 		.4byte	.LASF94
 1789 04c4 0F       		.byte	0xf
 1790 04c5 11       		.byte	0x11
 1791 04c6 FC040000 		.4byte	0x4fc
 1792 04ca 00       		.byte	0
 1793 04cb 0B       		.uleb128 0xb
 1794 04cc DB030000 		.4byte	.LASF95
 1795 04d0 10       		.byte	0x10
 1796 04d1 0C       		.byte	0xc
 1797 04d2 89000000 		.4byte	0x89
 1798 04d6 40       		.byte	0x40
 1799 04d7 0B       		.uleb128 0xb
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 63


 1800 04d8 58030000 		.4byte	.LASF96
 1801 04dc 10       		.byte	0x10
 1802 04dd 12       		.byte	0x12
 1803 04de 89000000 		.4byte	0x89
 1804 04e2 44       		.byte	0x44
 1805 04e3 0B       		.uleb128 0xb
 1806 04e4 B5020000 		.4byte	.LASF97
 1807 04e8 11       		.byte	0x11
 1808 04e9 0C       		.byte	0xc
 1809 04ea 89000000 		.4byte	0x89
 1810 04ee 48       		.byte	0x48
 1811 04ef 0B       		.uleb128 0xb
 1812 04f0 12050000 		.4byte	.LASF98
 1813 04f4 12       		.byte	0x12
 1814 04f5 0C       		.byte	0xc
 1815 04f6 89000000 		.4byte	0x89
 1816 04fa 4C       		.byte	0x4c
 1817 04fb 00       		.byte	0
 1818 04fc 09       		.uleb128 0x9
 1819 04fd 39000000 		.4byte	0x39
 1820 0501 0C050000 		.4byte	0x50c
 1821 0505 0A       		.uleb128 0xa
 1822 0506 89000000 		.4byte	0x89
 1823 050a 3F       		.byte	0x3f
 1824 050b 00       		.byte	0
 1825 050c 07       		.uleb128 0x7
 1826 050d 7F030000 		.4byte	.LASF99
 1827 0511 01       		.byte	0x1
 1828 0512 13       		.byte	0x13
 1829 0513 03       		.byte	0x3
 1830 0514 B2040000 		.4byte	0x4b2
 1831 0518 0C       		.uleb128 0xc
 1832 0519 E5050000 		.4byte	.LASF101
 1833 051d 15       		.byte	0x15
 1834 051e 0B       		.byte	0xb
 1835 051f 0C050000 		.4byte	0x50c
 1836 0523 05       		.uleb128 0x5
 1837 0524 03       		.byte	0x3
 1838 0525 00000000 		.4byte	ComRXBuffer
 1839 0529 0C       		.uleb128 0xc
 1840 052a 96030000 		.4byte	.LASF102
 1841 052e 15       		.byte	0x15
 1842 052f 18       		.byte	0x18
 1843 0530 0C050000 		.4byte	0x50c
 1844 0534 05       		.uleb128 0x5
 1845 0535 03       		.byte	0x3
 1846 0536 00000000 		.4byte	ComTXBuffer
 1847 053a 0C       		.uleb128 0xc
 1848 053b 9C040000 		.4byte	.LASF103
 1849 053f 1E       		.byte	0x1e
 1850 0540 0A       		.byte	0xa
 1851 0541 89000000 		.4byte	0x89
 1852 0545 05       		.uleb128 0x5
 1853 0546 03       		.byte	0x3
 1854 0547 00000000 		.4byte	ComOpen
 1855 054b 0C       		.uleb128 0xc
 1856 054c AA010000 		.4byte	.LASF104
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 64


 1857 0550 1F       		.byte	0x1f
 1858 0551 0A       		.byte	0xa
 1859 0552 89000000 		.4byte	0x89
 1860 0556 05       		.uleb128 0x5
 1861 0557 03       		.byte	0x3
 1862 0558 00000000 		.4byte	ComError
 1863 055c 0C       		.uleb128 0xc
 1864 055d 7C010000 		.4byte	.LASF105
 1865 0561 20       		.byte	0x20
 1866 0562 0A       		.byte	0xa
 1867 0563 89000000 		.4byte	0x89
 1868 0567 05       		.uleb128 0x5
 1869 0568 03       		.byte	0x3
 1870 0569 00000000 		.4byte	ComBusy
 1871 056d 11       		.uleb128 0x11
 1872 056e F1050000 		.4byte	.LASF108
 1873 0572 DB       		.byte	0xdb
 1874 0573 82000000 		.4byte	0x82
 1875 0577 48040000 		.4byte	.LFB75
 1876 057b 84000000 		.4byte	.LFE75-.LFB75
 1877 057f 01       		.uleb128 0x1
 1878 0580 9C       		.byte	0x9c
 1879 0581 C8050000 		.4byte	0x5c8
 1880 0585 06       		.uleb128 0x6
 1881 0586 7300     		.ascii	"s\000"
 1882 0588 DB       		.byte	0xdb
 1883 0589 11       		.byte	0x11
 1884 058a C8050000 		.4byte	0x5c8
 1885 058e 02       		.uleb128 0x2
 1886 058f 91       		.byte	0x91
 1887 0590 64       		.sleb128 -28
 1888 0591 06       		.uleb128 0x6
 1889 0592 4D617800 		.ascii	"Max\000"
 1890 0596 DB       		.byte	0xdb
 1891 0597 18       		.byte	0x18
 1892 0598 82000000 		.4byte	0x82
 1893 059c 02       		.uleb128 0x2
 1894 059d 91       		.byte	0x91
 1895 059e 60       		.sleb128 -32
 1896 059f 0D       		.uleb128 0xd
 1897 05a0 4C656E00 		.ascii	"Len\000"
 1898 05a4 E3       		.byte	0xe3
 1899 05a5 07       		.byte	0x7
 1900 05a6 82000000 		.4byte	0x82
 1901 05aa 02       		.uleb128 0x2
 1902 05ab 91       		.byte	0x91
 1903 05ac 74       		.sleb128 -12
 1904 05ad 12       		.uleb128 0x12
 1905 05ae 03060000 		.4byte	.LASF106
 1906 05b2 E3       		.byte	0xe3
 1907 05b3 0C       		.byte	0xc
 1908 05b4 82000000 		.4byte	0x82
 1909 05b8 02       		.uleb128 0x2
 1910 05b9 91       		.byte	0x91
 1911 05ba 6C       		.sleb128 -20
 1912 05bb 0D       		.uleb128 0xd
 1913 05bc 6300     		.ascii	"c\000"
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 65


 1914 05be E4       		.byte	0xe4
 1915 05bf 08       		.byte	0x8
 1916 05c0 CD050000 		.4byte	0x5cd
 1917 05c4 02       		.uleb128 0x2
 1918 05c5 91       		.byte	0x91
 1919 05c6 73       		.sleb128 -13
 1920 05c7 00       		.byte	0
 1921 05c8 15       		.uleb128 0x15
 1922 05c9 CD050000 		.4byte	0x5cd
 1923 05cd 04       		.uleb128 0x4
 1924 05ce 01       		.byte	0x1
 1925 05cf 08       		.byte	0x8
 1926 05d0 DC020000 		.4byte	.LASF107
 1927 05d4 11       		.uleb128 0x11
 1928 05d5 52030000 		.4byte	.LASF109
 1929 05d9 CE       		.byte	0xce
 1930 05da 82000000 		.4byte	0x82
 1931 05de 0C040000 		.4byte	.LFB74
 1932 05e2 3C000000 		.4byte	.LFE74-.LFB74
 1933 05e6 01       		.uleb128 0x1
 1934 05e7 9C       		.byte	0x9c
 1935 05e8 F9050000 		.4byte	0x5f9
 1936 05ec 06       		.uleb128 0x6
 1937 05ed 7300     		.ascii	"s\000"
 1938 05ef CE       		.byte	0xce
 1939 05f0 11       		.byte	0x11
 1940 05f1 C8050000 		.4byte	0x5c8
 1941 05f5 02       		.uleb128 0x2
 1942 05f6 91       		.byte	0x91
 1943 05f7 74       		.sleb128 -12
 1944 05f8 00       		.byte	0
 1945 05f9 1F       		.uleb128 0x1f
 1946 05fa CA000000 		.4byte	.LASF114
 1947 05fe 01       		.byte	0x1
 1948 05ff C9       		.byte	0xc9
 1949 0600 05       		.byte	0x5
 1950 0601 82000000 		.4byte	0x82
 1951 0605 F6030000 		.4byte	.LFB73
 1952 0609 16000000 		.4byte	.LFE73-.LFB73
 1953 060d 01       		.uleb128 0x1
 1954 060e 9C       		.byte	0x9c
 1955 060f 13       		.uleb128 0x13
 1956 0610 FF010000 		.4byte	.LASF110
 1957 0614 C4       		.byte	0xc4
 1958 0615 0E       		.byte	0xe
 1959 0616 89000000 		.4byte	0x89
 1960 061a E0030000 		.4byte	.LFB72
 1961 061e 16000000 		.4byte	.LFE72-.LFB72
 1962 0622 01       		.uleb128 0x1
 1963 0623 9C       		.byte	0x9c
 1964 0624 37060000 		.4byte	0x637
 1965 0628 06       		.uleb128 0x6
 1966 0629 42756600 		.ascii	"Buf\000"
 1967 062d C4       		.byte	0xc4
 1968 062e 25       		.byte	0x25
 1969 062f 37060000 		.4byte	0x637
 1970 0633 02       		.uleb128 0x2
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 66


 1971 0634 91       		.byte	0x91
 1972 0635 74       		.sleb128 -12
 1973 0636 00       		.byte	0
 1974 0637 15       		.uleb128 0x15
 1975 0638 0C050000 		.4byte	0x50c
 1976 063c 13       		.uleb128 0x13
 1977 063d 6C010000 		.4byte	.LASF111
 1978 0641 B7       		.byte	0xb7
 1979 0642 0F       		.byte	0xf
 1980 0643 39000000 		.4byte	0x39
 1981 0647 94030000 		.4byte	.LFB71
 1982 064b 4C000000 		.4byte	.LFE71-.LFB71
 1983 064f 01       		.uleb128 0x1
 1984 0650 9C       		.byte	0x9c
 1985 0651 72060000 		.4byte	0x672
 1986 0655 06       		.uleb128 0x6
 1987 0656 42756600 		.ascii	"Buf\000"
 1988 065a B7       		.byte	0xb7
 1989 065b 21       		.byte	0x21
 1990 065c 37060000 		.4byte	0x637
 1991 0660 02       		.uleb128 0x2
 1992 0661 91       		.byte	0x91
 1993 0662 6C       		.sleb128 -20
 1994 0663 12       		.uleb128 0x12
 1995 0664 1C060000 		.4byte	.LASF112
 1996 0668 B9       		.byte	0xb9
 1997 0669 11       		.byte	0x11
 1998 066a 39000000 		.4byte	0x39
 1999 066e 02       		.uleb128 0x2
 2000 066f 91       		.byte	0x91
 2001 0670 77       		.sleb128 -9
 2002 0671 00       		.byte	0
 2003 0672 13       		.uleb128 0x13
 2004 0673 22000000 		.4byte	.LASF113
 2005 0677 A8       		.byte	0xa8
 2006 0678 05       		.byte	0x5
 2007 0679 82000000 		.4byte	0x82
 2008 067d 28030000 		.4byte	.LFB70
 2009 0681 6C000000 		.4byte	.LFE70-.LFB70
 2010 0685 01       		.uleb128 0x1
 2011 0686 9C       		.byte	0x9c
 2012 0687 A8060000 		.4byte	0x6a8
 2013 068b 06       		.uleb128 0x6
 2014 068c 42756600 		.ascii	"Buf\000"
 2015 0690 A8       		.byte	0xa8
 2016 0691 17       		.byte	0x17
 2017 0692 37060000 		.4byte	0x637
 2018 0696 02       		.uleb128 0x2
 2019 0697 91       		.byte	0x91
 2020 0698 74       		.sleb128 -12
 2021 0699 0E       		.uleb128 0xe
 2022 069a 1C060000 		.4byte	.LASF112
 2023 069e A8       		.byte	0xa8
 2024 069f 2A       		.byte	0x2a
 2025 06a0 39000000 		.4byte	0x39
 2026 06a4 02       		.uleb128 0x2
 2027 06a5 91       		.byte	0x91
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 67


 2028 06a6 73       		.sleb128 -13
 2029 06a7 00       		.byte	0
 2030 06a8 16       		.uleb128 0x16
 2031 06a9 C2030000 		.4byte	.LASF115
 2032 06ad 97       		.byte	0x97
 2033 06ae D8020000 		.4byte	.LFB69
 2034 06b2 50000000 		.4byte	.LFE69-.LFB69
 2035 06b6 01       		.uleb128 0x1
 2036 06b7 9C       		.byte	0x9c
 2037 06b8 16       		.uleb128 0x16
 2038 06b9 F6010000 		.4byte	.LASF116
 2039 06bd 8E       		.byte	0x8e
 2040 06be A8020000 		.4byte	.LFB68
 2041 06c2 30000000 		.4byte	.LFE68-.LFB68
 2042 06c6 01       		.uleb128 0x1
 2043 06c7 9C       		.byte	0x9c
 2044 06c8 20       		.uleb128 0x20
 2045 06c9 F9030000 		.4byte	.LASF128
 2046 06cd 01       		.byte	0x1
 2047 06ce 82       		.byte	0x82
 2048 06cf 06       		.byte	0x6
 2049 06d0 7C020000 		.4byte	.LFB67
 2050 06d4 2C000000 		.4byte	.LFE67-.LFB67
 2051 06d8 01       		.uleb128 0x1
 2052 06d9 9C       		.byte	0x9c
 2053 06da 21       		.uleb128 0x21
 2054 06db 24020000 		.4byte	.LASF129
 2055 06df 01       		.byte	0x1
 2056 06e0 61       		.byte	0x61
 2057 06e1 06       		.byte	0x6
 2058 06e2 8C010000 		.4byte	.LFB66
 2059 06e6 F0000000 		.4byte	.LFE66-.LFB66
 2060 06ea 01       		.uleb128 0x1
 2061 06eb 9C       		.byte	0x9c
 2062 06ec FF060000 		.4byte	0x6ff
 2063 06f0 12       		.uleb128 0x12
 2064 06f1 9B020000 		.4byte	.LASF117
 2065 06f5 75       		.byte	0x75
 2066 06f6 0E       		.byte	0xe
 2067 06f7 AD000000 		.4byte	0xad
 2068 06fb 02       		.uleb128 0x2
 2069 06fc 91       		.byte	0x91
 2070 06fd 74       		.sleb128 -12
 2071 06fe 00       		.byte	0
 2072 06ff 11       		.uleb128 0x11
 2073 0700 2D060000 		.4byte	.LASF118
 2074 0704 49       		.byte	0x49
 2075 0705 82000000 		.4byte	0x82
 2076 0709 F8000000 		.4byte	.LFB65
 2077 070d 94000000 		.4byte	.LFE65-.LFB65
 2078 0711 01       		.uleb128 0x1
 2079 0712 9C       		.byte	0x9c
 2080 0713 4E070000 		.4byte	0x74e
 2081 0717 0E       		.uleb128 0xe
 2082 0718 B5020000 		.4byte	.LASF97
 2083 071c 49       		.byte	0x49
 2084 071d 12       		.byte	0x12
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 68


 2085 071e 82000000 		.4byte	0x82
 2086 0722 02       		.uleb128 0x2
 2087 0723 91       		.byte	0x91
 2088 0724 6C       		.sleb128 -20
 2089 0725 0E       		.uleb128 0xe
 2090 0726 5F040000 		.4byte	.LASF94
 2091 072a 49       		.byte	0x49
 2092 072b 1F       		.byte	0x1f
 2093 072c C8050000 		.4byte	0x5c8
 2094 0730 02       		.uleb128 0x2
 2095 0731 91       		.byte	0x91
 2096 0732 68       		.sleb128 -24
 2097 0733 0D       		.uleb128 0xd
 2098 0734 6900     		.ascii	"i\000"
 2099 0736 50       		.byte	0x50
 2100 0737 0C       		.byte	0xc
 2101 0738 89000000 		.4byte	0x89
 2102 073c 02       		.uleb128 0x2
 2103 073d 91       		.byte	0x91
 2104 073e 74       		.sleb128 -12
 2105 073f 12       		.uleb128 0x12
 2106 0740 A0020000 		.4byte	.LASF119
 2107 0744 50       		.byte	0x50
 2108 0745 0F       		.byte	0xf
 2109 0746 89000000 		.4byte	0x89
 2110 074a 02       		.uleb128 0x2
 2111 074b 91       		.byte	0x91
 2112 074c 70       		.sleb128 -16
 2113 074d 00       		.byte	0
 2114 074e 13       		.uleb128 0x13
 2115 074f ED030000 		.4byte	.LASF120
 2116 0753 39       		.byte	0x39
 2117 0754 05       		.byte	0x5
 2118 0755 82000000 		.4byte	0x82
 2119 0759 A0000000 		.4byte	.LFB64
 2120 075d 58000000 		.4byte	.LFE64-.LFB64
 2121 0761 01       		.uleb128 0x1
 2122 0762 9C       		.byte	0x9c
 2123 0763 A8070000 		.4byte	0x7a8
 2124 0767 0E       		.uleb128 0xe
 2125 0768 EC010000 		.4byte	.LASF121
 2126 076c 39       		.byte	0x39
 2127 076d 10       		.byte	0x10
 2128 076e 82000000 		.4byte	0x82
 2129 0772 02       		.uleb128 0x2
 2130 0773 91       		.byte	0x91
 2131 0774 6C       		.sleb128 -20
 2132 0775 06       		.uleb128 0x6
 2133 0776 70747200 		.ascii	"ptr\000"
 2134 077a 39       		.byte	0x39
 2135 077b 1C       		.byte	0x1c
 2136 077c C8050000 		.4byte	0x5c8
 2137 0780 02       		.uleb128 0x2
 2138 0781 91       		.byte	0x91
 2139 0782 68       		.sleb128 -24
 2140 0783 06       		.uleb128 0x6
 2141 0784 6C656E00 		.ascii	"len\000"
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 69


 2142 0788 39       		.byte	0x39
 2143 0789 25       		.byte	0x25
 2144 078a 82000000 		.4byte	0x82
 2145 078e 02       		.uleb128 0x2
 2146 078f 91       		.byte	0x91
 2147 0790 64       		.sleb128 -28
 2148 0791 22       		.uleb128 0x22
 2149 0792 B8000000 		.4byte	.LBB2
 2150 0796 2E000000 		.4byte	.LBE2-.LBB2
 2151 079a 0D       		.uleb128 0xd
 2152 079b 6900     		.ascii	"i\000"
 2153 079d 3E       		.byte	0x3e
 2154 079e 0C       		.byte	0xc
 2155 079f 82000000 		.4byte	0x82
 2156 07a3 02       		.uleb128 0x2
 2157 07a4 91       		.byte	0x91
 2158 07a5 74       		.sleb128 -12
 2159 07a6 00       		.byte	0
 2160 07a7 00       		.byte	0
 2161 07a8 11       		.uleb128 0x11
 2162 07a9 4E010000 		.4byte	.LASF122
 2163 07ad 22       		.byte	0x22
 2164 07ae 82000000 		.4byte	0x82
 2165 07b2 30000000 		.4byte	.LFB63
 2166 07b6 70000000 		.4byte	.LFE63-.LFB63
 2167 07ba 01       		.uleb128 0x1
 2168 07bb 9C       		.byte	0x9c
 2169 07bc E9070000 		.4byte	0x7e9
 2170 07c0 06       		.uleb128 0x6
 2171 07c1 4D617800 		.ascii	"Max\000"
 2172 07c5 22       		.byte	0x22
 2173 07c6 11       		.byte	0x11
 2174 07c7 82000000 		.4byte	0x82
 2175 07cb 02       		.uleb128 0x2
 2176 07cc 91       		.byte	0x91
 2177 07cd 64       		.sleb128 -28
 2178 07ce 0E       		.uleb128 0xe
 2179 07cf 5F040000 		.4byte	.LASF94
 2180 07d3 22       		.byte	0x22
 2181 07d4 25       		.byte	0x25
 2182 07d5 E9070000 		.4byte	0x7e9
 2183 07d9 02       		.uleb128 0x2
 2184 07da 91       		.byte	0x91
 2185 07db 60       		.sleb128 -32
 2186 07dc 0D       		.uleb128 0xd
 2187 07dd 6900     		.ascii	"i\000"
 2188 07df 26       		.byte	0x26
 2189 07e0 0C       		.byte	0xc
 2190 07e1 89000000 		.4byte	0x89
 2191 07e5 02       		.uleb128 0x2
 2192 07e6 91       		.byte	0x91
 2193 07e7 6C       		.sleb128 -20
 2194 07e8 00       		.byte	0
 2195 07e9 15       		.uleb128 0x15
 2196 07ea 39000000 		.4byte	0x39
 2197 07ee 23       		.uleb128 0x23
 2198 07ef C6010000 		.4byte	.LASF130
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 70


 2199 07f3 02       		.byte	0x2
 2200 07f4 AC05     		.2byte	0x5ac
 2201 07f6 16       		.byte	0x16
 2202 07f7 00000000 		.4byte	.LFB48
 2203 07fb 30000000 		.4byte	.LFE48-.LFB48
 2204 07ff 01       		.uleb128 0x1
 2205 0800 9C       		.byte	0x9c
 2206 0801 24       		.uleb128 0x24
 2207 0802 F1010000 		.4byte	.LASF123
 2208 0806 02       		.byte	0x2
 2209 0807 AC05     		.2byte	0x5ac
 2210 0809 2F       		.byte	0x2f
 2211 080a 05020000 		.4byte	0x205
 2212 080e 02       		.uleb128 0x2
 2213 080f 91       		.byte	0x91
 2214 0810 77       		.sleb128 -9
 2215 0811 00       		.byte	0
 2216 0812 00       		.byte	0
 2217              		.section	.debug_abbrev,"",%progbits
 2218              	.Ldebug_abbrev0:
 2219 0000 01       		.uleb128 0x1
 2220 0001 28       		.uleb128 0x28
 2221 0002 00       		.byte	0
 2222 0003 03       		.uleb128 0x3
 2223 0004 0E       		.uleb128 0xe
 2224 0005 1C       		.uleb128 0x1c
 2225 0006 0B       		.uleb128 0xb
 2226 0007 00       		.byte	0
 2227 0008 00       		.byte	0
 2228 0009 02       		.uleb128 0x2
 2229 000a 0D       		.uleb128 0xd
 2230 000b 00       		.byte	0
 2231 000c 03       		.uleb128 0x3
 2232 000d 0E       		.uleb128 0xe
 2233 000e 3A       		.uleb128 0x3a
 2234 000f 0B       		.uleb128 0xb
 2235 0010 3B       		.uleb128 0x3b
 2236 0011 05       		.uleb128 0x5
 2237 0012 39       		.uleb128 0x39
 2238 0013 0B       		.uleb128 0xb
 2239 0014 49       		.uleb128 0x49
 2240 0015 13       		.uleb128 0x13
 2241 0016 38       		.uleb128 0x38
 2242 0017 0B       		.uleb128 0xb
 2243 0018 00       		.byte	0
 2244 0019 00       		.byte	0
 2245 001a 03       		.uleb128 0x3
 2246 001b 0D       		.uleb128 0xd
 2247 001c 00       		.byte	0
 2248 001d 03       		.uleb128 0x3
 2249 001e 08       		.uleb128 0x8
 2250 001f 3A       		.uleb128 0x3a
 2251 0020 21       		.uleb128 0x21
 2252 0021 05       		.sleb128 5
 2253 0022 3B       		.uleb128 0x3b
 2254 0023 05       		.uleb128 0x5
 2255 0024 39       		.uleb128 0x39
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 71


 2256 0025 21       		.uleb128 0x21
 2257 0026 11       		.sleb128 17
 2258 0027 49       		.uleb128 0x49
 2259 0028 13       		.uleb128 0x13
 2260 0029 38       		.uleb128 0x38
 2261 002a 0B       		.uleb128 0xb
 2262 002b 00       		.byte	0
 2263 002c 00       		.byte	0
 2264 002d 04       		.uleb128 0x4
 2265 002e 24       		.uleb128 0x24
 2266 002f 00       		.byte	0
 2267 0030 0B       		.uleb128 0xb
 2268 0031 0B       		.uleb128 0xb
 2269 0032 3E       		.uleb128 0x3e
 2270 0033 0B       		.uleb128 0xb
 2271 0034 03       		.uleb128 0x3
 2272 0035 0E       		.uleb128 0xe
 2273 0036 00       		.byte	0
 2274 0037 00       		.byte	0
 2275 0038 05       		.uleb128 0x5
 2276 0039 28       		.uleb128 0x28
 2277 003a 00       		.byte	0
 2278 003b 03       		.uleb128 0x3
 2279 003c 0E       		.uleb128 0xe
 2280 003d 1C       		.uleb128 0x1c
 2281 003e 0D       		.uleb128 0xd
 2282 003f 00       		.byte	0
 2283 0040 00       		.byte	0
 2284 0041 06       		.uleb128 0x6
 2285 0042 05       		.uleb128 0x5
 2286 0043 00       		.byte	0
 2287 0044 03       		.uleb128 0x3
 2288 0045 08       		.uleb128 0x8
 2289 0046 3A       		.uleb128 0x3a
 2290 0047 21       		.uleb128 0x21
 2291 0048 01       		.sleb128 1
 2292 0049 3B       		.uleb128 0x3b
 2293 004a 0B       		.uleb128 0xb
 2294 004b 39       		.uleb128 0x39
 2295 004c 0B       		.uleb128 0xb
 2296 004d 49       		.uleb128 0x49
 2297 004e 13       		.uleb128 0x13
 2298 004f 02       		.uleb128 0x2
 2299 0050 18       		.uleb128 0x18
 2300 0051 00       		.byte	0
 2301 0052 00       		.byte	0
 2302 0053 07       		.uleb128 0x7
 2303 0054 16       		.uleb128 0x16
 2304 0055 00       		.byte	0
 2305 0056 03       		.uleb128 0x3
 2306 0057 0E       		.uleb128 0xe
 2307 0058 3A       		.uleb128 0x3a
 2308 0059 0B       		.uleb128 0xb
 2309 005a 3B       		.uleb128 0x3b
 2310 005b 0B       		.uleb128 0xb
 2311 005c 39       		.uleb128 0x39
 2312 005d 0B       		.uleb128 0xb
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 72


 2313 005e 49       		.uleb128 0x49
 2314 005f 13       		.uleb128 0x13
 2315 0060 00       		.byte	0
 2316 0061 00       		.byte	0
 2317 0062 08       		.uleb128 0x8
 2318 0063 0D       		.uleb128 0xd
 2319 0064 00       		.byte	0
 2320 0065 03       		.uleb128 0x3
 2321 0066 0E       		.uleb128 0xe
 2322 0067 3A       		.uleb128 0x3a
 2323 0068 21       		.uleb128 0x21
 2324 0069 02       		.sleb128 2
 2325 006a 3B       		.uleb128 0x3b
 2326 006b 05       		.uleb128 0x5
 2327 006c 39       		.uleb128 0x39
 2328 006d 21       		.uleb128 0x21
 2329 006e 12       		.sleb128 18
 2330 006f 49       		.uleb128 0x49
 2331 0070 13       		.uleb128 0x13
 2332 0071 38       		.uleb128 0x38
 2333 0072 05       		.uleb128 0x5
 2334 0073 00       		.byte	0
 2335 0074 00       		.byte	0
 2336 0075 09       		.uleb128 0x9
 2337 0076 01       		.uleb128 0x1
 2338 0077 01       		.byte	0x1
 2339 0078 49       		.uleb128 0x49
 2340 0079 13       		.uleb128 0x13
 2341 007a 01       		.uleb128 0x1
 2342 007b 13       		.uleb128 0x13
 2343 007c 00       		.byte	0
 2344 007d 00       		.byte	0
 2345 007e 0A       		.uleb128 0xa
 2346 007f 21       		.uleb128 0x21
 2347 0080 00       		.byte	0
 2348 0081 49       		.uleb128 0x49
 2349 0082 13       		.uleb128 0x13
 2350 0083 2F       		.uleb128 0x2f
 2351 0084 0B       		.uleb128 0xb
 2352 0085 00       		.byte	0
 2353 0086 00       		.byte	0
 2354 0087 0B       		.uleb128 0xb
 2355 0088 0D       		.uleb128 0xd
 2356 0089 00       		.byte	0
 2357 008a 03       		.uleb128 0x3
 2358 008b 0E       		.uleb128 0xe
 2359 008c 3A       		.uleb128 0x3a
 2360 008d 21       		.uleb128 0x21
 2361 008e 01       		.sleb128 1
 2362 008f 3B       		.uleb128 0x3b
 2363 0090 0B       		.uleb128 0xb
 2364 0091 39       		.uleb128 0x39
 2365 0092 0B       		.uleb128 0xb
 2366 0093 49       		.uleb128 0x49
 2367 0094 13       		.uleb128 0x13
 2368 0095 38       		.uleb128 0x38
 2369 0096 0B       		.uleb128 0xb
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 73


 2370 0097 00       		.byte	0
 2371 0098 00       		.byte	0
 2372 0099 0C       		.uleb128 0xc
 2373 009a 34       		.uleb128 0x34
 2374 009b 00       		.byte	0
 2375 009c 03       		.uleb128 0x3
 2376 009d 0E       		.uleb128 0xe
 2377 009e 3A       		.uleb128 0x3a
 2378 009f 21       		.uleb128 0x21
 2379 00a0 01       		.sleb128 1
 2380 00a1 3B       		.uleb128 0x3b
 2381 00a2 0B       		.uleb128 0xb
 2382 00a3 39       		.uleb128 0x39
 2383 00a4 0B       		.uleb128 0xb
 2384 00a5 49       		.uleb128 0x49
 2385 00a6 13       		.uleb128 0x13
 2386 00a7 3F       		.uleb128 0x3f
 2387 00a8 19       		.uleb128 0x19
 2388 00a9 02       		.uleb128 0x2
 2389 00aa 18       		.uleb128 0x18
 2390 00ab 00       		.byte	0
 2391 00ac 00       		.byte	0
 2392 00ad 0D       		.uleb128 0xd
 2393 00ae 34       		.uleb128 0x34
 2394 00af 00       		.byte	0
 2395 00b0 03       		.uleb128 0x3
 2396 00b1 08       		.uleb128 0x8
 2397 00b2 3A       		.uleb128 0x3a
 2398 00b3 21       		.uleb128 0x21
 2399 00b4 01       		.sleb128 1
 2400 00b5 3B       		.uleb128 0x3b
 2401 00b6 0B       		.uleb128 0xb
 2402 00b7 39       		.uleb128 0x39
 2403 00b8 0B       		.uleb128 0xb
 2404 00b9 49       		.uleb128 0x49
 2405 00ba 13       		.uleb128 0x13
 2406 00bb 02       		.uleb128 0x2
 2407 00bc 18       		.uleb128 0x18
 2408 00bd 00       		.byte	0
 2409 00be 00       		.byte	0
 2410 00bf 0E       		.uleb128 0xe
 2411 00c0 05       		.uleb128 0x5
 2412 00c1 00       		.byte	0
 2413 00c2 03       		.uleb128 0x3
 2414 00c3 0E       		.uleb128 0xe
 2415 00c4 3A       		.uleb128 0x3a
 2416 00c5 21       		.uleb128 0x21
 2417 00c6 01       		.sleb128 1
 2418 00c7 3B       		.uleb128 0x3b
 2419 00c8 0B       		.uleb128 0xb
 2420 00c9 39       		.uleb128 0x39
 2421 00ca 0B       		.uleb128 0xb
 2422 00cb 49       		.uleb128 0x49
 2423 00cc 13       		.uleb128 0x13
 2424 00cd 02       		.uleb128 0x2
 2425 00ce 18       		.uleb128 0x18
 2426 00cf 00       		.byte	0
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 74


 2427 00d0 00       		.byte	0
 2428 00d1 0F       		.uleb128 0xf
 2429 00d2 35       		.uleb128 0x35
 2430 00d3 00       		.byte	0
 2431 00d4 49       		.uleb128 0x49
 2432 00d5 13       		.uleb128 0x13
 2433 00d6 00       		.byte	0
 2434 00d7 00       		.byte	0
 2435 00d8 10       		.uleb128 0x10
 2436 00d9 16       		.uleb128 0x16
 2437 00da 00       		.byte	0
 2438 00db 03       		.uleb128 0x3
 2439 00dc 0E       		.uleb128 0xe
 2440 00dd 3A       		.uleb128 0x3a
 2441 00de 0B       		.uleb128 0xb
 2442 00df 3B       		.uleb128 0x3b
 2443 00e0 05       		.uleb128 0x5
 2444 00e1 39       		.uleb128 0x39
 2445 00e2 0B       		.uleb128 0xb
 2446 00e3 49       		.uleb128 0x49
 2447 00e4 13       		.uleb128 0x13
 2448 00e5 00       		.byte	0
 2449 00e6 00       		.byte	0
 2450 00e7 11       		.uleb128 0x11
 2451 00e8 2E       		.uleb128 0x2e
 2452 00e9 01       		.byte	0x1
 2453 00ea 3F       		.uleb128 0x3f
 2454 00eb 19       		.uleb128 0x19
 2455 00ec 03       		.uleb128 0x3
 2456 00ed 0E       		.uleb128 0xe
 2457 00ee 3A       		.uleb128 0x3a
 2458 00ef 21       		.uleb128 0x21
 2459 00f0 01       		.sleb128 1
 2460 00f1 3B       		.uleb128 0x3b
 2461 00f2 0B       		.uleb128 0xb
 2462 00f3 39       		.uleb128 0x39
 2463 00f4 21       		.uleb128 0x21
 2464 00f5 05       		.sleb128 5
 2465 00f6 27       		.uleb128 0x27
 2466 00f7 19       		.uleb128 0x19
 2467 00f8 49       		.uleb128 0x49
 2468 00f9 13       		.uleb128 0x13
 2469 00fa 11       		.uleb128 0x11
 2470 00fb 01       		.uleb128 0x1
 2471 00fc 12       		.uleb128 0x12
 2472 00fd 06       		.uleb128 0x6
 2473 00fe 40       		.uleb128 0x40
 2474 00ff 18       		.uleb128 0x18
 2475 0100 7C       		.uleb128 0x7c
 2476 0101 19       		.uleb128 0x19
 2477 0102 01       		.uleb128 0x1
 2478 0103 13       		.uleb128 0x13
 2479 0104 00       		.byte	0
 2480 0105 00       		.byte	0
 2481 0106 12       		.uleb128 0x12
 2482 0107 34       		.uleb128 0x34
 2483 0108 00       		.byte	0
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 75


 2484 0109 03       		.uleb128 0x3
 2485 010a 0E       		.uleb128 0xe
 2486 010b 3A       		.uleb128 0x3a
 2487 010c 21       		.uleb128 0x21
 2488 010d 01       		.sleb128 1
 2489 010e 3B       		.uleb128 0x3b
 2490 010f 0B       		.uleb128 0xb
 2491 0110 39       		.uleb128 0x39
 2492 0111 0B       		.uleb128 0xb
 2493 0112 49       		.uleb128 0x49
 2494 0113 13       		.uleb128 0x13
 2495 0114 02       		.uleb128 0x2
 2496 0115 18       		.uleb128 0x18
 2497 0116 00       		.byte	0
 2498 0117 00       		.byte	0
 2499 0118 13       		.uleb128 0x13
 2500 0119 2E       		.uleb128 0x2e
 2501 011a 01       		.byte	0x1
 2502 011b 3F       		.uleb128 0x3f
 2503 011c 19       		.uleb128 0x19
 2504 011d 03       		.uleb128 0x3
 2505 011e 0E       		.uleb128 0xe
 2506 011f 3A       		.uleb128 0x3a
 2507 0120 21       		.uleb128 0x21
 2508 0121 01       		.sleb128 1
 2509 0122 3B       		.uleb128 0x3b
 2510 0123 0B       		.uleb128 0xb
 2511 0124 39       		.uleb128 0x39
 2512 0125 0B       		.uleb128 0xb
 2513 0126 27       		.uleb128 0x27
 2514 0127 19       		.uleb128 0x19
 2515 0128 49       		.uleb128 0x49
 2516 0129 13       		.uleb128 0x13
 2517 012a 11       		.uleb128 0x11
 2518 012b 01       		.uleb128 0x1
 2519 012c 12       		.uleb128 0x12
 2520 012d 06       		.uleb128 0x6
 2521 012e 40       		.uleb128 0x40
 2522 012f 18       		.uleb128 0x18
 2523 0130 7A       		.uleb128 0x7a
 2524 0131 19       		.uleb128 0x19
 2525 0132 01       		.uleb128 0x1
 2526 0133 13       		.uleb128 0x13
 2527 0134 00       		.byte	0
 2528 0135 00       		.byte	0
 2529 0136 14       		.uleb128 0x14
 2530 0137 13       		.uleb128 0x13
 2531 0138 01       		.byte	0x1
 2532 0139 0B       		.uleb128 0xb
 2533 013a 0B       		.uleb128 0xb
 2534 013b 3A       		.uleb128 0x3a
 2535 013c 21       		.uleb128 0x21
 2536 013d 05       		.sleb128 5
 2537 013e 3B       		.uleb128 0x3b
 2538 013f 05       		.uleb128 0x5
 2539 0140 39       		.uleb128 0x39
 2540 0141 21       		.uleb128 0x21
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 76


 2541 0142 09       		.sleb128 9
 2542 0143 01       		.uleb128 0x1
 2543 0144 13       		.uleb128 0x13
 2544 0145 00       		.byte	0
 2545 0146 00       		.byte	0
 2546 0147 15       		.uleb128 0x15
 2547 0148 0F       		.uleb128 0xf
 2548 0149 00       		.byte	0
 2549 014a 0B       		.uleb128 0xb
 2550 014b 21       		.uleb128 0x21
 2551 014c 04       		.sleb128 4
 2552 014d 49       		.uleb128 0x49
 2553 014e 13       		.uleb128 0x13
 2554 014f 00       		.byte	0
 2555 0150 00       		.byte	0
 2556 0151 16       		.uleb128 0x16
 2557 0152 2E       		.uleb128 0x2e
 2558 0153 00       		.byte	0
 2559 0154 3F       		.uleb128 0x3f
 2560 0155 19       		.uleb128 0x19
 2561 0156 03       		.uleb128 0x3
 2562 0157 0E       		.uleb128 0xe
 2563 0158 3A       		.uleb128 0x3a
 2564 0159 21       		.uleb128 0x21
 2565 015a 01       		.sleb128 1
 2566 015b 3B       		.uleb128 0x3b
 2567 015c 0B       		.uleb128 0xb
 2568 015d 39       		.uleb128 0x39
 2569 015e 21       		.uleb128 0x21
 2570 015f 06       		.sleb128 6
 2571 0160 27       		.uleb128 0x27
 2572 0161 19       		.uleb128 0x19
 2573 0162 11       		.uleb128 0x11
 2574 0163 01       		.uleb128 0x1
 2575 0164 12       		.uleb128 0x12
 2576 0165 06       		.uleb128 0x6
 2577 0166 40       		.uleb128 0x40
 2578 0167 18       		.uleb128 0x18
 2579 0168 7C       		.uleb128 0x7c
 2580 0169 19       		.uleb128 0x19
 2581 016a 00       		.byte	0
 2582 016b 00       		.byte	0
 2583 016c 17       		.uleb128 0x17
 2584 016d 11       		.uleb128 0x11
 2585 016e 01       		.byte	0x1
 2586 016f 25       		.uleb128 0x25
 2587 0170 0E       		.uleb128 0xe
 2588 0171 13       		.uleb128 0x13
 2589 0172 0B       		.uleb128 0xb
 2590 0173 03       		.uleb128 0x3
 2591 0174 0E       		.uleb128 0xe
 2592 0175 1B       		.uleb128 0x1b
 2593 0176 0E       		.uleb128 0xe
 2594 0177 11       		.uleb128 0x11
 2595 0178 01       		.uleb128 0x1
 2596 0179 12       		.uleb128 0x12
 2597 017a 06       		.uleb128 0x6
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 77


 2598 017b 10       		.uleb128 0x10
 2599 017c 17       		.uleb128 0x17
 2600 017d 00       		.byte	0
 2601 017e 00       		.byte	0
 2602 017f 18       		.uleb128 0x18
 2603 0180 24       		.uleb128 0x24
 2604 0181 00       		.byte	0
 2605 0182 0B       		.uleb128 0xb
 2606 0183 0B       		.uleb128 0xb
 2607 0184 3E       		.uleb128 0x3e
 2608 0185 0B       		.uleb128 0xb
 2609 0186 03       		.uleb128 0x3
 2610 0187 08       		.uleb128 0x8
 2611 0188 00       		.byte	0
 2612 0189 00       		.byte	0
 2613 018a 19       		.uleb128 0x19
 2614 018b 04       		.uleb128 0x4
 2615 018c 01       		.byte	0x1
 2616 018d 3E       		.uleb128 0x3e
 2617 018e 0B       		.uleb128 0xb
 2618 018f 0B       		.uleb128 0xb
 2619 0190 0B       		.uleb128 0xb
 2620 0191 49       		.uleb128 0x49
 2621 0192 13       		.uleb128 0x13
 2622 0193 3A       		.uleb128 0x3a
 2623 0194 0B       		.uleb128 0xb
 2624 0195 3B       		.uleb128 0x3b
 2625 0196 0B       		.uleb128 0xb
 2626 0197 39       		.uleb128 0x39
 2627 0198 0B       		.uleb128 0xb
 2628 0199 01       		.uleb128 0x1
 2629 019a 13       		.uleb128 0x13
 2630 019b 00       		.byte	0
 2631 019c 00       		.byte	0
 2632 019d 1A       		.uleb128 0x1a
 2633 019e 13       		.uleb128 0x13
 2634 019f 01       		.byte	0x1
 2635 01a0 0B       		.uleb128 0xb
 2636 01a1 05       		.uleb128 0x5
 2637 01a2 3A       		.uleb128 0x3a
 2638 01a3 0B       		.uleb128 0xb
 2639 01a4 3B       		.uleb128 0x3b
 2640 01a5 05       		.uleb128 0x5
 2641 01a6 39       		.uleb128 0x39
 2642 01a7 0B       		.uleb128 0xb
 2643 01a8 01       		.uleb128 0x1
 2644 01a9 13       		.uleb128 0x13
 2645 01aa 00       		.byte	0
 2646 01ab 00       		.byte	0
 2647 01ac 1B       		.uleb128 0x1b
 2648 01ad 0D       		.uleb128 0xd
 2649 01ae 00       		.byte	0
 2650 01af 03       		.uleb128 0x3
 2651 01b0 08       		.uleb128 0x8
 2652 01b1 3A       		.uleb128 0x3a
 2653 01b2 0B       		.uleb128 0xb
 2654 01b3 3B       		.uleb128 0x3b
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 78


 2655 01b4 05       		.uleb128 0x5
 2656 01b5 39       		.uleb128 0x39
 2657 01b6 0B       		.uleb128 0xb
 2658 01b7 49       		.uleb128 0x49
 2659 01b8 13       		.uleb128 0x13
 2660 01b9 38       		.uleb128 0x38
 2661 01ba 05       		.uleb128 0x5
 2662 01bb 00       		.byte	0
 2663 01bc 00       		.byte	0
 2664 01bd 1C       		.uleb128 0x1c
 2665 01be 21       		.uleb128 0x21
 2666 01bf 00       		.byte	0
 2667 01c0 49       		.uleb128 0x49
 2668 01c1 13       		.uleb128 0x13
 2669 01c2 2F       		.uleb128 0x2f
 2670 01c3 05       		.uleb128 0x5
 2671 01c4 00       		.byte	0
 2672 01c5 00       		.byte	0
 2673 01c6 1D       		.uleb128 0x1d
 2674 01c7 34       		.uleb128 0x34
 2675 01c8 00       		.byte	0
 2676 01c9 03       		.uleb128 0x3
 2677 01ca 0E       		.uleb128 0xe
 2678 01cb 3A       		.uleb128 0x3a
 2679 01cc 0B       		.uleb128 0xb
 2680 01cd 3B       		.uleb128 0x3b
 2681 01ce 0B       		.uleb128 0xb
 2682 01cf 39       		.uleb128 0x39
 2683 01d0 0B       		.uleb128 0xb
 2684 01d1 49       		.uleb128 0x49
 2685 01d2 13       		.uleb128 0x13
 2686 01d3 3F       		.uleb128 0x3f
 2687 01d4 19       		.uleb128 0x19
 2688 01d5 3C       		.uleb128 0x3c
 2689 01d6 19       		.uleb128 0x19
 2690 01d7 00       		.byte	0
 2691 01d8 00       		.byte	0
 2692 01d9 1E       		.uleb128 0x1e
 2693 01da 13       		.uleb128 0x13
 2694 01db 01       		.byte	0x1
 2695 01dc 03       		.uleb128 0x3
 2696 01dd 0E       		.uleb128 0xe
 2697 01de 0B       		.uleb128 0xb
 2698 01df 0B       		.uleb128 0xb
 2699 01e0 3A       		.uleb128 0x3a
 2700 01e1 0B       		.uleb128 0xb
 2701 01e2 3B       		.uleb128 0x3b
 2702 01e3 0B       		.uleb128 0xb
 2703 01e4 39       		.uleb128 0x39
 2704 01e5 0B       		.uleb128 0xb
 2705 01e6 01       		.uleb128 0x1
 2706 01e7 13       		.uleb128 0x13
 2707 01e8 00       		.byte	0
 2708 01e9 00       		.byte	0
 2709 01ea 1F       		.uleb128 0x1f
 2710 01eb 2E       		.uleb128 0x2e
 2711 01ec 00       		.byte	0
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 79


 2712 01ed 3F       		.uleb128 0x3f
 2713 01ee 19       		.uleb128 0x19
 2714 01ef 03       		.uleb128 0x3
 2715 01f0 0E       		.uleb128 0xe
 2716 01f1 3A       		.uleb128 0x3a
 2717 01f2 0B       		.uleb128 0xb
 2718 01f3 3B       		.uleb128 0x3b
 2719 01f4 0B       		.uleb128 0xb
 2720 01f5 39       		.uleb128 0x39
 2721 01f6 0B       		.uleb128 0xb
 2722 01f7 49       		.uleb128 0x49
 2723 01f8 13       		.uleb128 0x13
 2724 01f9 11       		.uleb128 0x11
 2725 01fa 01       		.uleb128 0x1
 2726 01fb 12       		.uleb128 0x12
 2727 01fc 06       		.uleb128 0x6
 2728 01fd 40       		.uleb128 0x40
 2729 01fe 18       		.uleb128 0x18
 2730 01ff 7A       		.uleb128 0x7a
 2731 0200 19       		.uleb128 0x19
 2732 0201 00       		.byte	0
 2733 0202 00       		.byte	0
 2734 0203 20       		.uleb128 0x20
 2735 0204 2E       		.uleb128 0x2e
 2736 0205 00       		.byte	0
 2737 0206 3F       		.uleb128 0x3f
 2738 0207 19       		.uleb128 0x19
 2739 0208 03       		.uleb128 0x3
 2740 0209 0E       		.uleb128 0xe
 2741 020a 3A       		.uleb128 0x3a
 2742 020b 0B       		.uleb128 0xb
 2743 020c 3B       		.uleb128 0x3b
 2744 020d 0B       		.uleb128 0xb
 2745 020e 39       		.uleb128 0x39
 2746 020f 0B       		.uleb128 0xb
 2747 0210 11       		.uleb128 0x11
 2748 0211 01       		.uleb128 0x1
 2749 0212 12       		.uleb128 0x12
 2750 0213 06       		.uleb128 0x6
 2751 0214 40       		.uleb128 0x40
 2752 0215 18       		.uleb128 0x18
 2753 0216 7C       		.uleb128 0x7c
 2754 0217 19       		.uleb128 0x19
 2755 0218 00       		.byte	0
 2756 0219 00       		.byte	0
 2757 021a 21       		.uleb128 0x21
 2758 021b 2E       		.uleb128 0x2e
 2759 021c 01       		.byte	0x1
 2760 021d 3F       		.uleb128 0x3f
 2761 021e 19       		.uleb128 0x19
 2762 021f 03       		.uleb128 0x3
 2763 0220 0E       		.uleb128 0xe
 2764 0221 3A       		.uleb128 0x3a
 2765 0222 0B       		.uleb128 0xb
 2766 0223 3B       		.uleb128 0x3b
 2767 0224 0B       		.uleb128 0xb
 2768 0225 39       		.uleb128 0x39
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 80


 2769 0226 0B       		.uleb128 0xb
 2770 0227 27       		.uleb128 0x27
 2771 0228 19       		.uleb128 0x19
 2772 0229 11       		.uleb128 0x11
 2773 022a 01       		.uleb128 0x1
 2774 022b 12       		.uleb128 0x12
 2775 022c 06       		.uleb128 0x6
 2776 022d 40       		.uleb128 0x40
 2777 022e 18       		.uleb128 0x18
 2778 022f 7C       		.uleb128 0x7c
 2779 0230 19       		.uleb128 0x19
 2780 0231 01       		.uleb128 0x1
 2781 0232 13       		.uleb128 0x13
 2782 0233 00       		.byte	0
 2783 0234 00       		.byte	0
 2784 0235 22       		.uleb128 0x22
 2785 0236 0B       		.uleb128 0xb
 2786 0237 01       		.byte	0x1
 2787 0238 11       		.uleb128 0x11
 2788 0239 01       		.uleb128 0x1
 2789 023a 12       		.uleb128 0x12
 2790 023b 06       		.uleb128 0x6
 2791 023c 00       		.byte	0
 2792 023d 00       		.byte	0
 2793 023e 23       		.uleb128 0x23
 2794 023f 2E       		.uleb128 0x2e
 2795 0240 01       		.byte	0x1
 2796 0241 03       		.uleb128 0x3
 2797 0242 0E       		.uleb128 0xe
 2798 0243 3A       		.uleb128 0x3a
 2799 0244 0B       		.uleb128 0xb
 2800 0245 3B       		.uleb128 0x3b
 2801 0246 05       		.uleb128 0x5
 2802 0247 39       		.uleb128 0x39
 2803 0248 0B       		.uleb128 0xb
 2804 0249 27       		.uleb128 0x27
 2805 024a 19       		.uleb128 0x19
 2806 024b 11       		.uleb128 0x11
 2807 024c 01       		.uleb128 0x1
 2808 024d 12       		.uleb128 0x12
 2809 024e 06       		.uleb128 0x6
 2810 024f 40       		.uleb128 0x40
 2811 0250 18       		.uleb128 0x18
 2812 0251 7A       		.uleb128 0x7a
 2813 0252 19       		.uleb128 0x19
 2814 0253 00       		.byte	0
 2815 0254 00       		.byte	0
 2816 0255 24       		.uleb128 0x24
 2817 0256 05       		.uleb128 0x5
 2818 0257 00       		.byte	0
 2819 0258 03       		.uleb128 0x3
 2820 0259 0E       		.uleb128 0xe
 2821 025a 3A       		.uleb128 0x3a
 2822 025b 0B       		.uleb128 0xb
 2823 025c 3B       		.uleb128 0x3b
 2824 025d 05       		.uleb128 0x5
 2825 025e 39       		.uleb128 0x39
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 81


 2826 025f 0B       		.uleb128 0xb
 2827 0260 49       		.uleb128 0x49
 2828 0261 13       		.uleb128 0x13
 2829 0262 02       		.uleb128 0x2
 2830 0263 18       		.uleb128 0x18
 2831 0264 00       		.byte	0
 2832 0265 00       		.byte	0
 2833 0266 00       		.byte	0
 2834              		.section	.debug_aranges,"",%progbits
 2835 0000 1C000000 		.4byte	0x1c
 2836 0004 0200     		.2byte	0x2
 2837 0006 00000000 		.4byte	.Ldebug_info0
 2838 000a 04       		.byte	0x4
 2839 000b 00       		.byte	0
 2840 000c 0000     		.2byte	0
 2841 000e 0000     		.2byte	0
 2842 0010 00000000 		.4byte	.Ltext0
 2843 0014 CC040000 		.4byte	.Letext0-.Ltext0
 2844 0018 00000000 		.4byte	0
 2845 001c 00000000 		.4byte	0
 2846              		.section	.debug_line,"",%progbits
 2847              	.Ldebug_line0:
 2848 0000 24040000 		.section	.debug_str,"MS",%progbits,1
 2848      03004C01 
 2848      00000201 
 2848      FB0E0D00 
 2848      01010101 
 2849              	.LASF44:
 2850 0000 5553425F 		.ascii	"USB_LP_CAN1_RX0_IRQn\000"
 2850      4C505F43 
 2850      414E315F 
 2850      5258305F 
 2850      4952516E 
 2851              	.LASF89:
 2852 0015 41504231 		.ascii	"APB1ENR\000"
 2852      454E5200 
 2853              	.LASF81:
 2854 001d 42535252 		.ascii	"BSRR\000"
 2854      00
 2855              	.LASF113:
 2856 0022 50757442 		.ascii	"PutBuf\000"
 2856      756600
 2857              	.LASF124:
 2858 0029 474E5520 		.ascii	"GNU C99 13.2.1 20231009 -mthumb -mcpu=cortex-m3 -mf"
 2858      43393920 
 2858      31332E32 
 2858      2E312032 
 2858      30323331 
 2859 005c 6C6F6174 		.ascii	"loat-abi=soft -march=armv7-m -g -std=gnu99 -fno-com"
 2859      2D616269 
 2859      3D736F66 
 2859      74202D6D 
 2859      61726368 
 2860 008f 6D6F6E00 		.ascii	"mon\000"
 2861              	.LASF85:
 2862 0093 41504232 		.ascii	"APB2RSTR\000"
 2862      52535452 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 82


 2862      00
 2863              	.LASF46:
 2864 009c 43414E31 		.ascii	"CAN1_SCE_IRQn\000"
 2864      5F534345 
 2864      5F495251 
 2864      6E00
 2865              	.LASF41:
 2866 00aa 444D4131 		.ascii	"DMA1_Channel7_IRQn\000"
 2866      5F436861 
 2866      6E6E656C 
 2866      375F4952 
 2866      516E00
 2867              	.LASF58:
 2868 00bd 49324332 		.ascii	"I2C2_ER_IRQn\000"
 2868      5F45525F 
 2868      4952516E 
 2868      00
 2869              	.LASF114:
 2870 00ca 72784176 		.ascii	"rxAvailable\000"
 2870      61696C61 
 2870      626C6500 
 2871              	.LASF54:
 2872 00d6 54494D34 		.ascii	"TIM4_IRQn\000"
 2872      5F495251 
 2872      6E00
 2873              	.LASF36:
 2874 00e0 444D4131 		.ascii	"DMA1_Channel2_IRQn\000"
 2874      5F436861 
 2874      6E6E656C 
 2874      325F4952 
 2874      516E00
 2875              	.LASF11:
 2876 00f3 756E7369 		.ascii	"unsigned int\000"
 2876      676E6564 
 2876      20696E74 
 2876      00
 2877              	.LASF90:
 2878 0100 42444352 		.ascii	"BDCR\000"
 2878      00
 2879              	.LASF5:
 2880 0105 5F5F696E 		.ascii	"__int32_t\000"
 2880      7433325F 
 2880      7400
 2881              	.LASF28:
 2882 010f 464C4153 		.ascii	"FLASH_IRQn\000"
 2882      485F4952 
 2882      516E00
 2883              	.LASF30:
 2884 011a 45585449 		.ascii	"EXTI0_IRQn\000"
 2884      305F4952 
 2884      516E00
 2885              	.LASF64:
 2886 0125 45585449 		.ascii	"EXTI15_10_IRQn\000"
 2886      31355F31 
 2886      305F4952 
 2886      516E00
 2887              	.LASF22:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 83


 2888 0134 50656E64 		.ascii	"PendSV_IRQn\000"
 2888      53565F49 
 2888      52516E00 
 2889              	.LASF29:
 2890 0140 5243435F 		.ascii	"RCC_IRQn\000"
 2890      4952516E 
 2890      00
 2891              	.LASF92:
 2892 0149 47545052 		.ascii	"GTPR\000"
 2892      00
 2893              	.LASF122:
 2894 014e 52656164 		.ascii	"ReadCom\000"
 2894      436F6D00 
 2895              	.LASF17:
 2896 0156 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 2896      72794D61 
 2896      6E616765 
 2896      6D656E74 
 2896      5F495251 
 2897              	.LASF111:
 2898 016c 47657442 		.ascii	"GetBuf\000"
 2898      756600
 2899              	.LASF14:
 2900 0173 75696E74 		.ascii	"uint32_t\000"
 2900      33325F74 
 2900      00
 2901              	.LASF105:
 2902 017c 436F6D42 		.ascii	"ComBusy\000"
 2902      75737900 
 2903              	.LASF68:
 2904 0184 49534552 		.ascii	"ISER\000"
 2904      00
 2905              	.LASF48:
 2906 0189 54494D31 		.ascii	"TIM1_BRK_IRQn\000"
 2906      5F42524B 
 2906      5F495251 
 2906      6E00
 2907              	.LASF71:
 2908 0197 52534552 		.ascii	"RSERVED1\000"
 2908      56454431 
 2908      00
 2909              	.LASF59:
 2910 01a0 53504931 		.ascii	"SPI1_IRQn\000"
 2910      5F495251 
 2910      6E00
 2911              	.LASF104:
 2912 01aa 436F6D45 		.ascii	"ComError\000"
 2912      72726F72 
 2912      00
 2913              	.LASF38:
 2914 01b3 444D4131 		.ascii	"DMA1_Channel4_IRQn\000"
 2914      5F436861 
 2914      6E6E656C 
 2914      345F4952 
 2914      516E00
 2915              	.LASF130:
 2916 01c6 4E564943 		.ascii	"NVIC_EnableIRQ\000"
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 84


 2916      5F456E61 
 2916      626C6549 
 2916      525100
 2917              	.LASF10:
 2918 01d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 2918      206C6F6E 
 2918      6720756E 
 2918      7369676E 
 2918      65642069 
 2919              	.LASF121:
 2920 01ec 66696C65 		.ascii	"file\000"
 2920      00
 2921              	.LASF123:
 2922 01f1 4952516E 		.ascii	"IRQn\000"
 2922      00
 2923              	.LASF116:
 2924 01f6 75736172 		.ascii	"usart_rx\000"
 2924      745F7278 
 2924      00
 2925              	.LASF110:
 2926 01ff 47657442 		.ascii	"GetBufCount\000"
 2926      7566436F 
 2926      756E7400 
 2927              	.LASF125:
 2928 020b 7372632F 		.ascii	"src/uart.c\000"
 2928      75617274 
 2928      2E6300
 2929              	.LASF45:
 2930 0216 43414E31 		.ascii	"CAN1_RX1_IRQn\000"
 2930      5F525831 
 2930      5F495251 
 2930      6E00
 2931              	.LASF129:
 2932 0224 696E6974 		.ascii	"init_uart\000"
 2932      5F756172 
 2932      7400
 2933              	.LASF43:
 2934 022e 5553425F 		.ascii	"USB_HP_CAN1_TX_IRQn\000"
 2934      48505F43 
 2934      414E315F 
 2934      54585F49 
 2934      52516E00 
 2935              	.LASF67:
 2936 0242 4952516E 		.ascii	"IRQn_Type\000"
 2936      5F547970 
 2936      6500
 2937              	.LASF126:
 2938 024c 2F557365 		.ascii	"/Users/cw/Projekte_local/maker/stm32/STM32F103_ENCO"
 2938      72732F63 
 2938      772F5072 
 2938      6F6A656B 
 2938      74655F6C 
 2939 027f 44455200 		.ascii	"DER\000"
 2940              	.LASF62:
 2941 0283 55534152 		.ascii	"USART2_IRQn\000"
 2941      54325F49 
 2941      52516E00 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 85


 2942              	.LASF91:
 2943 028f 5243435F 		.ascii	"RCC_TypeDef\000"
 2943      54797065 
 2943      44656600 
 2944              	.LASF117:
 2945 029b 62617564 		.ascii	"baud\000"
 2945      00
 2946              	.LASF119:
 2947 02a0 4275664C 		.ascii	"BufLen\000"
 2947      656E00
 2948              	.LASF93:
 2949 02a7 55534152 		.ascii	"USART_TypeDef\000"
 2949      545F5479 
 2949      70654465 
 2949      6600
 2950              	.LASF97:
 2951 02b5 436F756E 		.ascii	"Count\000"
 2951      7400
 2952              	.LASF32:
 2953 02bb 45585449 		.ascii	"EXTI2_IRQn\000"
 2953      325F4952 
 2953      516E00
 2954              	.LASF86:
 2955 02c6 41504231 		.ascii	"APB1RSTR\000"
 2955      52535452 
 2955      00
 2956              	.LASF57:
 2957 02cf 49324332 		.ascii	"I2C2_EV_IRQn\000"
 2957      5F45565F 
 2957      4952516E 
 2957      00
 2958              	.LASF107:
 2959 02dc 63686172 		.ascii	"char\000"
 2959      00
 2960              	.LASF40:
 2961 02e1 444D4131 		.ascii	"DMA1_Channel6_IRQn\000"
 2961      5F436861 
 2961      6E6E656C 
 2961      365F4952 
 2961      516E00
 2962              	.LASF53:
 2963 02f4 54494D33 		.ascii	"TIM3_IRQn\000"
 2963      5F495251 
 2963      6E00
 2964              	.LASF35:
 2965 02fe 444D4131 		.ascii	"DMA1_Channel1_IRQn\000"
 2965      5F436861 
 2965      6E6E656C 
 2965      315F4952 
 2965      516E00
 2966              	.LASF87:
 2967 0311 41484245 		.ascii	"AHBENR\000"
 2967      4E5200
 2968              	.LASF12:
 2969 0318 75696E74 		.ascii	"uint8_t\000"
 2969      385F7400 
 2970              	.LASF31:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 86


 2971 0320 45585449 		.ascii	"EXTI1_IRQn\000"
 2971      315F4952 
 2971      516E00
 2972              	.LASF66:
 2973 032b 55534257 		.ascii	"USBWakeUp_IRQn\000"
 2973      616B6555 
 2973      705F4952 
 2973      516E00
 2974              	.LASF9:
 2975 033a 6C6F6E67 		.ascii	"long long int\000"
 2975      206C6F6E 
 2975      6720696E 
 2975      7400
 2976              	.LASF24:
 2977 0348 57574447 		.ascii	"WWDG_IRQn\000"
 2977      5F495251 
 2977      6E00
 2978              	.LASF109:
 2979 0352 65707574 		.ascii	"eputs\000"
 2979      7300
 2980              	.LASF96:
 2981 0358 5461696C 		.ascii	"Tail\000"
 2981      00
 2982              	.LASF18:
 2983 035d 42757346 		.ascii	"BusFault_IRQn\000"
 2983      61756C74 
 2983      5F495251 
 2983      6E00
 2984              	.LASF34:
 2985 036b 45585449 		.ascii	"EXTI4_IRQn\000"
 2985      345F4952 
 2985      516E00
 2986              	.LASF25:
 2987 0376 5056445F 		.ascii	"PVD_IRQn\000"
 2987      4952516E 
 2987      00
 2988              	.LASF99:
 2989 037f 436F6D42 		.ascii	"ComBuffer\000"
 2989      75666665 
 2989      7200
 2990              	.LASF74:
 2991 0389 49435052 		.ascii	"ICPR\000"
 2991      00
 2992              	.LASF88:
 2993 038e 41504232 		.ascii	"APB2ENR\000"
 2993      454E5200 
 2994              	.LASF102:
 2995 0396 436F6D54 		.ascii	"ComTXBuffer\000"
 2995      58427566 
 2995      66657200 
 2996              	.LASF37:
 2997 03a2 444D4131 		.ascii	"DMA1_Channel3_IRQn\000"
 2997      5F436861 
 2997      6E6E656C 
 2997      335F4952 
 2997      516E00
 2998              	.LASF55:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 87


 2999 03b5 49324331 		.ascii	"I2C1_EV_IRQn\000"
 2999      5F45565F 
 2999      4952516E 
 2999      00
 3000              	.LASF115:
 3001 03c2 75736172 		.ascii	"usart_tx\000"
 3001      745F7478 
 3001      00
 3002              	.LASF100:
 3003 03cb 53797374 		.ascii	"SystemCoreClock\000"
 3003      656D436F 
 3003      7265436C 
 3003      6F636B00 
 3004              	.LASF95:
 3005 03db 48656164 		.ascii	"Head\000"
 3005      00
 3006              	.LASF49:
 3007 03e0 54494D31 		.ascii	"TIM1_UP_IRQn\000"
 3007      5F55505F 
 3007      4952516E 
 3007      00
 3008              	.LASF120:
 3009 03ed 5F777269 		.ascii	"_write\000"
 3009      746500
 3010              	.LASF79:
 3011 03f4 53544952 		.ascii	"STIR\000"
 3011      00
 3012              	.LASF128:
 3013 03f9 55534152 		.ascii	"USART1_IRQHandler\000"
 3013      54315F49 
 3013      52514861 
 3013      6E646C65 
 3013      7200
 3014              	.LASF65:
 3015 040b 5254435F 		.ascii	"RTC_Alarm_IRQn\000"
 3015      416C6172 
 3015      6D5F4952 
 3015      516E00
 3016              	.LASF27:
 3017 041a 5254435F 		.ascii	"RTC_IRQn\000"
 3017      4952516E 
 3017      00
 3018              	.LASF69:
 3019 0423 52455345 		.ascii	"RESERVED0\000"
 3019      52564544 
 3019      3000
 3020              	.LASF73:
 3021 042d 52455345 		.ascii	"RESERVED2\000"
 3021      52564544 
 3021      3200
 3022              	.LASF75:
 3023 0437 52455345 		.ascii	"RESERVED3\000"
 3023      52564544 
 3023      3300
 3024              	.LASF77:
 3025 0441 52455345 		.ascii	"RESERVED4\000"
 3025      52564544 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 88


 3025      3400
 3026              	.LASF78:
 3027 044b 52455345 		.ascii	"RESERVED5\000"
 3027      52564544 
 3027      3500
 3028              	.LASF2:
 3029 0455 73686F72 		.ascii	"short int\000"
 3029      7420696E 
 3029      7400
 3030              	.LASF94:
 3031 045f 42756666 		.ascii	"Buffer\000"
 3031      657200
 3032              	.LASF6:
 3033 0466 6C6F6E67 		.ascii	"long int\000"
 3033      20696E74 
 3033      00
 3034              	.LASF61:
 3035 046f 55534152 		.ascii	"USART1_IRQn\000"
 3035      54315F49 
 3035      52516E00 
 3036              	.LASF15:
 3037 047b 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 3037      61736B61 
 3037      626C6549 
 3037      6E745F49 
 3037      52516E00 
 3038              	.LASF51:
 3039 048f 54494D31 		.ascii	"TIM1_CC_IRQn\000"
 3039      5F43435F 
 3039      4952516E 
 3039      00
 3040              	.LASF103:
 3041 049c 436F6D4F 		.ascii	"ComOpen\000"
 3041      70656E00 
 3042              	.LASF84:
 3043 04a4 43464752 		.ascii	"CFGR\000"
 3043      00
 3044              	.LASF4:
 3045 04a9 5F5F7569 		.ascii	"__uint8_t\000"
 3045      6E74385F 
 3045      7400
 3046              	.LASF80:
 3047 04b3 4E564943 		.ascii	"NVIC_Type\000"
 3047      5F547970 
 3047      6500
 3048              	.LASF50:
 3049 04bd 54494D31 		.ascii	"TIM1_TRG_COM_IRQn\000"
 3049      5F545247 
 3049      5F434F4D 
 3049      5F495251 
 3049      6E00
 3050              	.LASF83:
 3051 04cf 4750494F 		.ascii	"GPIO_TypeDef\000"
 3051      5F547970 
 3051      65446566 
 3051      00
 3052              	.LASF56:
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 89


 3053 04dc 49324331 		.ascii	"I2C1_ER_IRQn\000"
 3053      5F45525F 
 3053      4952516E 
 3053      00
 3054              	.LASF23:
 3055 04e9 53797354 		.ascii	"SysTick_IRQn\000"
 3055      69636B5F 
 3055      4952516E 
 3055      00
 3056              	.LASF8:
 3057 04f6 6C6F6E67 		.ascii	"long unsigned int\000"
 3057      20756E73 
 3057      69676E65 
 3057      6420696E 
 3057      7400
 3058              	.LASF52:
 3059 0508 54494D32 		.ascii	"TIM2_IRQn\000"
 3059      5F495251 
 3059      6E00
 3060              	.LASF98:
 3061 0512 52656164 		.ascii	"Ready\000"
 3061      7900
 3062              	.LASF13:
 3063 0518 696E7433 		.ascii	"int32_t\000"
 3063      325F7400 
 3064              	.LASF21:
 3065 0520 44656275 		.ascii	"DebugMonitor_IRQn\000"
 3065      674D6F6E 
 3065      69746F72 
 3065      5F495251 
 3065      6E00
 3066              	.LASF19:
 3067 0532 55736167 		.ascii	"UsageFault_IRQn\000"
 3067      65466175 
 3067      6C745F49 
 3067      52516E00 
 3068              	.LASF1:
 3069 0542 756E7369 		.ascii	"unsigned char\000"
 3069      676E6564 
 3069      20636861 
 3069      7200
 3070              	.LASF7:
 3071 0550 5F5F7569 		.ascii	"__uint32_t\000"
 3071      6E743332 
 3071      5F7400
 3072              	.LASF47:
 3073 055b 45585449 		.ascii	"EXTI9_5_IRQn\000"
 3073      395F355F 
 3073      4952516E 
 3073      00
 3074              	.LASF20:
 3075 0568 53564361 		.ascii	"SVCall_IRQn\000"
 3075      6C6C5F49 
 3075      52516E00 
 3076              	.LASF70:
 3077 0574 49434552 		.ascii	"ICER\000"
 3077      00
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 90


 3078              	.LASF60:
 3079 0579 53504932 		.ascii	"SPI2_IRQn\000"
 3079      5F495251 
 3079      6E00
 3080              	.LASF76:
 3081 0583 49414252 		.ascii	"IABR\000"
 3081      00
 3082              	.LASF39:
 3083 0588 444D4131 		.ascii	"DMA1_Channel5_IRQn\000"
 3083      5F436861 
 3083      6E6E656C 
 3083      355F4952 
 3083      516E00
 3084              	.LASF0:
 3085 059b 7369676E 		.ascii	"signed char\000"
 3085      65642063 
 3085      68617200 
 3086              	.LASF3:
 3087 05a7 73686F72 		.ascii	"short unsigned int\000"
 3087      7420756E 
 3087      7369676E 
 3087      65642069 
 3087      6E7400
 3088              	.LASF33:
 3089 05ba 45585449 		.ascii	"EXTI3_IRQn\000"
 3089      335F4952 
 3089      516E00
 3090              	.LASF16:
 3091 05c5 48617264 		.ascii	"HardFault_IRQn\000"
 3091      4661756C 
 3091      745F4952 
 3091      516E00
 3092              	.LASF72:
 3093 05d4 49535052 		.ascii	"ISPR\000"
 3093      00
 3094              	.LASF42:
 3095 05d9 41444331 		.ascii	"ADC1_2_IRQn\000"
 3095      5F325F49 
 3095      52516E00 
 3096              	.LASF101:
 3097 05e5 436F6D52 		.ascii	"ComRXBuffer\000"
 3097      58427566 
 3097      66657200 
 3098              	.LASF108:
 3099 05f1 65676574 		.ascii	"egets\000"
 3099      7300
 3100              	.LASF63:
 3101 05f7 55534152 		.ascii	"USART3_IRQn\000"
 3101      54335F49 
 3101      52516E00 
 3102              	.LASF106:
 3103 0603 62756666 		.ascii	"bufferCount\000"
 3103      6572436F 
 3103      756E7400 
 3104              	.LASF127:
 3105 060f 74616743 		.ascii	"tagComBuffer\000"
 3105      6F6D4275 
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 91


 3105      66666572 
 3105      00
 3106              	.LASF112:
 3107 061c 44617461 		.ascii	"Data\000"
 3107      00
 3108              	.LASF26:
 3109 0621 54414D50 		.ascii	"TAMPER_IRQn\000"
 3109      45525F49 
 3109      52516E00 
 3110              	.LASF118:
 3111 062d 57726974 		.ascii	"WriteCom\000"
 3111      65436F6D 
 3111      00
 3112              	.LASF82:
 3113 0636 4C434B52 		.ascii	"LCKR\000"
 3113      00
 3114              		.ident	"GCC: (Arm GNU Toolchain 13.2.rel1 (Build arm-13.7)) 13.2.1 20231009"
ARM GAS  /var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s 			page 92


DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:18     .text:00000000 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:23     .text:00000000 NVIC_EnableIRQ
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:68     .text:0000002c $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:77     .bss:00000000 ComRXBuffer
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:74     .bss:00000000 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:83     .bss:00000050 ComTXBuffer
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:89     .bss:000000a0 ComOpen
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:95     .bss:000000a4 ComError
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:101    .bss:000000a8 ComBusy
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:104    .text:00000030 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:110    .text:00000030 ReadCom
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:866    .text:00000394 GetBuf
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:957    .text:000003e0 GetBufCount
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:202    .text:00000098 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:207    .text:000000a0 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:213    .text:000000a0 _write
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:292    .text:000000f4 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:296    .text:000000f8 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:302    .text:000000f8 WriteCom
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:751    .text:00000328 PutBuf
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:408    .text:00000180 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:414    .text:0000018c $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:420    .text:0000018c init_uart
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:565    .text:00000258 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:577    .text:0000027c $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:583    .text:0000027c USART1_IRQHandler
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:680    .text:000002d8 usart_tx
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:633    .text:000002a8 usart_rx
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:623    .text:000002a4 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:627    .text:000002a8 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:668    .text:000002cc $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:674    .text:000002d8 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:740    .text:00000320 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:745    .text:00000328 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:856    .text:00000390 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:860    .text:00000394 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:995    .text:000003f6 rxAvailable
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:1022   .text:00000408 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:1026   .text:0000040c $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:1032   .text:0000040c eputs
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:1084   .text:00000444 $d
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:1088   .text:00000448 $t
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:1094   .text:00000448 egets
/var/folders/7g/gx2z5z456bq_r9kbxlcydkzm0000gn/T//cc8DCaNA.s:1198   .text:000004c4 $d

UNDEFINED SYMBOLS
SystemCoreClock
